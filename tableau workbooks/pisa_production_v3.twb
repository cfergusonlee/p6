<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.1003.0840                               -->
<workbook source-build='10.3.4 (10300.17.1003.0840)' source-platform='mac' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='PISAVisualizationsVersion3' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Viridis 20' type='regular'>
      <color>#440154</color>
      <color>#481567</color>
      <color>#482677</color>
      <color>#453781</color>
      <color>#404788</color>
      <color>#39568c</color>
      <color>#33638d</color>
      <color>#2d708e</color>
      <color>#287d8e</color>
      <color>#238a8d</color>
      <color>#1f968b</color>
      <color>#20a387</color>
      <color>#29af7f</color>
      <color>#3cbb75</color>
      <color>#55c667</color>
      <color>#73d055</color>
      <color>#95d840</color>
      <color>#b8de29</color>
      <color>#dce319</color>
      <color>#fde725</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
        <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
        <aliases>
          <alias key='&quot;Combined Math Score&quot;' value='Math' />
          <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
          <alias key='&quot;Combined Science Score&quot;' value='Science' />
        </aliases>
        <members>
          <member alias='Math' value='&quot;Combined Math Score&quot;' />
          <member alias='Science' value='&quot;Combined Science Score&quot;' />
          <member alias='Reading' value='&quot;Combined Reading Score&quot;' />
        </members>
      </column>
      <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
        <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
        <aliases>
          <alias key='&quot;Combined Math Score&quot;' value='Math' />
          <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
          <alias key='&quot;Combined Science Score&quot;' value='Science' />
        </aliases>
        <members>
          <member alias='Math' value='&quot;Combined Math Score&quot;' />
          <member alias='Science' value='&quot;Combined Science Score&quot;' />
          <member alias='Reading' value='&quot;Combined Reading Score&quot;' />
        </members>
      </column>
      <column alias='Checks Understanding' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Checks Understanding&quot;'>
        <calculation class='tableau' formula='&quot;Checks Understanding&quot;' />
        <aliases>
          <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
          <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Thinking and Reasoning' />
          <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
          <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
          <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
        </aliases>
        <members>
          <member alias='Checks Understanding' value='&quot;Checks Understanding&quot;' />
          <member alias='Encourages Thinking and Reasoning' value='&quot;Encourages Thinking and Reasoning&quot;' />
          <member alias='Informs about Learning Goals' value='&quot;Informs about Learning Goals&quot;' />
          <member alias='Sets Clear Goals' value='&quot;Sets Clear Goals&quot;' />
          <member alias='Summarizes Previous Lessons' value='&quot;Summarizes Previous Lessons&quot;' />
        </members>
      </column>
      <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
        <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
        <aliases>
          <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
          <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
          <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
        </aliases>
        <members>
          <member alias='Language class time per week' value='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' />
          <member alias='Science class time per week' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
          <member alias='Math class time per week' value='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' />
        </members>
      </column>
      <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
        <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
        <aliases>
          <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
          <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
          <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
          <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
          <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
          <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
        </aliases>
        <members>
          <member alias='Number of Books' value='&quot;Number of Books at Home&quot;' />
          <member alias='Number of Computers' value='&quot;Number of Computers at Home&quot;' />
          <member alias='Number of Cars' value='&quot;Number of cars&quot;' />
          <member alias='Number of Cell Phones' value='&quot;Number of cell phones&quot;' />
          <member alias='Number of Bathrooms' value='&quot;Number of bathrooms at home&quot;' />
          <member alias='Number of Televisions' value='&quot;Number of televisions at home&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='pisa_reduced' inline='true' name='federated.00tz8gs1u7anib1gro8020fd2p3x' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pisa_reduced' name='textscan.1t3sibp1k49p5c15jm0ea03rdu53'>
            <connection class='textscan' directory='/Users/courtneyfergusonlee/p6/data' filename='pisa_reduced.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1t3sibp1k49p5c15jm0ea03rdu53' name='pisa_reduced.csv' table='[pisa_reduced#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country code 3-character' ordinal='1' />
            <column datatype='string' name='Gender' ordinal='2' />
            <column datatype='string' name='Mother Current Job Status' ordinal='3' />
            <column datatype='string' name='Possessions - Internet' ordinal='4' />
            <column datatype='string' name='Time of computer use (mins)' ordinal='5' />
            <column datatype='string' name='How many - cellular phones' ordinal='6' />
            <column datatype='string' name='How many - televisions' ordinal='7' />
            <column datatype='string' name='How many - computers' ordinal='8' />
            <column datatype='string' name='How many - cars' ordinal='9' />
            <column datatype='string' name='How many - rooms bath or shower' ordinal='10' />
            <column datatype='string' name='How many books at home' ordinal='11' />
            <column datatype='real' name='Out-of-School Study Time - Homework' ordinal='12' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;test lang&gt;' ordinal='13' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;Maths&gt;' ordinal='14' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;Science&gt;' ordinal='15' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;test lang&gt;' ordinal='16' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;Maths&gt;' ordinal='17' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;Science&gt;' ordinal='18' />
            <column datatype='real' name='No of ALL &lt;class period&gt; a week' ordinal='19' />
            <column datatype='real' name='Class Size - No of Students in &lt;Test Language&gt; Class' ordinal='20' />
            <column datatype='string' name='Teacher-Directed Instruction - Sets Clear Goals' ordinal='21' />
            <column datatype='string' name='Teacher-Directed Instruction - Encourages Thinking and Reasoning' ordinal='22' />
            <column datatype='string' name='Teacher-Directed Instruction - Checks Understanding' ordinal='23' />
            <column datatype='string' name='Teacher-Directed Instruction - Summarizes Previous Lessons' ordinal='24' />
            <column datatype='string' name='Teacher-Directed Instruction - Informs about Learning Goals' ordinal='25' />
            <column datatype='real' name='Highest parental education in years' ordinal='26' />
            <column datatype='real' name='Learning time (minutes per week)  - &lt;test language&gt;' ordinal='27' />
            <column datatype='real' name='Learning time (minutes per week)- &lt;Mathematics&gt;' ordinal='28' />
            <column datatype='real' name='Learning time (minutes per week) - &lt;Science&gt;' ordinal='29' />
            <column datatype='real' name='Plausible value 1 in mathematics' ordinal='30' />
            <column datatype='real' name='Plausible value 2 in mathematics' ordinal='31' />
            <column datatype='real' name='Plausible value 3 in mathematics' ordinal='32' />
            <column datatype='real' name='Plausible value 4 in mathematics' ordinal='33' />
            <column datatype='real' name='Plausible value 5 in mathematics' ordinal='34' />
            <column datatype='real' name='Plausible value 1 in reading' ordinal='35' />
            <column datatype='real' name='Plausible value 2 in reading' ordinal='36' />
            <column datatype='real' name='Plausible value 3 in reading' ordinal='37' />
            <column datatype='real' name='Plausible value 4 in reading' ordinal='38' />
            <column datatype='real' name='Plausible value 5 in reading' ordinal='39' />
            <column datatype='real' name='Plausible value 1 in science' ordinal='40' />
            <column datatype='real' name='Plausible value 2 in science' ordinal='41' />
            <column datatype='real' name='Plausible value 3 in science' ordinal='42' />
            <column datatype='real' name='Plausible value 4 in science' ordinal='43' />
            <column datatype='real' name='Plausible value 5 in science' ordinal='44' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code 3-character</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code 3-character]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Country code 3-character</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mother Current Job Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mother Current Job Status]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Mother Current Job Status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Possessions - Internet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Possessions - Internet]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Possessions - Internet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time of computer use (mins)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time of computer use (mins)]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Time of computer use (mins)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - cellular phones</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - cellular phones]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - cellular phones</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - televisions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - televisions]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - televisions</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - computers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - computers]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - computers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - cars</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - cars]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - cars</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - rooms bath or shower</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - rooms bath or shower]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - rooms bath or shower</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many books at home</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many books at home]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many books at home</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Out-of-School Study Time - Homework</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Out-of-School Study Time - Homework]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Out-of-School Study Time - Homework</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;test lang&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;Maths&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;Science&gt;</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;test lang&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;Maths&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of ALL &lt;class period&gt; a week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of ALL &lt;class period&gt; a week]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of ALL &lt;class period&gt; a week</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Sets Clear Goals</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Sets Clear Goals]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Sets Clear Goals</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Encourages Thinking and Reasoning]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Checks Understanding</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Checks Understanding]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Checks Understanding</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Summarizes Previous Lessons]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Informs about Learning Goals</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Informs about Learning Goals]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Informs about Learning Goals</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest parental education in years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest parental education in years]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Highest parental education in years</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week)  - &lt;test language&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week)  - &lt;test language&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week)  - &lt;test language&gt;</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week)- &lt;Mathematics&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week) - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week) - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week) - &lt;Science&gt;</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in mathematics</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in mathematics</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in mathematics</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in mathematics</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in mathematics</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in reading</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in reading</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in reading</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in reading</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in reading</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in science</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in science</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in science</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in science</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in science</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;' value='Math' />
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;' value='Reading' />
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;' value='Science' />
        </aliases>
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_3366018570462093316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Combined Score (copy)]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Jitter' datatype='integer' name='[Calculation_3366018571185197067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
      </column>
      <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
      </column>
      <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Class Size - No of Students in &lt;Test Language&gt; Class]' peg='0' size='3' />
      </column>
      <column datatype='real' name='[Class Size - No of Students in &lt;Test Language&gt; Class]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Class time per week (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Student Variable (copy)]' peg='0' size='30' />
      </column>
      <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
      </column>
      <column datatype='real' name='[Combined Reading Score (copy 2)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Combined Score Type (copy 2)]' peg='0' size='20' />
      </column>
      <column caption='Combined Score Rank Percentile' datatype='real' name='[Combined Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_PERCENTILE(AVG([Combined Score Type (copy 2)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score Type (bin) (copy) (copy)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Combined Score Type (copy)]' peg='0' size='100' />
      </column>
      <column aggregation='None' caption='Combined Score Type (bin)1' datatype='integer' name='[Combined Score Type (bin) (copy)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Combined Score Type (copy)]' peg='0' size='100' />
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score Type (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Combined Score Type (copy)]' peg='0' size='11.3' />
      </column>
      <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
      </column>
      <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
      </column>
      <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Highest parental education in years (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Highest parental education in years]' peg='0' size='1.55' />
      </column>
      <column datatype='real' name='[Highest parental education in years]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Learning time (minutes per week)  - &lt;test language&gt; (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Learning time (minutes per week)  - &lt;test language&gt;]' peg='0' size='92' />
      </column>
      <column datatype='real' name='[Learning time (minutes per week)  - &lt;test language&gt;]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Out-of-School Study Time - Homework (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Out-of-School Study Time - Homework]' peg='0' size='2.85' />
      </column>
      <column datatype='real' name='[Out-of-School Study Time - Homework]' role='measure' type='quantitative' />
      <column caption='Possessions - Internet1' datatype='string' name='[Possessions - Internet]' role='dimension' type='nominal' />
      <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
      </column>
      <column caption='Class time per week' datatype='real' name='[Student Variable (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Student Variable (copy)]&#10;WHEN &quot;Learning time (minutes per week) - &lt;test lang&gt;&quot; THEN [Learning time (minutes per week)  - &lt;test language&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Science&gt;&quot; THEN [Learning time (minutes per week) - &lt;Science&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot; THEN [Learning time (minutes per week)- &lt;Mathematics&gt;]&#10;END' />
      </column>
      <column caption='Teacher-Directed Instruction' datatype='string' name='[Survey Question (copy 3)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Number of Possessions (copy)]&#10;WHEN &quot;Checks Understanding&quot; THEN [Teacher-Directed Instruction - Checks Understanding]&#10;WHEN &quot;Encourages Thinking and Reasoning&quot; THEN [Teacher-Directed Instruction - Encourages Thinking and Reasoning]&#10;WHEN &quot;Informs about Learning Goals&quot; THEN [Teacher-Directed Instruction - Informs about Learning Goals]&#10;WHEN &quot;Sets Clear Goals&quot; THEN [Teacher-Directed Instruction - Sets Clear Goals]&#10;WHEN &quot;Summarizes Previous Lessons&quot; THEN [Teacher-Directed Instruction - Summarizes Previous Lessons]&#10;END' />
      </column>
      <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
      </column>
      <column-instance column='[Combined Score Type (bin) (copy)]' derivation='None' name='[none:Combined Score Type (bin) (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Possessions - Internet]' derivation='None' name='[none:Possessions - Internet:nk]' pivot='key' type='nominal' />
      <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Survey Question (copy 3)]' derivation='None' name='[none:Survey Question (copy 3):nk]' pivot='key' type='nominal' />
      <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Combined Math Score (copy)]' derivation='Avg' name='[rank:avg:Combined Math Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Combined Reading Score (copy)]' derivation='Avg' name='[rank:avg:Combined Reading Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Combined Science Score (copy)]' derivation='Avg' name='[rank:avg:Combined Science Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='Action (Country code 3-character)' hidden='true' name='[Action (Country code 3-character)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code 3-character]' />
        </groupfilter>
      </group>
      <group caption='Action (Country code 3-character,Gender)' hidden='true' name='[Action (Country code 3-character,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code 3-character]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Attitude Toward School,Country code 3-character,Score Percentiles)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Attributions to Failure (copy):nk]' />
          <groupfilter function='level-members' level='[none:Country code 3-character:nk]' />
          <groupfilter function='level-members' level='[none:Score Percentiles (copy):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country code 3-character,OECD country)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country code 3-character:nk]' />
          <groupfilter function='level-members' level='[none:OECD country:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Score Percentiles,Student-Teacher Relation - Teachers Listen to Students)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Score Percentiles (copy):nk]' />
          <groupfilter function='level-members' level='[none:Student-Teacher Relation - Teachers Listen to Students:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/courtneyfergusonlee/p6/data/pisa_updated.tde' schema='Extract' tablename='Extract' update-time='10/24/2017 07:48:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]' formula='SYS_NUMBIN([Class Size - No of Students in &lt;Test Language&gt; Class],3)' />
            <calculation column='[Combined Math Score (copy)]' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            <calculation column='[Combined Reading Score (copy 2)]' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            <calculation column='[Combined Reading Score (copy)]' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            <calculation column='[Combined Science Score (copy)]' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            <calculation column='[Combined Score (bin)]' formula='SYS_NUMBIN([Combined Score Type (copy 2)],20)' />
            <calculation column='[Combined Score Type (copy 2)]' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            <calculation column='[Highest parental education in years (bin)]' formula='SYS_NUMBIN([Highest parental education in years],1.55)' />
            <calculation column='[Learning time (minutes per week)  - &lt;test language&gt; (bin)]' formula='SYS_NUMBIN([Learning time (minutes per week)  - &lt;test language&gt;],92)' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Out-of-School Study Time - Homework (bin)]' formula='SYS_NUMBIN([Out-of-School Study Time - Homework],2.85)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='485490' timestamp-start='2017-10-24 19:48:37.359' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class</remote-alias>
              <ordinal>0</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.0</statistic>
                <statistic aggregation='Count' datatype='integer'>294163</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Math Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Math Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Math Score (copy)</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45421</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>228010977.52398321</statistic>
                <statistic aggregation='Avg' datatype='real'>469.65123385442172</statistic>
                <statistic aggregation='Min' datatype='real'>54.767080000000007</statistic>
                <statistic aggregation='Max' datatype='real'>903.10796000000005</statistic>
                <statistic aggregation='Stdev' datatype='real'>100.78660995613453</statistic>
                <statistic aggregation='StdevP' datatype='real'>100.78650615722842</statistic>
                <statistic aggregation='Var' datatype='real'>10157.940746449995</statistic>
                <statistic aggregation='VarP' datatype='real'>10157.91982338104</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112017205421.5448</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Reading Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Reading Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Reading Score (copy)</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72051</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229154660.99598223</statistic>
                <statistic aggregation='Avg' datatype='real'>472.00696408985198</statistic>
                <statistic aggregation='Min' datatype='real'>6.4454000000000011</statistic>
                <statistic aggregation='Max' datatype='real'>849.35973999999987</statistic>
                <statistic aggregation='Stdev' datatype='real'>98.863309987048879</statistic>
                <statistic aggregation='StdevP' datatype='real'>98.863208168926064</statistic>
                <statistic aggregation='Var' datatype='real'>9773.9540615953192</statistic>
                <statistic aggregation='VarP' datatype='real'>9773.9339294524088</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112907743027.16263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Science Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Science Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Science Score (copy)</remote-alias>
              <ordinal>3</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38897</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>231000071.57064065</statistic>
                <statistic aggregation='Avg' datatype='real'>475.80809403003286</statistic>
                <statistic aggregation='Min' datatype='real'>25.158540000000002</statistic>
                <statistic aggregation='Max' datatype='real'>857.8329</statistic>
                <statistic aggregation='Stdev' datatype='real'>97.998469592891183</statistic>
                <statistic aggregation='StdevP' datatype='real'>97.998368665456994</statistic>
                <statistic aggregation='Var' datatype='real'>9603.7000425488186</statistic>
                <statistic aggregation='VarP' datatype='real'>9603.6802610908235</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>114574194504.7847</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Score Type (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Score Type (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Score Type (copy 2)</remote-alias>
              <ordinal>4</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>484179</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>688165710.09059441</statistic>
                <statistic aggregation='Avg' datatype='real'>1417.4662919742825</statistic>
                <statistic aggregation='Min' datatype='real'>231.34377999999998</statistic>
                <statistic aggregation='Max' datatype='real'>2479.7760800000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>288.10881318910867</statistic>
                <statistic aggregation='StdevP' datatype='real'>288.10851646933941</statistic>
                <statistic aggregation='Var' datatype='real'>83006.688237236711</statistic>
                <statistic aggregation='VarP' datatype='real'>83006.517262163616</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1015750531411.5718</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code 3-character</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code 3-character]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code 3-character</remote-alias>
              <ordinal>5</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Albania&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>6</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>485490</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>117850027305.0</statistic>
                <statistic aggregation='Avg' datatype='real'>242744.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>485489</statistic>
                <statistic aggregation='Stdev' datatype='real'>140149.03543079295</statistic>
                <statistic aggregation='StdevP' datatype='real'>140148.89109300266</statistic>
                <statistic aggregation='Var' datatype='real'>19641752132.18166</statistic>
                <statistic aggregation='VarP' datatype='real'>19641711674.598324</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38143300554039312.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Female&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest parental education in years</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Highest parental education in years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest parental education in years</remote-alias>
              <ordinal>8</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>18.0</statistic>
                <statistic aggregation='Count' datatype='integer'>473091</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - cars</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - cars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - cars</remote-alias>
              <ordinal>9</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>472499</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - cellular phones</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - cellular phones]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - cellular phones</remote-alias>
              <ordinal>10</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>477079</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - computers</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - computers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - computers</remote-alias>
              <ordinal>11</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473459</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - rooms bath or shower</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - rooms bath or shower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - rooms bath or shower</remote-alias>
              <ordinal>12</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>469643</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - televisions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - televisions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - televisions</remote-alias>
              <ordinal>13</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>476548</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many books at home</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many books at home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many books at home</remote-alias>
              <ordinal>14</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0-10 books&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;More than 500 books&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473765</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)  - &lt;test language&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week)  - &lt;test language&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)  - &lt;test language&gt;</remote-alias>
              <ordinal>15</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>426</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2400.0</statistic>
                <statistic aggregation='Count' datatype='integer'>282866</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week) - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week) - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week) - &lt;Science&gt;</remote-alias>
              <ordinal>16</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>463</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2975.0</statistic>
                <statistic aggregation='Count' datatype='integer'>270914</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week)- &lt;Mathematics&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-alias>
              <ordinal>17</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>398</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>283303</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;Maths&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-alias>
              <ordinal>18</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>298601</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;Science&gt;</remote-alias>
              <ordinal>19</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>291943</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;test lang&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-alias>
              <ordinal>20</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>299618</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mother Current Job Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Mother Current Job Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mother Current Job Status</remote-alias>
              <ordinal>21</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Not working, but looking for a job &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Working part-time &lt;for pay&gt;&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>467751</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;Maths&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-alias>
              <ordinal>22</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>298339</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-alias>
              <ordinal>23</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>289068</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;test lang&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-alias>
              <ordinal>24</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>296878</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of ALL &lt;class period&gt; a week</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of ALL &lt;class period&gt; a week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of ALL &lt;class period&gt; a week</remote-alias>
              <ordinal>25</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.0</statistic>
                <statistic aggregation='Count' datatype='integer'>255665</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>26</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Out-of-School Study Time - Homework</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Out-of-School Study Time - Homework]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Out-of-School Study Time - Homework</remote-alias>
              <ordinal>27</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>30.0</statistic>
                <statistic aggregation='Count' datatype='integer'>301367</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in mathematics</remote-alias>
              <ordinal>28</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7063</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>19.7928</statistic>
                <statistic aggregation='Max' datatype='real'>962.22929999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in reading</remote-alias>
              <ordinal>29</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11556</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.083400000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>904.80259999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in science</remote-alias>
              <ordinal>30</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6153</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.6482999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>903.3383</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in mathematics</remote-alias>
              <ordinal>31</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7044</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.4729999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>957.0104</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in reading</remote-alias>
              <ordinal>32</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11570</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.70350000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>881.23919999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in science</remote-alias>
              <ordinal>33</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6162</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.8348</statistic>
                <statistic aggregation='Max' datatype='real'>900.54079999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in mathematics</remote-alias>
              <ordinal>34</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.226199999999999</statistic>
                <statistic aggregation='Max' datatype='real'>935.74540000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in reading</remote-alias>
              <ordinal>35</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11540</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.70350000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>884.447</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in science</remote-alias>
              <ordinal>36</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6143</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11.879899999999999</statistic>
                <statistic aggregation='Max' datatype='real'>867.62400000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in mathematics</remote-alias>
              <ordinal>37</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7091</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>24.622199999999999</statistic>
                <statistic aggregation='Max' datatype='real'>943.45690000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in reading</remote-alias>
              <ordinal>38</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11542</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.1344000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>881.15899999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in science</remote-alias>
              <ordinal>39</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6172</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>8.4297000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>926.55730000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in mathematics</remote-alias>
              <ordinal>40</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7102</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.0852</statistic>
                <statistic aggregation='Max' datatype='real'>907.62580000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in reading</remote-alias>
              <ordinal>41</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11598</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.3073999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>901.60860000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in science</remote-alias>
              <ordinal>42</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6153</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>17.7546</statistic>
                <statistic aggregation='Max' datatype='real'>880.95860000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Possessions - Internet</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Possessions - Internet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Possessions - Internet</remote-alias>
              <ordinal>43</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;No&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yes&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473182</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Checks Understanding</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Checks Understanding]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Checks Understanding</remote-alias>
              <ordinal>44</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>313875</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Encourages Thinking and Reasoning]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-alias>
              <ordinal>45</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314328</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Informs about Learning Goals</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Informs about Learning Goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Informs about Learning Goals</remote-alias>
              <ordinal>46</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>313846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Sets Clear Goals</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Sets Clear Goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Sets Clear Goals</remote-alias>
              <ordinal>47</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314909</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Summarizes Previous Lessons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-alias>
              <ordinal>48</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314201</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time of computer use (mins)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time of computer use (mins)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time of computer use (mins)</remote-alias>
              <ordinal>49</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>297074</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>66</statistic>
                <statistic aggregation='Count' datatype='integer'>294163</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Reading Score (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Reading Score (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Reading Score (copy 2)</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72051</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229154660.99597874</statistic>
                <statistic aggregation='Avg' datatype='real'>472.00696408984476</statistic>
                <statistic aggregation='Min' datatype='real'>6.4454000000000011</statistic>
                <statistic aggregation='Max' datatype='real'>849.35973999999987</statistic>
                <statistic aggregation='Stdev' datatype='real'>98.863309987137811</statistic>
                <statistic aggregation='StdevP' datatype='real'>98.863208169014982</statistic>
                <statistic aggregation='Var' datatype='real'>9773.9540616129016</statistic>
                <statistic aggregation='VarP' datatype='real'>9773.9339294699894</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112907743027.16788</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Score (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Combined Score (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Score (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>34165690.0</statistic>
                <statistic aggregation='Avg' datatype='real'>70.373622525695694</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>123</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.408320359618877</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.408305520664646</statistic>
                <statistic aggregation='Var' datatype='real'>207.59969558540783</statistic>
                <statistic aggregation='VarP' datatype='real'>207.5992679768153</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2505150740.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest parental education in years (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Highest parental education in years (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest parental education in years (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>473091</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)  - &lt;test language&gt; (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Learning time (minutes per week)  - &lt;test language&gt; (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)  - &lt;test language&gt; (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>26</statistic>
                <statistic aggregation='Count' datatype='integer'>282866</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Out-of-School Study Time - Homework (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Out-of-School Study Time - Homework (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Out-of-School Study Time - Homework (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>301367</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.638509' measure-ordering='alphabetic' measure-percentage='0.231056' parameter-percentage='0.130435' rowDisplayCount='10' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Combined Score Type (bin) (copy):ok]' palette='Viridis 20' type='palette'>
            <map to='#287d8e'>
              <bucket>8</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>9</bucket>
            </map>
            <map to='#2d708e'>
              <bucket>7</bucket>
            </map>
            <map to='#33638d'>
              <bucket>6</bucket>
            </map>
            <map to='#39568c'>
              <bucket>5</bucket>
            </map>
            <map to='#404788'>
              <bucket>4</bucket>
            </map>
            <map to='#440154'>
              <bucket>0</bucket>
            </map>
            <map to='#453781'>
              <bucket>3</bucket>
            </map>
            <map to='#481567'>
              <bucket>1</bucket>
            </map>
            <map to='#482677'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Score Percentiles (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;80 - 100th Percentile&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;60 - 80th Percentile&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;40 - 60th Percentile&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;0 - 20th Percentile&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;20 - 40th Percentile&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Possessions - Internet:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Survey Question (copy 3):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Every Lesson&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Most Lessons&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Never or Hardly Ever&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Some Lessons&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Survey Question (copy):nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;More than 500 books&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Three or more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;201-500 books&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;101-200 books&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;0-10 books&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;11-25 books&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;26-100 books&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;One&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
          <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
          <aliases>
            <alias key='&quot;Combined Math Score&quot;' value='Math' />
            <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
            <alias key='&quot;Combined Science Score&quot;' value='Science' />
          </aliases>
        </column>
        <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
          <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
          <aliases>
            <alias key='&quot;Combined Math Score&quot;' value='Math' />
            <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
            <alias key='&quot;Combined Science Score&quot;' value='Science' />
          </aliases>
        </column>
        <column alias='Checks Understanding' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Checks Understanding&quot;'>
          <calculation class='tableau' formula='&quot;Checks Understanding&quot;' />
          <aliases>
            <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
            <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Thinking and Reasoning' />
            <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
            <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
            <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
          </aliases>
        </column>
        <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
          <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
          <aliases>
            <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
            <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
            <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
          </aliases>
        </column>
        <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
          <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
          <aliases>
            <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
            <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
            <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
            <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
            <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
            <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Wikepedia for &lt;[Country code 3-character]&gt;' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Map, Rankings and Wiki' type='sheet' />
      <link caption='' expression='https://en.wikipedia.org/wiki/Education_in_&lt;[Country code 3-character]&gt;' />
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Map, Rankings and Wiki' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map, Rankings and Wiki' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Gender Dashboard' type='sheet'>
        <exclude-sheet name='Total Homework Study Time vs Score' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Total Homework Study Time vs Score' />
        <param name='special-fields' value='all' />
        <param name='target' value='Gender Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
    </datasources>
    <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
      <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Average Class Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column datatype='real' name='[Class Size - No of Students in &lt;Test Language&gt; Class]' role='measure' type='quantitative' />
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Class Size - No of Students in &lt;Test Language&gt; Class]' derivation='Avg' name='[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' value='Average Class Size'>
              <formatted-text>
                <run fontalignment='1'>Average Class Size</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Class Time vs Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
            <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
              <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
              <aliases>
                <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
                <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
                <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Learning time (minutes per week)  - &lt;test language&gt;]' role='measure' type='quantitative' />
            <column datatype='real' name='[Learning time (minutes per week) - &lt;Science&gt;]' role='measure' type='quantitative' />
            <column datatype='real' name='[Learning time (minutes per week)- &lt;Mathematics&gt;]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Class time per week' datatype='real' name='[Student Variable (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Student Variable (copy)]&#10;WHEN &quot;Learning time (minutes per week) - &lt;test lang&gt;&quot; THEN [Learning time (minutes per week)  - &lt;test language&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Science&gt;&quot; THEN [Learning time (minutes per week) - &lt;Science&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot; THEN [Learning time (minutes per week)- &lt;Mathematics&gt;]&#10;END' />
            </column>
            <column-instance column='[Combined Score Type (copy)]' derivation='Avg' name='[avg:Combined Score Type (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Student Variable (copy)]' derivation='Avg' name='[avg:Student Variable (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Combined Score Type (copy)]' value='Score Subject' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Student Variable (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Country Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Combined Math Score (copy)]' derivation='Avg' name='[rank:avg:Combined Math Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Combined Reading Score (copy)]' derivation='Avg' name='[rank:avg:Combined Reading Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Combined Science Score (copy)]' derivation='Avg' name='[rank:avg:Combined Science Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character)]'>
            <groupfilter function='level-members' level='[Country code 3-character]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' direction='DESC' using='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Female vs Male Percent Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[pcdf:usr:Calculation_451978482695856131:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Female&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' scope='cols' value='Female vs Male Percent Difference' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8d2</color>
                <color>#dfb7cb</color>
                <color>#e3a5c4</color>
                <color>#e692bd</color>
                <color>#ea7fb5</color>
                <color>#ed6cad</color>
                <color>#f157a4</color>
                <color>#f4429c</color>
                <color>#f82d92</color>
                <color>#fb1689</color>
                <color>#ff0080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</rows>
        <cols>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2])</cols>
      </table>
    </worksheet>
    <worksheet name='Gender Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[pcdf:usr:Calculation_451978482695856131:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='13513884.418610465' min='-21726095.451074563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='20795385.19418633' min='-11562168.88140836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8d2</color>
                <color>#dfb7cb</color>
                <color>#e3a5c4</color>
                <color>#e692bd</color>
                <color>#ea7fb5</color>
                <color>#ed6cad</color>
                <color>#f157a4</color>
                <color>#f4429c</color>
                <color>#f82d92</color>
                <color>#fb1689</color>
                <color>#ff0080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' value='Female vs Male Perc. Diff'>
              <formatted-text>
                <run>Female vs Male Perc. Diff</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Internet Access'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
          </datasources>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Possessions - Internet1' datatype='string' name='[Possessions - Internet]' role='dimension' type='nominal' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column-instance column='[Possessions - Internet]' derivation='None' name='[none:Possessions - Internet:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Possessions - Internet:nk]' />
              <groupfilter function='member' level='[none:Possessions - Internet:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' direction='DESC' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='152' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' />
              <wedge-size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' />
              <text column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Possessions vs Percentile'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
              <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
              <aliases>
                <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
                <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
                <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
                <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
                <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
                <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[How many - cars]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - cellular phones]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - computers]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - rooms bath or shower]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - televisions]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many books at home]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
            </column>
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]'>
            <groupfilter function='level-members' level='[none:Country code 3-character:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;More than 500 books&quot;</bucket>
              <bucket>&quot;201-500 books&quot;</bucket>
              <bucket>&quot;101-200 books&quot;</bucket>
              <bucket>&quot;26-100 books&quot;</bucket>
              <bucket>&quot;11-25 books&quot;</bucket>
              <bucket>&quot;0-10 books&quot;</bucket>
              <bucket>&quot;Three or more&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;None&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Percentile vs Highest Parental Education Level'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
              <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
              <aliases>
                <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
                <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
                <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
                <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
                <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
                <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Jitter' datatype='integer' name='[Calculation_3366018571185197067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Highest parental education in years]' role='measure' type='quantitative' />
            <column datatype='string' name='[How many - cars]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - cellular phones]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - computers]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - rooms bath or shower]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - televisions]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many books at home]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
            </column>
            <column-instance column='[Highest parental education in years]' derivation='Avg' name='[avg:Highest parental education in years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3366018571185197067]' derivation='User' name='[usr:Calculation_3366018571185197067:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Country code 3-character]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]'>
            <groupfilter function='level-members' level='[none:Country code 3-character:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;More than 500 books&quot;</bucket>
              <bucket>&quot;201-500 books&quot;</bucket>
              <bucket>&quot;101-200 books&quot;</bucket>
              <bucket>&quot;26-100 books&quot;</bucket>
              <bucket>&quot;11-25 books&quot;</bucket>
              <bucket>&quot;0-10 books&quot;</bucket>
              <bucket>&quot;Three or more&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;None&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_3366018571185197067:qk:2]' scope='cols' value='false' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_gray60' />
            <format attr='opacity' id='refline0' value='221' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <reference-line axis-column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='85' />
                <format attr='maxwidth' value='85' />
                <format attr='minheight' value='845' />
                <format attr='maxheight' value='845' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]</rows>
        <cols>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_3366018571185197067:qk:2])</cols>
      </table>
    </worksheet>
    <worksheet name='Results by Country Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Combined Score Type (copy)]' derivation='Avg' name='[avg:Combined Score Type (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='17765416.157232501' min='-26791674.762917273' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='21065335.863479204' min='-5591332.9299660251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' value='Score'>
              <formatted-text>
                <run fontalignment='1'>Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <tooltip column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Results by Country Map B'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Country Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='25831647.742064804' min='-22407823.309705451' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='18399363.73003386' min='-3741529.4664183436' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' value='Score'>
              <formatted-text>
                <run fontalignment='1'>Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' value='Subject'>
              <formatted-text>
                <run fontalignment='1'>Subject</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <tooltip column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Teacher-Directed Instruction vs Percentile'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Checks Understanding' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Checks Understanding&quot;'>
              <calculation class='tableau' formula='&quot;Checks Understanding&quot;' />
              <aliases>
                <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
                <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Thinking and Reasoning' />
                <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
                <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
                <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Teacher-Directed Instruction' datatype='string' name='[Survey Question (copy 3)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Number of Possessions (copy)]&#10;WHEN &quot;Checks Understanding&quot; THEN [Teacher-Directed Instruction - Checks Understanding]&#10;WHEN &quot;Encourages Thinking and Reasoning&quot; THEN [Teacher-Directed Instruction - Encourages Thinking and Reasoning]&#10;WHEN &quot;Informs about Learning Goals&quot; THEN [Teacher-Directed Instruction - Informs about Learning Goals]&#10;WHEN &quot;Sets Clear Goals&quot; THEN [Teacher-Directed Instruction - Sets Clear Goals]&#10;WHEN &quot;Summarizes Previous Lessons&quot; THEN [Teacher-Directed Instruction - Summarizes Previous Lessons]&#10;END' />
            </column>
            <column datatype='string' name='[Teacher-Directed Instruction - Checks Understanding]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Encourages Thinking and Reasoning]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Informs about Learning Goals]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Sets Clear Goals]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Summarizes Previous Lessons]' role='dimension' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy 3)]' derivation='None' name='[none:Survey Question (copy 3):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy 3):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy 3):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Every Lesson&quot;</bucket>
              <bucket>&quot;Most Lessons&quot;</bucket>
              <bucket>&quot;Some Lessons&quot;</bucket>
              <bucket>&quot;Never or Hardly Ever&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='Legend' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Number of Possessions (copy)]' value='Teacher Practices' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Homework Study Time vs Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Note: Bubble size represents average computer use time per day.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Math' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Math Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Math Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Out-of-School Study Time - Homework]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time of computer use (mins)]' role='dimension' type='nominal' />
            <column-instance column='[Out-of-School Study Time - Homework]' derivation='Avg' name='[avg:Out-of-School Study Time - Homework:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time of computer use (mins)]' derivation='None' name='[none:Time of computer use (mins):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time of computer use (mins):nk]' />
              <groupfilter function='member' level='[none:Time of computer use (mins):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='Score' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='Total Homework Study Time for All Subjects' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' field-type='nominal' max-size='1' min-size='0.176328' type='catsize' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' />
              <size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1342500448226929' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Gender Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='88000' x='0' y='0'>
              <zone h='100000' id='1' name='Female vs Male Percent Difference' w='41900' x='0' y='0' />
              <zone h='53375' id='7' name='Gender Map' show-title='false' w='46100' x='41900' y='0' />
              <zone h='46625' id='9' name='Total Homework Study Time vs Score' w='46100' x='41900' y='53375' />
            </zone>
            <zone fixed-size='120' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12000' x='88000' y='0'>
              <zone custom-title='true' h='7000' id='6' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='paramctrl' w='12000' x='88000' y='0'>
                <formatted-text>
                  <run fontalignment='1'>Subject</run>
                </formatted-text>
              </zone>
              <zone h='8125' id='8' name='Gender Map' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='color' w='12000' x='88000' y='7000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Map, Rankings and Wiki'>
      <style />
      <size maxheight='1104' maxwidth='1016' minheight='1104' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='922' h='100000' id='5' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99606' x='0' y='0'>
                <zone h='37409' id='1' name='Results by Country Map B' w='87129' x='0' y='0' />
                <zone forceUpdate='' h='62591' id='9' param='https://en.wikipedia.org/wiki/Education_in_Switzerland' type='web' w='61614' x='37992' y='37409' />
                <zone h='30509' id='6' name='Results by Country Map B' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' type='color' w='12477' x='87129' y='6900' />
                <zone custom-title='true' h='6900' id='7' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='paramctrl' w='12477' x='87129' y='0'>
                  <formatted-text>
                    <run fontalignment='1'>Subject</run>
                  </formatted-text>
                </zone>
                <zone h='62591' id='10' name='Country Rankings' w='37992' x='0' y='37409' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Program for International Student Assessment (PISA) Exploration' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='381' />
          <format attr='font-size' value='11' />
        </style-rule>
      </style>
      <size maxheight='1304' maxwidth='1016' minheight='1304' minwidth='1016' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3452' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='358' h='28068' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='3452' />
            <zone h='68173' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='31520'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overview and Rankings by Country&#10;&#10;PISA is a survey of students&apos; skills and knowledge as they approach the end of compulsory education. Around 510,000 students in 62 countries took part in the 2012 PISA assessment of reading, mathematics and science. Score data was not skewed by participation level but it was scaled using a calibration data set of 31,500 students.&#10;&#10;Countries that scored below 450 on previous PISA tests were offered an easier version of the assessment. This was designed to better assess what students at the lower end of the spectrum understood. Two countries accepted the offer and although it was at a lower difficulty, the results were still comparable to every other PISA participant.&#10;&#10;The map and bar charts give an overview of each country&apos;s performance. Clicking on a country will bring up its respective education overview page on Wikipedia.' captured-sheet='Map, Rankings and Wiki' id='1'>
                    <capturedDeltas>
                      <worksheet name='Results by Country Map B'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='15893624.416612376' min='-6247268.7798398305' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='24001854.550661851' min='-24236681.045698106' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Gender Differences&#10;&#10;There were mixed gender differences in math and science. In some countries, males outperformed females and in other countries the roles were reversed. In reading, however; females uniformly outperformed males in every country. The lower right plot shows how the amount of time completing homework affected subject scores.&#10;&#10;' captured-sheet='Gender Dashboard' id='3'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column alias='Reading' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' value='&quot;Combined Reading Score&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Student Home Life&#10;&#10;In addition to the reading, math and science assessments, students took part in a 30 minute background questionnaire on a wide variety of topics.&#10;&#10;We can see that student scores and parental education are positively correlated. Students in higher score percentiles tend to come from parents who have more years of education. The number of possessions also seems correlated with higher score percentiles. The number of books in the home in particular shows a strong relationship, while the number of televisions does not follow any specific pattern. Internet access is also associated with test performance.&#10;&#10;' captured-sheet='Wealth and Home Life' id='4'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column alias='Number of Books' name='[Survey Question (copy 2)]' value='&quot;Number of Books at Home&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Student School Life&#10;&#10;Let’s peer into the classrooms of the world&apos;s highest and lowest performing students. No specific practice was strongly correlated with higher test scores, but a few showed weak associations. For instance, students who scored higher reported that their teachers checked understanding most lessons, but not every lesson. In addition, increased class time had a small positive effect on student scores. &#10;&#10;Class size and student scores do not appear to be correlated. Countries with the highest (China, Taiwan and Singapore) and lowest (Mexico, Colombia and Brazil) scores also had the largest class sizes on average.&#10;&#10;' captured-sheet='School' id='5'>
                    <capturedDeltas>
                      <worksheet name='Average Class Size'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='20338407.508632269' min='-12345731.109062172' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='18879871.375988133' min='-18273893.792685714' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='School'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='74500' x='0' y='0'>
              <zone h='100000' id='1' name='Teacher-Directed Instruction vs Percentile' w='33260' x='41240' y='0' />
              <zone h='50000' id='9' name='Class Time vs Score' w='41240' x='0' y='0' />
              <zone h='50000' id='12' name='Average Class Size' w='41240' x='0' y='50000' />
            </zone>
            <zone fixed-size='255' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='25500' x='74500' y='0'>
              <zone h='13750' id='7' name='Teacher-Directed Instruction vs Percentile' pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' type='color' w='25500' x='74500' y='0' />
              <zone h='15875' id='8' mode='list' param='[Parameters].[Number of Possessions (copy)]' type='paramctrl' w='25500' x='74500' y='13750' />
            </zone>
          </zone>
        </zone>
        <zone h='7375' id='10' mode='compact' param='[Parameters].[Student Variable (copy)]' type='paramctrl' w='18500' x='11500' y='26500' />
        <zone custom-title='true' h='6250' id='11' mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='paramctrl' w='18500' x='11600' y='33125'>
          <formatted-text>
            <run>Score Subject</run>
          </formatted-text>
        </zone>
        <zone h='7750' id='13' name='Average Class Size' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' type='color' w='11800' x='14700' y='88500' />
      </zones>
    </dashboard>
    <dashboard name='Wealth and Home Life'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
      </datasources>
      <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
        <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='90638' x='0' y='0'>
              <zone h='72368' id='1' name='Number of Possessions vs Percentile' w='45318' x='45320' y='27632' />
              <zone h='27632' id='9' name='Internet Access' w='90638' x='0' y='0' />
              <zone h='72368' id='11' name='Percentile vs Highest Parental Education Level' w='45320' x='0' y='27632' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90638' y='0'>
              <zone h='15183' id='8' mode='list' param='[Parameters].[Survey Question (copy 2)]' type='paramctrl' w='9362' x='90638' y='0' />
              <zone h='14778' id='7' name='Number of Possessions vs Percentile' pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' w='9362' x='90638' y='15183' />
              <zone h='70039' id='12' name='Percentile vs Highest Parental Education Level' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' w='9362' x='90638' y='29961' />
            </zone>
          </zone>
        </zone>
        <zone h='7287' id='10' leg-item-layout='horz' name='Internet Access' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' show-title='false' type='color' w='13400' x='14862' y='1417' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Results by Country Map B'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Results by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Country Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Map, Rankings and Wiki'>
      <viewpoints>
        <viewpoint name='Country Rankings' />
        <viewpoint name='Results by Country Map B'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Number of Possessions vs Percentile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' />
            <card mode='list' param='[Parameters].[Survey Question (copy 2)]' type='parameter' />
            <card param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Percentile vs Highest Parental Education Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' />
            <card mode='list' param='[Parameters].[Survey Question (copy 2)]' type='parameter' />
            <card param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Internet Access'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Wealth and Home Life'>
      <viewpoints>
        <viewpoint name='Internet Access'>
          <highlight field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Possessions vs Percentile'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentile vs Highest Parental Education Level'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Gender Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='color' />
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Female vs Male Percent Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Homework Study Time vs Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
            <card pane-specification-id='1' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Gender Dashboard'>
      <viewpoints>
        <viewpoint name='Female vs Male Percent Difference' />
        <viewpoint name='Gender Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Homework Study Time vs Score'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Teacher-Directed Instruction vs Percentile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='269'>
            <card custom-title='true' mode='list' param='[Parameters].[Number of Possessions (copy)]' type='parameter' />
            <card pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Class Time vs Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Student Variable (copy)]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Class Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='School'>
      <viewpoints>
        <viewpoint name='Average Class Size'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Class Time vs Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Teacher-Directed Instruction vs Percentile'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Program for International Student Assessment (PISA) Exploration'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Class Size' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Qc133n+7kVOndPzhkZIHIgiMQAihKDKIkmJVqW5SD52Wv72H7r83b3
      vD3el47X5+2es2+9ts/aXssry7IkyxZlBQaRIkECJEgQgUROg8k5dc90ruqquu+PRjW6JwAD
      EiAhYb7nADNTXXXrdtXv97u/fEUikZC6rrOEJdxNyOVyhMNhoem6jtfr/bjns4QlfCxQPu4J
      LGEJHyeWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWW
      GGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWW
      GGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzWWGGAJdzW0j3sCNwMpJVJKLMtCSommaSiK
      ghDi457aEn5G8TPBAFJKHMchnU5jmiZCCKSUCCHwer34/X4UZWkxW8LN47YxgEu0qqqSy+WQ
      UuLxeG5qDNu2yWazKIqCZVnYtl2Q9u5Py7LIZDIEAoGllWAJN41bzgBSSrp7Bxgcj3Lw3Agr
      6wL0TqRQNA/LawNsW9NKQ10Nvuv0I5VSYts2iUQCx3EAUFUVx3GQUhbUHsdxsG0b27bRdR1d
      15eYYAk3BZHNZuWtao4rpWQqGuXrLx5jWpSDoiIdB4QoEKZmpdCcLF/55CaaGhvmHcdxHCzL
      IpfLlag87r85X+Lq2D6fD7/fv8QES7ghDMPA5/OJW6Y4j46NMxNP8PXn3yZGGBQVADHLSLW0
      IFlPFT86fJ7Y9EzhuEvYpmli2za5XK6gOrmS39X7gTlELqXENM1b9XWWcJfgQ6tAUkrS6Qzf
      O3iGbM4mmvOiBG6s6w9kfYyOT1IWCWOaJtlsFl3XUVWVdDpNIBDAsqyCqlN8P8ivEoqioCgK
      qqqiaVrBxihmlCUs4Xr4UAzgOA6nzl3kJ+/1k1TLQNFQAvOf66oxLtZWwrK2ZuLxOLZtF85x
      /6XTaXw+H5lMBqCg+7tjuDp/sUs0mUwSCASQUuJu+nEnMoJhGOi6vuS5ugPwoRjgwFtHONBl
      IrxV1z2vmHA1O8O+FREe3LGFZDJZIt1dg9aFYRglRq87hvt7NpvFcRw0TcMwDGzbLpyTyWRc
      PQ+fz3fHMIKUkoOHj7B753b6B4bxej0s72j7uKd11+IDiSApJYNDw+zatgmPzN7wfMdx8sZw
      aoJaEaO+3F8IYhWvCrMN3GJVxv3MtQVcxnHHMAwDIQSmaWIYBtlsFiklmUxmXsP544CUkjcO
      vUUqnSXg97N65TJamuZ3BCwWlmXdotndnfhADBCPx/nrHx2hZ3CU6uDcRURaBtIqNUgdI4G0
      LTyhcpa3t5JIJEok9uyfJeMVHZsv8uuuGqqqYpompmkWrrkTpL87v/6BIc6cv8SOLRsYG59g
      cirKsVMXrmu8z0fgk1NTvP7mEZLJFH/7Ty/SNzB42+b+844PxABvnjiHE2ni8LkBHtjUgWq7
      q4BEOjYRYwSc0hen+CKEwyGe3b8VwzDI5XLzGrez/y52fRavBsXnFwfFiq/Xdf1jc4s6jsN7
      p87wk1df57997dtkMlnOXbjAwPgMFzu7eO3No7x88AgHTlwuUfuKYds2h48cnXO8qrKSvfdt
      42/++RVOT3p47o2z5HK52/2Vfi5x0zaA4ziMRpMgKhhICIbGJnl6aw3dI9NomkI6HmdCryBh
      z7KGHYtPbWpEiGsS0fXkACXBLRfzeXNme4HmI27XKxQMBj808btBOVfVWmzuUW//AO+duUQ0
      GqWyrhnDNLh/7278fj9en5/zQ/3s27yCx/avxO/3zzuGqqo8sHf3nONCCAzDZDqTj7Gk0qk7
      Rs37WcOiGcC2bSYmp1BVhZ4pA8Ig9QCHr0Sp6+nD0sNU+FU6J01kqG7O9avKbTatW8nMzDXf
      fzExzTZwXW+Qi4Wk/mwbwr1OVdVbQvymaZJOp1FVteBt8vl8qKpaUOE0be5jXNbexlQ0xrvH
      3uNzn9jJ+6fP097SxMUrveQchd/9wn7qamvmvXYx6OntYzrr4LdG8GoKuZx106kmS7gJFSiX
      y/Hj1w6TSmWwVV/huOOvZCLnZzoruZwKoTjGrCsl0kiyY1UDiqJQXl6Oql4Nks0iUFf6u8fd
      v2dLt9nMUXyOpmlIKT/w1q+uQW0YBslksmBPuGkXhmGUpGdcj4C3btrAb//Gr9LZ2cXe+7bT
      0d7Krzz7C3zlFz+DEMp1r72RRD/T2U/AnsbRvPSng/zHv/wOM/HEB/rOdzNuKH4sy0JRFHw+
      H7/+hSdRVZV233H6cz6E5gUhsPQwVdYok04EO9IKgLRzODMjlEdCPPvQGjra866+hQh39nGX
      yIsjwMV/u+cUq1FuqnRZWdkH9rHncjmSyWSJyuP3+wveJDf+sBi4jL7rvnsLx4LBvGoYCoWu
      e+2Vri4Cfj9NTU3zfv7gzk0EVIufdjugeonnBIZhkM5oBBZQqZYwF9elEikl/+l//oDv/uQw
      6XS6ILGeeewBNpensOMj+RP1AIFIJX57BlzJ5dg0aHGe2buajva2AnGmUqlCVueN9H2YK+3n
      Y5TZv7upEx8ELtG6YziOgxCC8vJyAoEA4XD4A417s1ixfDmNjY0Lft7Y2MATj32KSi0LjoXq
      GJw6d4k/+9vvMjE59ZHM8ecBcxjAtm06u/sKL/5z92/k3HCav3/hbcbGJzh28hxVlRWMZTXU
      svwL8k6cRigKVV4bX+YqU2geot4mfD5fQZeOx+Nks9kSPR/mEv9sST8fZtsH7t9uOsUHhZvC
      XYx0Oo1t2/j9/gIjL+S5uVWYT82bDV3X+Xe//gS/eF8TKxvLONk5zEA2yD/+5O0S4bKEhVHC
      AI7j8NyLr/GPr59maDhPyFOxabxKjv60lzMXOvnhe8O8eOgYj25fDrk00khSXhahLxtkiHqy
      /noAhFCw0PB6dBKJBMlkcsGg13wBsWKVpxgLMYV7jev2/KAGsKLkdXNd1wsrnt/vLwTWXAP7
      wzDZrUQoGGTfzs186bFdDKVU0ANEk7mSGMsSFkbBBpBScvHSJTpam5lK9lAWyS/1e+7dxqZ1
      KZ4/eIyUHaajTDI5NcOje7fx64qK36szk2jm6MnzXDZrQDp528BIsKpSUFlRTiqVKrnpfDp9
      sd9/9gox37Wzx3DPtW274LH5IEygqiqBQKCQSuFWnRmGgWmaH9i4vt0YHBln//p6Opqq6Wht
      oqe3l+amJgKBBZKzlgBcXQEcx2F8YpJAIMiBU/3EsnkjLZlMcv7iZWzH5t51HezfsY5nP7Wb
      idg0r755FF3XUDWd105cYSZt4Ex0gszrzqurNX7lMw+iqiqhUAiPx4MQAk3TFjRo5zOIixPk
      Zp8HcyPI2Wz2QweFit2zxe7UbPbGaR8fFzasW82TD+9CKBovHDxBU+MS8c+H2fahBnDs4gAH
      j53hD7/0KF99PIiu5/N0AoEAA0MjrF+3hsqKisIAX3p8L2VlZSRSGWLTccIBL5dzIZRKB8VM
      4kxe4ZOPPFlilLppy67u7AaXgBLidrGQfeB+tpB0dxynYL98GLhqmc+Xd/mGw+HbqlK4K9eN
      4NogricqkUiQzRrU1FQzODLG/3z5NHZ6mu1rWli+rOO2zfdnEZZt8+0X3+KTe7ZSEczHTBQA
      M2cT9PuwbZuqqkpCoRAnz5xHURQe2LMT0zRJpVKMjo1x6vxl/vyFM7z6zini8RneOnaSy6kg
      QvchdD8yWAM1q3n7vXOFGxd7VorLGuGaK7MYxWrRfAGw+VYPoOCuvRXwer14PJ7CinUjn/8H
      heM4fOtHr/Mnf/MvizZci+dh2w5l5WVIKTl1sRdD+LECdXzr5eO8+e77HDh8gnQ6c8vme7uN
      /9uJw8fPcmHSwbGuaQgaQE1Q0FKm8bV/eZ3P3L+ZRDLJi8e72bR+Ld19gxx97xQpw2aUKp7e
      0cKW1jCdowmODBis8sEDzRqxRJam6hDT8SRd42n2bN1cuIlrnLo6tVvI4hpq88UGrlf5NRvF
      x1RVvSV59kKIG/rqPwwSiQSnzl2ma3SGYz1x2ssXV89cfI6ZyzE8PEx1TTUvHzjM+yM2qCEQ
      CuNpwXePDCGFxpmuV/itZx+9bh32bDiOQzKZIhgMlKiEP6s1DOcuXeHVizEqRJKg75oA0QB0
      RdITzTEuq/i71y7wqw+uJCM9/LdvvcQTu9bQ1tzIa50phD/CTCrDk/dvIZVO8/89d5S6jiY+
      sWsztu1w9tIVIsEaHtrZVAj4uFAUhUgkUvhdCFGIC8yWfO5DLg5yzQd39ShWtdLpNGVlZbfg
      kd2+Ypq+gSH+/sdvMWoGCWoWT93bwr57Ny76flJKxicm+bvvvcRQUqG+zMdQxgvKtdVPeq7F
      Ky6PJLlwqZMtG9cvavyJiQmOn73CW+dHqPWZLG9tZPvme6ivqfrYM2s/KFoa6tjTOoZlBjEN
      syAMRDablZZl8Z//8RA5NKSi4beTmFoIR2jsb4W21ibGJqZ48UKCT60t42TPJNuX1/Di2SgS
      QYXXQQiFqBNEABuqbZ791O5FPaxsNks6nZ7jBYLSvCAXN8oHcm0X1+i+0zA0PMpfPneQmBNm
      Xa3CFx+9j8qK8utec/bcedbfsw6ARDLJP718hNMDCSzFD4tZNYw4v/fZraxeuXxRczx16jRv
      nOrl0rQHxUzgk2m2rm4B22BFWxMb1626ZarmR42BwWGaGuvJ5XL4fD6hAQQCAb68/x5Gx8Z5
      81Q3lifM9hY/Hk1l9Ypmaqoqaaivw3QusqK1kTcvTjIRzxKUKZJaJTHpQQgFsJFCoIjFS0+P
      x4NhGIVU5utFel0U2xDuOS4T3Cn++fkgpeT7PzlITEZo9Cb46lOfWRQhrVm9CoCJiUn+/BvP
      MeVpBXWuh6dYcBRWVemwujHCsvbWRc9z06aNRNM2g+92srw5jDBsHtm9mfNdA3zv0HlS6QwP
      7d256PHuFEgpaZ5VgKQBzMTjdLQ2EQr4iWVs9m1dS3lZZNblXh7atRXHcfiDp3dj2TYP79QY
      Hh1ncGIa23GoLq8gkzVYs6xl0ZNSFAWv14tt2/N6b+bz+1+PuXK53C1tkuUa27dC981kMvRN
      ZvArJl/5wiOLlqKu0Ts6NkZUVMICzTxcz5X7HKWU3NviYXpyBNPMLTqHyTAMHrxvM5vXdiAd
      SWVl3gN4f1UFe7bdc1ucAbcTfYNDvHWqG4ngwc3LqK6qKiycGsDZoSQTIxf53P57ebKupnDh
      9MwM2WyW+ro6znf28ua777Gqo5mUKTnSFaO5TOXXntyHx+tleCLK2uWtTEWjTE/H8OjaovNm
      igNXC6VF3AjuNYFA4Ja+oA8TVS6G4zg899IbpPHx6LoKGurrF31tJpOhf2CQmXQOTREsFOUo
      9nFL6dARMpmZGGNFawO5nMnQ8DT1dXWF5z02Nk5VVeUcxhgdHaW1tRWvx8P3XjjA/fdtpb2l
      sRDH+VnDZHSGczEdoaic/2knv/eZMiqvVjLm/xcqpzsHqYt42bV9E0IIpqIx/umlgyi+CL/5
      C7Wc6R6mTzTRgUb3eAwZqCJtxRkaneDvDvXQoMV5+9IE0ZSBNFLogTK++sg62lvmz2Ysxuz6
      4IVygWbr/8VM46Yn3KkqkGGY9A+PUyYsHn7gyTmfSyn5wUsHuHfzOqoqKwo2zJXuXv7suXdw
      vOV5ya8tLFQKz0dKmrUpGiqqeX+gjEsX0vz05A/IeSupEjH+99/6Al6vl7/6lzexcznWtFbz
      zGP3F6LcbW1tV+dsYKPy2tvv89VnF07Mu9Nh5mzgqnroCZTYTRqASE1g6BFeOjXMqd5JVtd4
      MMwcA1YVjzb6OXHqHOPROFDJeCyBz6NSlorx2M6VnLg0gC1BOhbTShgRCLE6YjKZiHGxs5u2
      5sabdu8t5OqcLwZQ/FNRlEUv8x81Dr97jGGnlie3lxEMBud8Ho3FeP/yIGlLsL69hlAojKap
      DA0NIVVPodHYomBlGTI9DPZLED7QIKfWgxBMyTr+w18/j1eVJB0vlhLm7d4s6zvzbu9iBINB
      GqtChMMRBgaHaGps+Jl0g57tn0Io+WeuGzGElQHyLm4NQAaqEP4sDjBgSga645SLFNL2M5HU
      eGLLes70RyEhuTSS5N72MDtXL2Ptyg5efa8LhI9M1oAA4FhEk1lmPPW8OeDQdqWHtSuXLWqi
      N8oAhbmu0WLGuFNfTi6X4+LgNEhYu3x+Y/RyVz9TSh2n+qbZsLyRsxcucfJ8F3Wty7m3zc+R
      IRtxHSYoURV1PxL/7BMKPzNqhAwUUiFVaZFOpwqBSlfN+enrh/jJxTQOCbSpV2mqq6SuqY1f
      fGzPHZsTNRvZbJb+aBb8QYSVYWWZhVSvzV0BUB0DmZwAruq8vjLiIoLQ/QxG03i9Xr74yZ3U
      iGn2ramjdyrD5EwiL3WxQdGYyThIy0SoOpO+dhwtgNR8vHr4BO++f3ZREcT58n6KPyv+OTsK
      7BrRtxsfJB0iaxgMDI+DlERn5lZt5XIWRy+PgRC0V/n47hsX6BmJMq3XcWZccnEkhZ68fueH
      D5OmYQsdy5b0Dw7xyqGjvHLoKD89cIiRaApH6Pker6F6+nPVHO+a4vjpCx/4fj39Q7x94syi
      39WHTT33er08sbUFkUvTEsixYlkbQl67twb5ZlX5PJ1cXsoIBekJIYC4ka+JDQaD/Kun7mdk
      bII3erKkuyZ58F6He1fW86Oj3ZhaCFW9alIUvBSCEbWJHx+5TCoxw977dsxbtyqEIBKJYJom
      mUym5OEUqzyunTDbYHbzjNxeovOpXJZlfag64VwuR29vL0eOHscXCLJj2xbaWpoXNV44FOLp
      hzbxnQNnePkYrFrWXhIoPH7yDJenbBAq44kcEb/KSNqPZk5h+kOkshahoJ/pDzTzRUDVOXR+
      lObRaY4OXHVH2wZS9RVWDttfDYBUPXznrV6MbJak4TA0lWRlUyUP7dpyQ/srl8vx3RcPES4r
      Z+s9K6/rBZNSMjA0zMGTPcSmxtm9cTlrV62YV3283hgAOzevIxLsYtWydhKJJJadA4oCYY6U
      HDh4mPFonIm0w4y/BddokFJSqSR5Zu8a2lsaudTZxTeOjIOAX95RTUNdLc+9/j79cYml+hFC
      QZopNDuD5a/O+6TNDE46xppqjV/7/OPzEo1hGKTT6ZKJu7/P5wkqHkNV1QJj3eo+QFJKpqen
      efEnr/D+5QG8oXJs4UEoCr/y+H2sWbl8UfeTUjI+PsHI6Ci2FFRXV9PaVI8Qgr7+Af7zc++D
      5qVCTdNeE+T90aLvm50h5EyTDNzmDnLSWdDFeqPrfmVvCzu3Xos0F7eudw16Nz5xI1XVNE1e
      Pvw+R/oySO2qKpcco7Y8gFdTWN9aSXtjDcFggPJ5yl+llExOTjEyEaW6oozqqoqSvrFSytJA
      mJSSk6M2ab2ZEtVR2gihEp8ap2cggt/roWdkipXhLJ1TFlPTHtauWsFXPns/r791hKPnrrBp
      VRvRyRhbN2/ge0eHMNR8opxa1kBnbJyR0VEaG+Z2Q3OlvqZpBUl+3WdepAK5xerhcPiWEr/j
      OLz44ku8c+w9RO0afB07SU9PMDzQR2PA4sBbx4jPTLNzx/YFx4jH4wSDIVRVoa6ulrq6WqKx
      Gb75veepqGlg75ZVGNksmiKxAE0V+bYzFEk6XxnJdA6kRLm6T8JtwYdoFn6pb4ScZTGTMmiv
      L+PVN4/R2ljD6xdi1JYH0FSFR7YtY9M9q2/IAAePneGdIQlaETGG6hi3AAsGLhvIc1fANmkI
      2GxdXsPOrRtRFIXOrh66BkY5cuoS/uoWaiNe1PQ4VXVNhIN+dm9ZV2K/qH/0R3/0fw2Nx9Dt
      FBVOlNGMDkg8uRmaGUUXDigqj+/ZyJvHznBkyOGBVeV0XummZ0aQjo1RFg4ST2U5lyzHSMZ4
      6pE9mIZBbmaUsYyCUPOeGb/qsKGtcp4gG4XuzrZtF7pCQ6nuv1AgzM0zupUu0Ggsxvf/5Qec
      7I1ieKuYiY7jDVWSiE2SdPzoCkzpTZy+1Me7Z7qoCGrU1+R7pBZ3t/jrf3wJnyYJ+LwMj4xQ
      Vhahu68fv9fDa5dSnDjfS1XYQ21IpS9q4VcttnRUkJ4cwBYaFvlnJzX/omMiHzmEYHAqzdnB
      JJ0TJse6Y6RsjVUNYS5POSQcH3FT4f2+Gfr7+1ndOv8GKalUinfeP8+R7jgm1/fmCVVDaF5m
      0jkujcS50j9Kd+8Ar17J0tvXj6hdTU4NMG1qTOa8DKV1umOS9852sr6jFl1T+eM//uP/WwMY
      TQveHtFYFfLz9KZyNAWypp8fHhxmx/om9m3L+6Z3bFzF+R8dxOfZjFbeiIHOkd4EHq2TK2MJ
      kGUsq/FTVVlJRXk5F7sHaUtO0GfXI1QPWakxMZ2ipWnuMiiEKGyIAaXuzfmkuptR6qYt30oP
      kJSSY8eOc/bCJVIihAzW4fiq6L10lpwaxAFEKIKiKDjBWiYt+Pprl/jMdIIH7t2Ybx353Zd5
      6pHd/NpTD3P8bCd/8rUfsKwmwJUfHSNjKejkQC/H1EI8f2qKOnUGRAVTWY3pmTgjdhVVTJG5
      KgVnC4LFeMw+Sgj9mrSWErL4eP58ClyPixCA4Py4w1987xC/8eQu6mpKmyr3Dw7z8vlp0G+2
      q4VgxAwybEiEKlBrluOq8AiB4rlmb6W0crK2gnvkWlhPKAzPmJjdk4zOGKyv0yHSyPFxjXMv
      nabcK5lJGRiRDv751aPYtfcgAFvzMp1MMjCdQ4QUBhJ5o3RsbJyjvXGe3NpO4vIUUTygB/iX
      kxOc7hrmi5+6r6QjmpSyYAAXv+Bir0+x0RsOh29J86uFsKyjgxcOHsOuXInQfWiAnohhiKuF
      KDPTlAVrCkaihc73j40yHU/xxIM7MC2HnJnlGz84wMWYBnotp6ZBKAI8UNINVCiMOfl0gzI9
      R2tLK+8OjxCbSUG5XRIDmK9+4k5D4Z2I+Vfk4ZTOf/nuW3zl0U2sWdFeOL5m1Qqezkm+f2K0
      xFV5/ZvNc18WponZQiMvNi0TkCS1SnozAbKeCo4OmUgARSWjBBnJhUh7qpCKhlW5ouimCu9P
      ecFbBo5FfUWet+rqavlfn9nDhnvWItVrvfCl0OhKBfir514nGlvYrzGfX9/92+v1FgpVir9Y
      cSmkUdQg92Zh2zYvHTmPEmnK1zdfhapdW5Y9Hg84FsHsMIpzlZyFwnAsje04CFXjxMU+LkUV
      UDS4UUqFY+HPDLO1LcQbZ0dA1XEqV84JgN3pxL8oSElK+vjWD1/jz/7heXoHhoH8O1+7rJkH
      WgUyMbbIsRZ3msilaVSn0dJjSOeaWzXvBs0l8utW0fKqBCrnDKIoSl5CFxGFk8siFJUV6hB+
      n5fPPvhE4dzqqipePHiMmBNCVQU4NmsC01xKRUjbyhyX6Hz6/WxbwN0HbDb6+vr57g9f5pEH
      dtLdP8zZ/ml2rmvh0Yf23PQq0ds/QO/ACKanEpEcQ4bqEI6VV1tkvhmYaRgENQ9CK+fzW+uJ
      pkyiiSwRr8Kf/O3zJAwYG5KgLrJdoaJiKz5O9EwTZ66N9HODXJoQSZJ6DVEnSHRS8rUfvsW/
      /8qnOXWxh1fe66a9yod+1SlwQyzm1UZ78csk+7btpH9kHM3OAvn3ogHY3nIQ6RIjcz5JM98x
      mY0TlgmmFNjYXFuQ0heu9HKhd5T+ySQyC1L3IqVgx4ZVZN/vZNeGZYSKfOFu1dhCHSR8Pl+h
      RHE+TE5OYuRy/I8fvkuCEFLR6TvUyZZ7VlJfN7dX6UKQUnLkvbOIQDlCCRUIeH2twme/8Az/
      79efZzClI0X+3KT0EQwGWN7WhNfn5f/8uzfAU+a6mW8CAtNbyc/rLmdSOggEXhU+u+seBsan
      OdQVwZeL8uwntiKE4GTnIIa3hkspgQyEF0Xbi1oBKtupYJRj75+hzwizbds1AZqnpqvLbHHA
      aT6PQ2EFKPpMCdXQVh6hfyrNwQGJ8+YJHrt/O73DE/SMJ/B7dBRpQi6D8FXw7cO9/Mb+e2id
      J0nOVWvmU11u1Oa8uaWZ2poaLqZl3p0nHVY2hAvF/IvFuctdXJzxYuWmwSdA84KUbFjZzODY
      FCOJvKFl2Q6OnUOoOme7hjl5oZuJhIlXhdndUZcAIjFCtdfky888wYr2FkwzR+jwCYYG02xY
      v45cLseT+zbx8tGLIFSSiRnGqLnxwIvEoF0NtoESDJW4e6+K0/lbDxYT47zF67FeHt++nJaG
      Br7505NsbrIZnYjTNzDIurY69mxeQygU5EevHeHYhIaemcDUyzhxeZC21uY5k3SbUrmeoJup
      Q62vq2Pjmg5sfZKe0Wk+vXsN99+76aa8Q6dOn+YHr7xJSoax5FXVRTq0BgwU2+C/P38aW/GA
      lDiqD2mmUQLlHB92qNItJgw/fATZqIvteTRfxdzHhkgTk5aBR83PyePRefzBnWSNzbzwygF2
      bt1Ec2M9X/lsHROTU/zk7dOM3cJev0LVQJ2rPRSOWLFBFH8Ziu7DGDyJVrO8xA6YnX4sHZvN
      y+rYtX0Tqqryrz4XpH94DI9WS2N9HUMjo1fbIMJDOzcw+OODTKg+7ilLUxuZn7NdVccNhLn3
      W2yBy+6dO7hvh4PtOOg3kbcupeTosRP8+M2TiIbtOCNX3E/oiFj8zrOP8h/+6zeIm56CrHBU
      H5n4JCFfCJmeYqLII3S7cTO1w8WNg287pEPASZBWInOfhXTQMDl5aYDWlrzwE0Lg83q5b/sW
      4okk1dVVvH3iDC+fHiWnR27L45z9HPKRYCRaqIrdjZKxWJTuupWIQGWJxC9uVS6lZHVZjl/4
      5J5C8Km6qhLDNKmtruLwO0cYSQnOjVko2Ny/uorf+eLjXOnpZ2hskntWtS84QU3TUFW1ZLeX
      mwlwufGBm0FPbx/PvXoEb9uOfIBFKOAtBynZta4Fv89HIBiCZN7LJIRAs9NEKrysxjsAACAA
      SURBVELYjk1bIE2fk08KvNNwu+MFqmPSGIbRWBpFSBrKPXSliihXSsrUDJ/Y0sa9G1djO6WJ
      bUIIqiorqKqswDAMDpwdwfKUL07/vwXIU4ptETZGMKRGTyaE9JXPa/AWJI9jsWtNI9oswmxq
      qEfXdfbt2U1F0Iv0BLE9Ed64HOeFQ8fpaG3iwV3briudhRAEg8GSDnK3I815cnKy8HsymUDq
      AVyLStNUsA2kkyMczCdsmQUXq0RzDKr88Juf2UlAk0wannxW7B2I2yr5pcOnNtbyb3/tCVbV
      6nxp/z1MpMl7FO0cODYtIYt/9+WH2b97K6FQkLJIqYer2HWtqioRz8LzVZMjyOQ46nQ3Mj01
      J2fsg+Dq/kQaidAyjk/oOHow/wUcC5cgZi+5mjHNiuULdx1TVZXykD+fXAVI3c/Rzgmi0SgA
      r799/Lr+bE3TKCsrIxwO35Y9vhzH4ezZs4W/a2pqUHAQioZj5Nu3o3oRqod/ePUsrx04wMYm
      P5vr4Mv7Ovj3X9xNecjPy4dPY9qSlK8xnzn58wop8+9SSoSTAyefl7SlUePR+7ejKApPf+p+
      fvBOFwEdNlZm+P0n1vH01ip+/4sPzyH6YiQS1xT9g28fZVlNgHInhrCutaGUuQxaeoz6IAR8
      HtrDNs/uamNrnaQpaCMnOrFTMWwjXeLjXwxKRLFLaOpMP16RIy7CaJG6OdVXtsx3KKirq11w
      4AuDURBFkV49SCyeIjbTzdsDFuv6Blnecf1OBTezGcViIGV+v6/Dhw+zb9++wnFN1VC9IaR0
      qJPjdGWmCdkZkpZKbbWXBx54gInxCXKHT3Dw0hRvv3eWVHglMxlRKCqR6WjeY6Rfvx+n60n7
      WYEHk09sqCXs10lnDWrKQ6RTSd67MkZTeQWKopCzLL7x4rtkLcmj2xrZvWsnQghWL6IQqrLy
      mp25f98uAD5pmvzXf3iJtO0j5wiEbbJjeTnNdZUs72gjcrXWfPOG/HVjE9v59o9eo29gDDVQ
      jrdhzaKF5ry6SM5fje0NFj7UHAPLssHNqQjW8PVX3uff/NIjqOr86sm61mqunJ0p6MXSE+Tb
      R4aQjoXiL+O1U720tzZ9ZDW8lmXx6quvcbZnlLrKUEkvzurqKh7csgKEwqZV9/Nfvv4DspZE
      CPilJx4glUxyqfMKIZ+GmYxhy9IGvwCK7sWHQZrrM8DtNkZvacKctHl2bwf3bZ3bUGvfnvzP
      qWiM77/+Pn1xlU21XtasXvmBb+cSrcfj4fe++EkMw+B7rx1nKBlgdHiQ5c01BeIvRl1NNb/z
      y5/jL772TYZGh8gFyvGUL27/5XmpV/EGSyYkpvtAKS04j8sg33z+IAeOnJxTsWNZFpvXLkcz
      4yXHbdWHo+drMftjFvGPcE8rVVUZGh5iPGXTmS1neHS88JkQgkf2biPs9/CdHx1g6/pVWMFG
      hHTo7OpG0zQOnRuhcyRFRiknk5u7p7GjBUhrN4453E4GuFUdLABwbB7bUMW9m9cteIqUkhff
      OsXJYROE4NJwnEhZ2U3PIZvNljg9hBAEAwFiMwmmppP80u42DEvS1rqwxuD1evnEvp34hEVu
      omvRz/mGWyQBGIEG0LwlhC40L52pEK92GXzzxXdKtuXpvHKFVCoN6sL9Lh3Nx9kr/Yua5K3C
      3r17sWZGUdKTc/p+CiF491wPo1MzxEb7KdOyfGb3avbt2YWmadh2jqmsQ0jP0VAZosmbRDg3
      jtsu3mWZ17E/LEruJ22EfeM5ziEWKdnU6OHxB3Zc1wGRSqU42RMF8qtOa02I7KyKvsXA6/WW
      zDubNXjltTd4/vV3+fUn91BdVcFXf+kXblgNtmH9PezYuhHVypDpP7moe9/QbyeEQPGFKcSc
      JSU+XiEULsc99Lx4hjLV4DO711BTU8s3fnoSS8+Hs+cLyAhV5+XzMQbGDvK5/Ttuay97x5Gc
      PX+eH7x2hMb6GpKBKl4/cZFnPrGz5MHX+S1GEqOYkSY+vbWRtWtW887xU2CbZFJJ/E1rqVFz
      /OKefGneX/zTASbs6+f6XDcYJSXSNnBSUXI5C5wc3vI6hCcEV6PMC7HEfLbEbGar8WSYjJvg
      n5vXNXus4vnVaEmaQ6FCG/biduzFMAyDnJO3g1SZY+uqZsLhMOfPX6C2rpbqqqo518wHIUSh
      V9HA4BCHj7xLU0MDT+zbQn1d7aIDf4qi8PDD+xmPJZiIJVlMT+yrRbwLn1AwfKeH8FkJLH81
      hGpLPhNCYGlBJmWA3qFxVusaU4aG6s1/qdkd39x9Ahyhcrqrn4BH8On9u29b06WxsTH++eBZ
      DOnnlx7bxdtnejg3Kdnc1cPKFcvIZDJc6ryC4Sj4WreQ9Ogceu8Sr5yLkRZ+RC6NE27Ekxxm
      /841hdVjz7pGfnRyCuc6HqCF/PAyl8GcGsD2hJHectAVpGMhY6PowsYSXrzhSoRvfg/KfGOW
      bDwuLRpDMGHM00fIsdEz46Bo5HyVIEqf+3guwHsX+3i38595av9WpibGefihB+YME4lECGg2
      Cenw6c21BVth3bq1N6XqSSnz3bJPn6GjvY2nnnyiZFW4GZUqGAgQKqugtrqKo6NRlOD1mX/R
      FCdtC91O01rtpSsz/5cTwLGzV7hv81qEmcDWiroVFz2QgiqlelCqV3B0OMO9ExPzlkreCng8
      Ooo3hD+gMTkxyZUZgeL38v23L/DbtTUcfOswh870EWrfglblwQGS6Sy2Eso/fG8EzSNpKfOx
      rC3f9lEIQTyeQLVSOIp3wSjwQoQgcxlsPYj0XbMbhKLhhJsxrtbmZtNRfLq/UFF33XGdfN2A
      4zggHVp8SXqTQVDmXls1c45f1w/i2AoHYqs4WfGJ0lVdURlR2kFKvvP8ITraW3l4nu+g6zrV
      YS81wuK+zWtKVomFune4xxzHIRqN4fV6ME2TRDLJ1i2bb6rofT6oqsraZc00NdQTP3SMy6a8
      boR+0REmtbyRaVOhs7MTaS/QnE8IEsE2XnjzPWyt1JBGOnjSo7NOF3jsNKHsMMqHqEe9ETKZ
      LOsb/Pzup7dhSYlMRQGJ7Qg6u3t49dhF8ARLCU0IZC57TS8XAtOyC50rkskkW9av5nc/ey+a
      GZv3voqiIO0c5lQf5lQ/TmYamUsjs3GkZebdpvPh6rNwvOXY00NII5mfSzGKfPNYBp/ZEGZH
      o0Cx0gSMUYYyfmZy87iQpaRFTBBSJWWazR71Moo5s8A8BK0NVQvWaEspaavy8dSDWxZsST/b
      MJdSMjg0xLlz58nlcqiqSnV1NR3t7R+a+F1s2bSR6upqHtm7DcdMXffcfGe4RQwqVA9aZSvC
      NvMMoKgIoSCsDNK2wBu+ep7O6ZiOmK0aCwXTX0eZnMGLSc6WREJBPrljJd97YYCyeeqEbxWa
      m5v4fHMTuVyOTDrLvntaCHks0tkQb3ZNErd0IqZZeFHZqUEsqeIkJ7AAT0ULEtCKuk/ANZfj
      l/ev453zA3SOpbD0ssJLt1NRcvExzFArQgjMbBJF5JAoCNtCem5g9wiFrKcKkUoipI0vEEJ4
      AujSZM/KcmoqQhw82cuMadHRso6dW6vR3zhGIusjY+S4EjPz6dyOTbUnSzxtYlk2u8TlglCs
      9drUZXoY8W6Zc3vpWKxtr+OlEwNkMlkCgdI6jGg0ypa1y1jWNjexccGvJAQtzc20NC/+mpuF
      a1MYhgnRXvAGoXL+wK3IZrPyyLlefvzmqeu2HpFS5hlFCJRMFBmoRq9sRrEylKsZpkU5cp7l
      tmgAgukB6ioj1FUECWqSfbt3cuzUBX58PkFIJvjC3lWsuI37WkkpicfjDI9N8OaJM6j1y9BD
      FVhGlqnBHhIpB728gVwqRmpyBEeo4FjYpolixvm9Lz9JeVnZnP283Oc2ODTM1167Ap68jWBG
      BzA9VbcsSU5JT7BO6ePRZ75IQ31dIUPXtu05qeRSSk6e72RiJk1rbRmrlrVx8SffpKb/IFW6
      VTKlCVPnmNXKu2WfRAolnwslBNgGT22u4HT3OF/41H00z9q1fmJigurq6ttWlnorcKmrj+cP
      vMPUTAJDiwCCP/zSI1RHAtfaoqj+CJ6qxfeckbIVaaYh2sM9TUF279jM+e4R3uw3Edr8XhF7
      qpuE6iE5Da3V8OC+3QB0D41TrdpEZ5Kcu3SF5R3tt+2BCiGYnpnh3Yu96K33oHnzEk33+YnU
      1DPc/Q6edJJcJklKlCFzGerLVapXrAQry+FLg3i0Uco9sH55a6EHkaIoWLbNe+e7kKoXQZ4A
      Vd2Lkkvg6OGbYoI5Xg8pUawMG5xLfCF4kaF3BOZjv4k/GEJKiaZphWuKDcet61cXhnAcB0cP
      MLNsP56BQ0S4plLVeHI8pHYzHXuTRjnBG+FHkb4yNjcHWbNiGbquzyF+y7Koqbl1+fq3C6uX
      t9E3MMjLR87jrWsFoaAUVel9ILeLEALhDaLbAfrTXkYOniUkkzhjM4hwHUq4rqDHStsiFxvA
      zmZQPAJvRTnnegbwKIeJRqd59onHEAKGhkeYSVxfX7sVaGtt5ZnKSr7/1inwXgusDJw/TTSR
      wzvTjRKqRmOSgG7RvPI+jFQCoelodctwgL6RXlZks5SXl5NOp/F4PEjL4sxAHPz116LDwWrK
      U/08tnctI2OTHLhytVTGsVBUHWcBA7l4dXEcB9VK8Wu556j0SbzCoSN6gp7zJ1i+dW/hPNeV
      OZ/wcI/Xrd1O7OgPSeArYQAAvyr5pdBZjqWqkL4IupPhcw/uY2YmzuDQSGGMnGURi0YLCYs/
      C+hoaUDvNkBc7SxY9NmH+ga5QD0zQCDeRXVNiLpqhU0d5RwfiDGjVmEbKcyRSwhfGC1cg1A0
      qs0BRuMmRy+N8si9q1GUvAR1c8Q/CoRCIWr8gsl8UAOAivpGJrN+0P00+AzKnEmUska06SGm
      sgo+nwfHtlBUDW+kiivdvSxffm3LoZ8eehfTW+r3LtOy/MFXnyIam+a1oxeACE3+LHvWNfL2
      pQkGE8q8K0Ox69RvTLDDPM7qiIHi+hMAq+8k3XaOpo278Hp9c/K1XDi2TefJd9CmeigfPspK
      Z2Zeo8+R8EaqnjOejSjS5vN7VlBdVUnvxTPs27IGx3G4cuUKpplj9epV87a4vJPhOjiEECVf
      /5awcFNdNV1xUGxB12ic6axKmXWRtK2jtGxCAlVqik9vb8eWkkTaYNv61ej6RydB+gaGuNI3
      jN/rIej3MJHKQUAibQszNkrAp/MLOxo53TPJSFzwq089wcF3j7N5dTs/Pd2HYcHl40fQ/SEy
      ySQPf25vSbHOU48/TNk7J/npiW4y+HAUD7ZlEQz4OXOhk1EzCAI2dVSzf+8Odu8w+Ot/epW0
      adOf0JBuCxEp89mWV/+2pWB/cLBA/ACKgFWxozjRo1y+coTVz/67BSO207Eo5Sf+nhote11n
      hwTOqauIhlayb3mIPdvX53fxjI0y8fJ/51jDDrY+9nlWr159nVHuTMRTxoItWm4JBealuCBr
      6RjpafRUmli4HeG5WsklHdY3BVmzanGbtN0OvPHOCY71JhGBvFEqzDieyyOUeSz+zVeeIZvN
      MjA0gmVmmMqk+N4bp3ni3jWMjo4ikxM0VJRxmgiYHqqUGZqbmnAch67uHhRVZVl7G4/s3cae
      rWu5fKWby32jHLni0Nk3zIN7dtI3/Dw9Uya2YzMxMYGmafwvTz+Ebdv86bdeYcgIERFJ9m9q
      pDLsI+D3IyUc/ukFgsr8qpIiYEX6At3f+X8QmhfhDSCW7yJQ20aq/zxyqo/A+FnqtYV3uHck
      TNs6A00P8dl79iA8QTauy+9J1nXpIoM9XVQ3b2LXE8/S2Lz4fcbuJKSyBgu1fZzDACIxggzf
      XEDqYjyQr7nUTYZNiaxqL6RAqOlx1lY6tNWu+kCTv1Uor6jC6YqhIBEIpCdC2GPyhf3r8Xq9
      +Hw+3jl+mtaWFv63HbX8/Q/f4OuvnOGZPSsIlleTNnNok5cIeARp4eXP/+abOOFGxq0g2Dnq
      jnRSU+ZnMmEwE0/w9N7VrGqtI+zXUVWFLz/9GNMzMwwODRMIBLAsC8Mw8Hg8PPvINg4dO8sD
      2zbi8/nw+XyM9HZin/spT4uz17WfNQHLje58JX4KiJ5gxtKoUa0Fr0s4HtKBOqoyg/TW7cW/
      8RF2r1k3p91MKBLB8Ya4/7f+4Ja9h48DIb8PZHreVWAOA9ws8QOFrhJC84BWmS+cEILcVC8P
      bOngk/t23HLPjmmaqKpKNpvF5/NdN61aSknXyDTCsSm0bncsntjeSiaVZGJigtraWgzLQSgK
      VRXl/P6Xn+Qvv/FPBPxemssDHO63WNtWQ3V1FYcHJaP+CoSjgpVGeAKMOz7GYyClDork0pUe
      Nq5bTTiUD+4oioKmqrS3tiClLOTYWJZFU30Nj+7dXMi56X7+r1gRP4VXkTcRqryGMm3hjjpD
      aj3BT/02g8deR9n+eVau3ITP75+3VXk6Nknt6EmMbBbvz+i2qAB1VeUo9giOmFtcdUvCr/M1
      s3JyBt7UELs2r70tbk23H+j09DTRaLSktG4+RPxayTIYElmWtbewacM91Nbmc5seffA+2poa
      uNLVxdf+8XmaqiOsXb2KbRvWoE930d3Tk99cIRsvjCWKxpRSIu0cdiqK0HyUlZUV0gPcOuds
      NothGHnvztUEsHQ6vwmJ3+/Pd71btRdL3h5XcDbciOb1svr+J1m2dS/Dw8Ocf+1vGR8dLqn7
      Hh4aYuitF9BW7sDzM7IbzEJobKhjTaWDmCe18LZZoYrupbaugXA4dOOTPyCEEDQ1NSGlLMkn
      n++8R+5bz7r2Wo5fHmVFYwXb1m/F7/ORTCYLuyu++d55esem+Y3PPcS+7ZLG+hpUVaWpqYln
      Hn2ATDqBbVmsrYqT9iSojvjomzRoCOdIpxLU11RREfJRVbG5MB8pJTMzM4UN/FyfvWEY6LqO
      lBKfz4dt2yiKQiwWo7yumf7yjSyfOYkuFpcJuVi0x96n+4VJIg99Fa/XSyaTZlV5ipGhC9TW
      NxKLxUgl4pz7H/8HrfYU9qf/9R0d6FoMhBA8umczl398ElsvpcfbxgDCytLaUH27hi+9lxA3
      LJ1sa2misb6WNcvb8mkKtl3YkAPyhBpN51ADEXRdZ93qFSXXb954D+cvXGR0bIynPvNpwuFw
      vjNcMommacTj8XxA7Koak8vlyOVyeL3ewt5bxUEqRVEwDAOfz1eyw01ZWRmmaRJ+/De59M4r
      rOr5Ad5bWDTnAGW7nmHdlu35yPj0FG8MwYptFZx86wAXX3kOr5XC4/HSt+JRdq7ZdOtu/jGi
      prqKPcvDHLxSGmvSAKo8OZzkBEL3I7xBFpcdNBeFNoZOii/ev4KVyz4er4G7q0tFUVc40zQL
      BO84ToE4XeRyOZI5yEnJ2PgE9XW1JR3yLMti7ZrVrFu7pnCNEIJwOMyxE+8RCfpIJ6Zp6VhV
      IGjLshbc1M9xnALxu8ey2SyhUIhMJoPf76d+/W5iXT+hXl3Yi3Oz0IUkc+S72Pc+iKIorFi1
      jsiOXRx65SXGzh2jvrGdts27WLdt58+cr/9G2H/fZurKLhIs+loawOqOZh6Tf8XgeJY4YcY9
      TShWllo5RW/dQyW9368HIQSKmeS3Pr2JutqPRvovNI9IUScCKSWpVKoQYEomk4UVww0caZrG
      fR2VHLk8jCCvtgQCATweD9lslkwmv4+arusF+8O289mh77z5KtsacgQ77seyLDRNQ9O0gmo1
      OzjlNqxymcO1DUKha6kNQghsy1wwWvxh4EuPc+7EETbeu4f2jg5s26Z92XIayvzs+NTn7tjd
      Nj8sPB4PWzZtBPLFPHCVARRFoXXvU3jOHUE1Eiyf/BFo+XXgtdEZTkf2IFQPVii/u7ljJAmr
      OVKmQ0Q12bi8gfGESSyVYzJtUFH+8Xc3dg1M27YLEjeXy+E4Dn6/v/A5XEvZbW6oZRd5ndxl
      mkzmWl2R67p09XiXeKv8Dr5IDQ1tqwpbPLl7F7irgW3bJakKiqIU0owdxykp0XQZraG5laFP
      /Vsudx6jov8QNUq65DtKCQlbJaA6aGLxjKIpgpnYRMn9Vm/YRDq98ueW+BeCyGaz0uv1YlkW
      B771Fyi6l7aJd6my8o2jbAkJS2XSCfLDul9HszN8/v51rFnRTiqdJps1qKutyasdMzP8p+++
      zS/fv5z1az++iGE0GmVwcAiPx0NNTXVBvXA3a5uN4uKNXC6Xz+2ZJzPW1eWLXa6KopBOpdA9
      ngLRu4xn2zaRSN6mSCaTJeNJKclms3i93oIa5KpM7jzd+UgpSUxHmXz7e3hifdgINEVgVa8g
      sPGTDL7zPGvj7xFSru8Jc5GWGrlH/4jlG3cA+QKl0ZERmm5jivKdAleAWZaFz+cTBQYA6L14
      moG3n6d64/14Dv45FVwzGKSEF821OG3b+dUvPTvv4LZt8+fffolVjWU8/vC+ec/5KOBKfcuy
      iMfj2LZNLpdD1/WSBK7ZLURcIixmgGKGmc0A7soRCoVIJBLzFo24Brrr9zdz+aZS7gpTHMNw
      GWJ2yxUpZaFh8MzMDIlEnNraOrxeb+Gc3h/8KatS5274bKSEgWWPs+Xp3yl8t96ebpqaW25p
      D6Y7HVcdEKXx4fY1G6nf/kniE6MYO3+NDMXFH/CY5wKb6xZ2HKmqyqf33MOylsbruiVvN1xJ
      7LbbcJvuulK3pDh/VsWSq7cv1GJk9mfuBt3FhFv8uZSS0+cuMDwySvfACG8dOUE4HCYYDFJR
      UUEkEsHn8xXu686peG6KohQixH6/n0ikrNADVQhBbGKUynj3vM9i9nfoU+vxLLuXs0ffJplM
      ks1maW1rv6uIvxhzFL4VG7bhK6+h8Z6dpHb+Bqa8dooDBKrmjxS7y3VTQz3LO1o/soZXC8E0
      zYLOr6pqgVhcn7tlWSUS1iW2fCWRQSaTwTTNEn++C9ewda9Lp9MFu6I4mORi9YplHDp+hude
      P8HKjhYymQwej4dwOIzP5yMQCOD1egvq0Gy4YzmOQyAQwO/3F5hZ13XKKmsYrd9JzoG+jM7J
      qJfe9DUj35Iw5ETordxGxy//MYNn3ycQKcd/NQJ8J+r9rhp5u1GiAs2G4zic+rPfos0euTop
      GNv6VdbtfwrIS78Lb72IOT3O+se+XJBW7m6PPp8PXV+4N9DtxOTkZOEButLNsqyC5HSZwNW3
      3b+L9x5zg1NuBZgQAsMwCsztMoG7aZ8QgkwmU7AXilUZIfK7YLr3Ly8vn1NVFo/HC/cthnu9
      lBKv11sw4KPRaKF36tT4KBcOvcDMjIF64RhGMMSGB/aSHuqk/J69tG1/iLLyvFs4Fo0SCAZZ
      6L3fCbBtm8nJKSYmJli2rOOWt82ZVwWaDSEElDUW14WjnP4hsanJfHFz92XKj34Ne2YcTdPQ
      dR1VVfH5fASDQSzLwrZtYrEY6XT6I+2JGQgECu7IYmldKFa5uhlHJpPBMIwCM7grhUvEiqIU
      IraGYeD1egs6vcfjKWzT6kZ03XOLYwiO42CaZmG8UCg0Z4UUQlBWVlaQ7vPBfa5+vx+/309F
      RUW+yi0WY/iFrxH2B3j4S18h1bSSXV/5Q2pXbyMdaWHDw08ViB+gorLyjiZ+yKuxdXW1rFq1
      kjfffnfBZ/Jhcd0VAMA0DK4ceQXnzIvUZQdRkEyJCAnpJWOD1riWpn3P0NJe2gjVNM2rHdXs
      wlKtaRpvHHqL++7dTjAYvK0rg2EYhf3GilUdx3FKmMKdq2sjuOe5K5kr+V0Jrut6iXR34UZx
      NU1jamqqRG1xvQ5er5dQKLSgNwrykm96enpOPbZL9LOPx2IxBnq68P3wjxlTK9Aq6pgKNBJp
      WsGaDetRVY3qhtJyxmw2W1Cn7nQUC69bSS/uCnBDBrh2QZbec+9hXHgDJVCOOnqeUb2eZZ/4
      ZWpqaxFCFFaBOwHT09Mkk8mSvYRdiezxeAoeHfcBz+5p47rLindYMU2zYOwWG6zuZ6FQiFAo
      xPT0dIkxDfn2f27xzPVepJs75KpBiqIUAnKzr3ODeqqqcuxP/zXLswMIAaPhDiZWPUJDZTmb
      9j445x7uNfPttnm3wGWARecCeb0+Vm/djdyyC/H/t3flP3Ic1/nra+7Zk8ubXB7La0mKpGiJ
      Eh1JNmVbkGM7dmwntoMgMRDnBwMJAsQIHPgPyE8BDAQIEsSOE+SyFVlOZPiQZEuOZMm6SOog
      JZKSSC4pkrvLPebsY/rKD8NXW1Nb3TNL7uzOivMBi92d7qmuqq733vdevapSFFTKJQxUq3Bq
      LgqFAnzfRzqdxsDAwLI7VbwD5ft+w0ny5DyShk+n0ywtmWgJcX6iMUDdSvDxeWD+/EGxWITj
      OEin03Ach51kT85tKxpMURQkk0mYpslmheMUVD6fr9e9dzWq1lUUB3eitm4P8n39eOWRf8H+
      o/fPex80S00+z+2MBbeeXmIu34NcvgdBELCIiWEYzHEkmKaJs28ex47Rg8jmckviEFM0hwat
      aZowDAOpVIpFbKiO5XKZ0TGaPwDqGoIogpjMRiDHGQDT7r7vo1qtoq+vjw0u8n3E7VSikEgk
      2Ax0VH/x1EDXdfgj96K07wHYNQ97Dh7G8aefhOK5894HWTteSdzOQnDLLScT/dxLxzFZ9fDF
      j8/t8Xn53bcx+dO/RfLIH8K9MSlFtML3faRSqbZ1fm9vLzRNg2VZSCaTcByHRVls24au6yiX
      yyxniAYSOb98VIj+p2Q68gMAsDArn+LgOA7bQY4cX6pPK9BubMBFi35kuz2IVKpcKuK3PvZF
      eK6HJ3/037hy+nV87Ot/NY+S8pOEtJ/Q7YxFWxDz4H33YuNAFlPXp2CaJsYuXsDUM9/BFqMA
      3yqyXBzbtmGaJhuQ7ZowoxlaEgLf95HJZNDT0wNVVdkEVBTdoTRm27bhui6zEkRnKAJE6c/E
      +elapVKBaZrwff+mIi408cVbmSj4vg/r9LO4dvkSkqkURvbegS/95bcwAyJYxwAAHDNJREFU
      su+OhvtIkGhtAi3GaVeEZSWgZSe4VZBmPHfieax55dvQlBDjGEQptxXBxkMY3nMn0zrVarW+
      w3Amw5LGFpsi+b6PYrGIYrGIbDbLqBGlHVNcniJElDNE/1PfUL1M02yYPKLJNjF1mPyCdDqN
      3ps4NIJgmiabCZaBQrOXz7+LJx77Lzz8pT/Gho2bpPe+9vKvoady2HfHQZbJShGmlb7oZaFY
      sBPcKmhgKEYKfghoCrAW01hTnsbFk29B3fshjF+7htCvYercCxg+/DBLT0in07DNCtauX7yk
      LE3T0N/fj1QqBdu2WUTFMAyWgRmG9e25fd9HNpttiPlTghow5wuYpsloCjmT/KIWGkyJRKLl
      M46j0CxSc/b0SXjnn8am+76KfaPrMXPuV1iz9stQVRXFYgH9/QPwfR8vPPtLVC69jJKfw/Yd
      O5FOZ5BKpVApl2Ga5qJtTLvS0BYCGIYhrp49gSEuRdcLAQQeZmemUS1MYN3lR9CvKDC9j2Ni
      /Brs2SsIvBoSs29j6PPfXNRUCkWp799DTq2oTWkSKggCzM7OsghOqVSCpmnzTpMhylCpVJBO
      p6HrOnNcKcwKANls9pbDws2EZ/PWXTg1MYbp5/4ORW0PtLCCyclJlthXKpYwc+ElDDiTWGVM
      orTlMFKpNGvH9MwMq3+nhLCXErckADLnjGLTycDGpJ/HGq0MTQFOlVLoGcxg8vhj6DccDKZD
      ACGKx7+LIbWEnkSAMAQumSrOnXkLu0f3LYtZpskvx3GQy+VYpIRvq6IoqNVqDZSKXwpJqRHt
      oHQievv60LdxN6bOjuMOvIpHX9OxU3sDHz12DGdefxGTrz2OwYwCKC629AMvzl7Dyy/+Glev
      XEEilcGRe47ike//Bz79mc+hf2CAWYLbhRLdkg8gLvcD5mYnfd/H8dNnUXj/DPZNPoVZV8Pe
      bTlkmqyyO3Vdw7vFJD68dz3c3DB6dx9Db18fVFVr+/wC+Qs0oCldgt98ltpYqVTQ19eHTCbD
      Zm7pupjn024EQYDnnv0V1heeRS6cxQulHbj7gU/CqnlQ3vguNufqSyovWP3oO/I1jP3mB5jV
      1iLVtw75fA8uX7qETCaD0tT7yIRlDO64B5o5jsEN27FheOeK3xVChgXPBLcKy7Jw5tw7OD9R
      RCE9BDWRhj07idLxH+PP9o43bPHXDCUHKDgagmQ/wvQqrLnnyxgYas8pMkB9YFuWhenpaSST
      Sbiuy3aAFie/yKlOpVJwXZf5DEs9+Am1Wg3nz76B/ouPwHdtnE5+FLv234laZRbVa28Dlfcx
      q63HnsMP4OQT/wotkcSRT/0pJq5cwsXLl+E7FtZt2oqTv3oMw6tSODIwATdQcC51H/Ye/SRL
      wqN+Wukh1LYJwIWLY/jZ6StI9q6ClkjBrznYdOa7ONQzjXzy1szqlJvFdO9h7H/wK22zBmEY
      Ynx8HKZpMoeZPhfz9MUkO0pxXk6MvXMKYy/9EMbWj+LAocPQdaMha7VWq+EXP38cipbEyM5d
      GB3dy1I/CoUCrl69Al1VgOm3sN15GW8l7sO2Q8egqiqy2Sxz+ml2vdUZ7k5D26JAW4Y3Y+Tq
      FK5odaEKr5/DPQMzSGi33kmrjCr8679Gufwp9Pb23XJ5MiiKgsHBQWYBbLtOHyjqww964vyy
      WeLlwvCOfcj0rcaFl/4XL/zweehqAFVPwO4dxYFDh5EwEjhw+F4MDg7W9zZ9713oej2Ld2Ji
      Alu3DAOKCmN4GL/5wavo3TGXQmKaJnp6elhKCB8dW+xktaXColsAoO5I/tszJ6D2rYNbKWD3
      +e9hc7qCNTkFE1UFfckQyQWIHk9BLvobsf3Tf93WiAVFg4A5zU9rhQGwGDplu9KA0HUdPT09
      HTEQ6oIaoFwqYer6JIrFImZmZmBZFi5dfBf7D96FiWuXceTe+9A/MMiydYnWzMxMwzJNVEoF
      bNle3w69XC5D07R5oV1+LfVKQdsoEOH5E6dwzs1BUVT4NQfhO89gV4+LNfuOwX/l77E1X9+W
      QhZJ4sEP/qmgH7kHvoG+gfaeTEKLU/gZWNroivJodF1nESDeAgx0eK59GIaYmZ4CFBWF2Wls
      274DiqLg+vUpXLh4Abl8DzZvrO+2l8/nMTNbwNXxSezbs5Nxf6I+fJnAXFrISkBLC2JuBYf3
      7oBerZ8eryWS0PZ8Av76u7FqaA2C0a/gTLAL03bz1WLUudOWgnDfH7R98ANgOzqInJ9SCACw
      XR4o1cEwjHknnpNTvRRL+1qFoigYXDWEwcFBbB/ZecOaubgyOY3HXhrDd565gL/53k8wPTMD
      ADh7/hKeOv5eQ+Kd6H/x/bPS0DY3PpVMYtfqHN6ctaAl0/DsKnoH6qud1mzegXDTCN45+SwG
      zCfQCmMo1jTs2ra3XdVtAG2axC+a4dMiDMNgDiWZf3GjLfqclkh24uCoVKv4x0efhqbpqNgu
      3NQqKABShsPa6roerlQU/PiZl/CZY/e0VC5ZiU6ggs3Q1sD6XXt34v6NKSQrEwjcGgxdZeuG
      VVXF+pEDeMU/hKCFXCwl4oSPdsCyLObc8uFP+p8sBJl82rKEZlRpnoCsRCeGCy9evop/+Pf/
      wZVaFpftNGYxt5nZbNiD7/3sOF45+QbOjxcR6im8+t5UwyZhcYiK0FEEqZPQVgFQFAU7tg7j
      C/cdxMbZEwhvUCKgriHzvf3YctcncbXagvO0et+SLbThd2cgGuO6LsrlMiqVCssKpe1MaCUY
      7wDTdu2UI9QpoCS/Z0+ew1V1HRQJC1YUBdN+Ft9/eRxvTtbpWyVI4uw751vKHJVFhMgidlJf
      AG2kQDwMw8CW1Xko5UvQ9QMsFx0ASrPTGDLidzSr+UBq8+IfshGFTCYDx3HYi6TnZrPZeesE
      aD2E6PiSxeCXMoprjpcSnufh8vtXcGZsAm+OTWPCTkBRmwxG7jhRRTPw7y9cQsn2cP/d0TtG
      u67bsLMG+/4NpdFpWDLbrKoaaldO4JVTO1FzHCQSBg7s2o5cbz8uBsPYXhtDLiFuIlufDR43
      tuOO3fNPMm9fXevpx47jNHD8MAzZPp+mabKXKjq5fGRIFq5djiWjj/zkaZwYDxGoCShK+qZs
      f6in8eRrl7F+qBcjW7dI7+FX4t32PgCPsDKOnD+NS5aKSv8WTKfX4sXT78L1fGx78Gs4HewG
      b11nvAzO5T6C4MPfwq6H/3xJO5OiHQQxBeDGvpKRyW4sJVwoZ7kmiyqVCl6/6tQP8b7F51tq
      Dj945hQKxZKUDtE66JUw+IElFIDAqeKEehD5oXVQVBWqbsDu24TfXCqiUCjCHzqAGbu+MGXK
      NqAe+Qsc+NhXsG7jMFLLsHsBP+gdx2Hbu9AiF5oco+0Keei6jnQ63fatX1pFtVoF7OKirfya
      CXL45x8+uaT7PLULSyIAtVoNqE7CSgox/Bs8eWxiCpcmp2D7dQ1Z8lPoW7V2KaoWCdLcpMVp
      wY64QiwqLs7nES03BgYGkMvlF1UYK77xgVhKuSQCUJiZwuWij9T2+XHk3OoNmCyX8ZD6DDbk
      fIQhoK+9Y9kHj6Io9RVqN7ZQ4etDi957e3uXvZ6twDAMHN27EVjAgG3mp5ScsOnBhCsBSyIA
      drUEJzUIlePDVqF+/oBTLWPq/BmU7bo5feL9fmy4+3eXfW8hAIzGkCPLa1BN0zqG4rSCkY1r
      AN+RXqMJvzAMGj6La9tgLrEihL8ZliQKpCgqHCUNPuiW7qsfoVQtzKDUtxePhjuxc+wXOPLZ
      ryObW96UYoKiKA179NCgSKVS0v09Oxkb1q9FVjmOKuaWg4ZeDZvzATav7sHujQOw3ACvvXsN
      b89qCD0HoRqRqhKG2D88uKLaH4UlEQCzeB1r/KuYklzzHBuakYCa7MfA5t/Bxk3Lc7BeFPij
      juin2cHcnYjpmVk4oQ4EHjZkPGSSGvZtXYsPH97fMMj37RrBt//z50BQwISyQXq6er9awcP3
      39/Sc2lGvRPnAIAlEIAwDOG+/yomMzukfGtg4xaMutexbnUfdmw90HGUghaLr9R8d8LqoVX4
      k4+PouZ62LNzeyTFTCYT+Oqn7sXPn3gSllVFGcJ5b2GIo3s3tKwAwjDEo4//FJ/77Yc6cjPe
      thPtmevjMGbPojowKr2uGQn4ehq7tm/tCN4vgrT/Sh78wI20lO1bsXd384Pwhlatwu994fP4
      9JEdQHBjko8SAz0Lw2taX4yUSCSwf/cIHv/ZUygUFi8Uu1houwUwqxUkUeeTPJxKCb5ZwqqM
      jkOj2yK+3cVygPycA6M7UazaOHt5CgNZHWYtwCeOHML6dQsLUff2DeDN6TGMPfokvvHVz0Nb
      hNWBi4W2C0BQs3CtlkV2aP3cZ4EP3Snj9z9yZ0dmSnZRh65rOHbvIdy9v8LOOSgWiwuyhrVa
      Da7nw0im8Nmju6FpnWXl2z76Jiau4cVrKaznPktffw87tw13B/8KQS6Xwz99/8e4bob47NHd
      WLeu9Z05fvTLF1EszOK+kfXYtWOkjbW8ObRdHC9fm4KR64emz1GgmXIVWzauj/lWF52GO0e3
      o1Q2sWqwv/nNN3Di1Fm8PRXg7gOjOHb0Q22s3c2jrSrYdV1sUMaRS4xjxrFgJNPwPRcfPjja
      sWGxLuQ4tG83dmzdhJ4Wtn0JwxBPPv8anh+zcHBdEru3berYIEJbLYDnuljjj6Ev6UNRVFRn
      rmMzCtg63Fmx/i6aQ1XVlgY/ALx99h28cKGEROjgwbtGI3e27gS01QLMTk9i1gxwttKLpKoi
      1dMHy53pWG3QxeJgZNsWHL1yFXv37EFvb+9yVycWbRUAxyxjfdrEqeQh5gMUK52zQ0InoVnu
      zUpCIpHAJ449sCLa014KZJUw7STgr6svoStPvI+HPjTakRNeyw3abOuDgpUw+IE2C0CyZwgK
      AoSlSYRBgL1DmY6cDu8E0I4SXSwt2ioA2Z5+DKQVjBSfg3vu/+Ba5Ybrruuyg+e66GI50FYB
      6B8YRCG1FXflruFz6lMoXzzZcJ2WDnbRxXKhrQKgqiqGjv4RLvurAQDX7QAvvX4ahUKBOX0L
      4Yr8dipddLEYaLs3Orh6HdY+9E1cSN2JfPk8xt5566aX0sn2m+mii1tB23aHFhGGIYqF2fqE
      Spv29u+ii1bRtgMyoqAoCvr6B5bqcV100RK6Afkubmt0BaCL2xpdAejitkZXALq4rbGsAhCG
      ITzP67iF0l3cPlh2C6CqKlzX7U5wdbEsWJZFufw2447jIJPJdDNEu1gWLIsAeJ4Hy7Kg6zry
      +fyK33Sqk/BBWlewFFhytUuaPwxDpFKpD8SmU62ADohrp7/juu68Z3T9rHgsqQUIggBBEMC2
      bSSTydvipdAhe7ZtA6gfwCeetL6Qsgh02iIdeqcoSn0PHtdlp7Qkk0nYtg3btmEYBrLZbMPh
      f0EQwHVdJJNJtuU7nV+maRoMw2B7o35QldSS5gJVq1V4nsdOWPygdirB8zzUajV2ZhgAdtYA
      fxJlK4eFu67LTqrhzy+Og6Io7D5VVRsO8+ADD4ZhwPO8hhPv+eNhNU1bcbthN8OS5wIB9bWi
      JAAf5MHveR5s20atVmOnRdJgJAto2/a8U2aSyWTDZmE08G3bnkdjZP0nXuePMKKzjXmIR7pS
      GeJp977vo1KpIJPJzDsQfKW/xyURANJYdNKiZVlIp9MrPvLDnyBJA5ynO3QP/RYHCx28zfcP
      j1qtxg7bpvLjBpx4XdTm/GcyyL5LwktCoGkaVFWFYRgIgmDFW/K2CgB1vGma8DwP6XSaHTpH
      RxB1cue1ElExTRPpdJpZNzpMg6cf/N88iFvTNf5gPs/z2FGsJCBRXFzUxuJ3+OfJvkP3yQSF
      L4d3qOkd0pnJK1UQ2ioA5KipqspOWaROpmvLCd/3G6wQHXxNv+m8WwJPZ0grkm9jWRZUVY0U
      mmaUJZlMNpxB7Ps+ozD03FYtpqwOssFPf8dZDtkz+Xtd14XrugjDcEVueNBWAaBBQodO8wiC
      AL7vL9kGuURXNE2D53lIJBJMMCn6UavVGE2r1WpQVRW2bSObzcKyLGiahmQyyTQ9L8TEsUkI
      qP30bII40Oga8XDLspjvwNe9FQrE3x/1mWglRCvEPy/q+6LQKIoC27ZZ+zVNY/3b6Wjr6COn
      q1wuz+u0pRIA3/fhui4URWF0hWLyNJD5l0+mHZhzAEulEoA6JycrxtMRccBFDdKoQQWgQfDE
      e8RBGkdtZM+Lul8W8Yn6vjjgZe0gIfZ9H4lEAvl8vuOFoKXRFwRBQ4w4kUi0pIk0TUOlUoGu
      6/A8D5qmMccPWLoIgm3bjE6YpokgCKBp2jx+K0J2jR+EQCOPF3k/j2bOZyqVYn0cB9nzZddk
      g7QVBzrOH5C1R2Y5VFWF53moVCpspr9T0bJ4UtKaZVmMzjSLSWuahp6eHiY4/HwDadd2QYyw
      8D9EU/jwpIwiyGhInLaN6ou479BPEATM6aX602CSaWx+oIqDlRdK3o+Ig2zwi79F8P6QrG9W
      wiYGTS0AOWU0M2gYBuPOjuPA8zw2w0idR84jmfNcLsfi3/xAc123rdEDMSRJkA128ZrseivU
      p5UojfgMTdNgWVbDRJRMC4tWR0QzS9TM2sn8l7i2xN1PE2/LjWbt0ZvdSA5NGNZj3NVqdd7A
      KBaLUFWVhTWr1Spc12XUhwSFf5aiKC1TqYWAoiW2bcOyrKbUg287fcbThThKEsfpZRQoiqIQ
      d25VS/PP4zU9r4Sa1VGm6cXviH0gUwAygdI0DfkWt1JvNwqFQgMLEZWHDszFnSk1OQzDhmlv
      VVVRqVRYJ1PDeY1FEyXUIY7jNER+ZBy0HYOfclsSiQRLDuNphuiUiS9PRmOiNGsrkZM4/twM
      cQIm8wXE54m8PqoscaDz7zmuPjIlQYN/OdMm+Hbn83mmtMOwnoDJh7ZVYC66QZERcb9OwzAa
      Jq3ot6hx4hxAkSeSCV1MkNn1PA+lUokNfv66iLi6EmQ8O6ocUTsSB1+I4x9Hcfg6tWIxZOXK
      2ih+LvOLZGXycymKojTkGy01SOFRzhTlO6XT6YbkQN731IG6xDuOw6I2qVSKZRXSJEcikYCu
      69Jd3XiBkGkN3tmkzzKZTFs4oqZpqFarAOR5LfT8KNoj1lV2D1+uzBLwf0dpYLFs0Vnlv8Nb
      WkLcIIujN1F9Eaft+eCBCH7wJxIJZLPZRbfszeB5HgvQUH1pLMpoGv83G4F8R/DOI/8ZzzVl
      ECMTvGDwIId6sTqKnkcWjJxvXiCjKBi1KaqufKSDniOWFUUveM4c54DydZUJkGhdxOfE0RsZ
      4qyR+A7pvqh3LlrYpRr89K5pIpNP/KN3Sn9H1ReIiQJFaTvqCF4QRI0jvni6R1EUJJPJRcsB
      omeR070Qh1VWV77d9Lc4MGUDP4oexf0t09AyyySrs2h9mn2H/27Us5rVWSxDdm0p1nWTn0dr
      H2RtEqNT4jvlodNN4ksniJLPPySKKtBvfuJL13XkcrlF5YeULSlrpDiwoyAb+M3QSpkyy0HX
      ourarGyZNYsy71EvPKqdrVqXVgWsHSAr77pug8YX+1tEXLhWGgZtVSuJZl3UbDQLyE/qLAbC
      sJ7XQ1xf1rBm2lP2Oc//4wZJVF/FPSdOsy6krrJ68J+LliXq/Yl+hfj/Qi00Tw9vtoy4MmkQ
      31jI0sD3+WfJlARfJ15wAC4Mylc6zszxlRP5vugfmKaJVCrFltUtBsgf4dOO+Wv8ZzKaIePl
      caZefEbcPc00YFxd+c9F+ilaKbGfo+hVlFDLhEsMYMSFjKOUAyUE8mu+b+W9h2GIYrGIIAhY
      tiwN/igLGNUevp48pD5AXEfJzC/9Tw81DIM5J7VaDb29vQuKC5Ok67o+L1JEadV0X5xW53/L
      qEIzy9aKxpcpArGf+DKi2ivrR4K4VDGK9kS1I6pdYj9F3d+MHvJleJ7H3v+tgtaQA3NJirR8
      kxAljCIliur/htElNlTkpTIuy3+P76x8Ps86gV+ILfoYMlSrVdbgnp6eBiGgybVmNENsU7O2
      ie2UQeT1YjlxlmIx6toMUVSn2ToFmWZvZcJQ1iaKyCzGslfS+BSmVxQlNgwPoCGcHGUZeaj8
      zbwm4xsa9TBeYwH1Nb+UA2SaJpt8oHKr1eo8DiaCMk/FgUagEGcz2sIaKESqZC9SRNwgl30n
      amDFXZeVIVrWZpSqlet8WbJ3Kyo1sey4sSDWn4+Y3Yq/R4ETRVFY+nocxeTb0YyuimU0+AAy
      08pzzrgXrSgKHMdBPp+XLu4ul8vQNK3p5JcoIL7vN6yVTSQSDTn7svrLpF/WvqhOjbMON4OF
      1FVWt6hni9Qrro6yNonXRAonTs7J5kj4cZFKpZBKpSLr0AqCIECpVGKzt4pSn11ulVLJ6Gjc
      3BX7VCYh/EuK0iI8wjBk638ptQKYm6Km5YbNOoBPZRZ3LACAdDqNfD7PkvSitNVC/pe1ReTH
      4t98XW+mzIXWNaoeMssk4/PiPbL/eZBWl9VDfG4ikWDzO82EMQ4keLQsVFEUZLPZBj8yahzK
      /CRRqEXMEwtR00dpUxkURWFOKr9ugBbRGIbRsOgjascyGaejz7PZLDOLdLg0WRVZxzcTuCja
      1wptEfsqapDxz4rzGVqpK18+P9hkGl7mE4jfl3F9UXu20jeLFeLWNA3ZbBYAGoIdlGRHFqYZ
      NRf7OcpKMh8gTkPEaQ1RO9E1wzBY1h1NgtHEGFDv2EqlMq8sPt2avhvVUaqqIpfLIZfLsQXZ
      ssEn5tlHtSUKrTq3zZ7RrB/FMsWyRQGRDYJm1kgc2FH3yYQkjmOLgnIrSCQS6O3tZWdI0wYB
      tB1L1CQsX29xLybxOoH5AERP4swFgY8qyDolDOfSq3n+Tp1JM3kifaDzg+lewzBiOaVlWUyI
      xEEj1k02wOIQNbhlWlUsj783ilrGfV9W1yjBiKqzSF1E8GWIiWOy+2RMgFd2i7mwSXwWKcEw
      DBuUZtQ75uvNa35Z++b5AKRpoqiP+PCoFGMSAvpNXN4wDEaR+HLp3jCszyP09PRIt+NzXRfl
      chnFYrGBQjXj31GIogxx2iXunrjP+esLsTxRz5VRMv57cXWTadBmfSHWm393Ygp9uyBu4ynW
      WbSCUTSVoPOFiE4vfSbLu6DCo7QsMOfR0yJ08ujz+TzL1abvEvfTNG3ezHEYzu2WYFlW5BZ/
      PESNJjpFIveP83vE5zSjF3GIq6toWcnsx2lzsf5iG2XXeEGJ0qJ0TZaKHVWXdoHqTWsPaEku
      XeOtXhzdlQm9zhcSZXpFExk18EUBokoDYLsE5HI55rzyEBfN86jVag05/mKjxM7iO0Bc3SR2
      gigYC4VMgKLKalZX2b5CYj/LFFSU6RevR9EboJEzx1GGKCz0/iiEYeN2k/Tuqe3UFhnziHt+
      lLDOc4Lpf/od1YFRGlUcCHy5QRCgXC7DNM15+9/EdQgtppdFSaKcLxlFkw2OqLrGoZWXLKtr
      nOWIq6tMMcnKpu+RkhLbF6XNeWvBO7yy8mXfo4HaLIrVKnhKxfuBMmsXVZ9WFBLA+QBRTk7U
      l2Wfi45H1Etots0fH6HgdzWW1TGuHH4RNC/IMkohm+hrheNHdqykvDjBiaqr2KetQMbZm/WV
      jPZF0SLxWVS3xfADFKW+WjCbzbL3TsyAb4OsP26Gkv0/8yc+11XHqjoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Class Time vs Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Rankings' width='192'>
      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
      WcnzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Female vs Male Percent Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3RcaXbf+zvnVM45IWeAAMHUzSbZ3dN5Qk/QSGNdK3hGY1nym2Wt5eWX
      K18vvUivVw+2fNeyHJYsa+yRRiP3zHSenk7sJtndTGBABohQCFWFyvHUOec+FKsIkGAGQLDJ
      /1pYBE+dOt+Hqm9/3w7/vbegaZrGYzzGIwrxQU/gMR7jQUL3oCfwGLdHuVx+0FP40uKxADwk
      MBqND3oKX0o0VKC56XFOnb1wy5tVOcdqIn/Le5LxZdL5Ctn0Gsl0rnF9eWV5w33jly8yOTN3
      xxOVZRmAfDrJZ5+foSwrxFbXSK4uMjp1hS9Ofor82Jp5jLtE4wS4shrnyKEnGb94nowsYDPC
      4uIqCnBg314unB9heG8XM3MSkxdOEe7cg0ms4I80EZ2ZYnJ6nn1PHmVscoxKVY9QSmCwt6IU
      EkQ697ASnSW+FKWqs7B/qJ/VtRT55CyynCeVKdIe9hFN5BCreaw2N0uLs3QPDjM+MkKgKcKp
      Tz/m69/8HonZMVp6+3nrrbcY3DPA6ePH6Rvew/mRacw2KwVZIOS0ksyXyCZWCHcOsDB5Eau3
      CadRpqCZKCeXcQTb6O1sfYAf/WPsBjROgEx8hXMXxzg9cobo4gprsTImh4Uhv52J5TgGs8D5
      ixMUlseZiSnMR6/gNAr83f/6MbmqSElVKZRLaKIRUSkj6vVUixlymo7LYxcBGDl3nsWVKADx
      pXnMHj/jX5wnEV3l/IULDO3pJrlWwlaIk9JsRGfGMdoC5ONr9A7tJRzwAAJWuxuL0cz05DRt
      nZ0M79vH4EA356/O/cKlSdo8XJ3nDAa9lUJhjbnoGoPtLs5NRVlciD6QD/wxdhcaJ8C+A4dp
      bmrCrJVJVlRawhE0ScWug0CuzGIc2tq7MBjdCKNnCXoCWHzNtDY30xF0sbokoddJtDW1YFDL
      yEYnaj7D2MQUwVAzfrcNo05EEWu67KGnnqGlpZlxt4noaoHuzhaMOgN2u0TW4sGxNo/b34XJ
      YEHQnGSTCeaX4wSbwnz2wXsM7DtAJZfCoJMAgabWJqwWHcmKSlu4CUcoQJNnhaAniM1oQJEg
      v7bChZk19rQEsPndD+ozf4xdBOFxHGD3o1wuPzaCtwmPvUCP8cChqiqyLKMoCjqdDr1ejyAI
      OzL2YwF4jC1HXam41SLWNI1qtYqqqpRKJarVauM1k8mExWLZESFoCEA2m932we4UhUIBi8Xy
      wMbPZDJIknRfzxBFEbPZfMf3FwoFgsHgfY35IJHNZhkZmSSb1VCUApJkIhSy0dISwOPxbLhX
      0zTK5TKFQgFN0xAEYcNiL5fL6PX6HTkJGgJgt9u3dSBVzpEuG3DbDI1r8ZUYnqB/Uz7Gds/n
      Vvh//sv7zKzeOt5xO3z7SAd/8J3DHP/wLXoGnybgtXPik8+xm1WcTg86e4iQ37ZFM35wUFUV
      RVF4550TWCx7ABBF0DSYn69w+fIYr746iMPhaJwMiqI0dnxRFFFV9Ybn5nI57HY7er1+W+e/
      YyqQVsnxxRfzGIQKRouEoEmkEgU6u/xMzMRw2QTsjhBDQ707NaVth1JY5vxoAXdTgvjcBPNz
      USJeHR//6jwHX3yKkH/vg57ifUFVVS5dmuDy5Xn0+pYbXtfpDLhcrXzxxRRPPz1IuVxGp9NR
      KpUaC7t+AtSFQxRFJElCr9cjSVLj9e3CjgnA5OQCoYCTQjZDMBzGoFaQy6tUKhoBv5dgwI2g
      7ozhs1OQTD5aXBqplShtnV344gkGhvagGb1k06UHPb37Qj6f5/jxi+TzVuz2gQ2v1RespmkU
      i0vs39/cULHrO3+lUtmw8FVVRafTbbhHURQMBgOKoqDX6xuvbyV2pRs0m80+UBXoJ788TTIv
      39cz9rR5Obav+47vv9XfvNvcoLIss7S0zMmT89jtbZveoyhVVlZGePnlfbjdLiqVCrBROG72
      f0EQGou/bizrdDocDseWnwaPvUCb4JUnu+/KCLZards4m92HM2cusLhYwuUyoCi1a5qmkk4v
      43JFAMjn43i9foxGY4PHtdlee70gqKraEIL6+wRB2BavkKqqOysASqXAxcvjRNq68Lns5LI5
      rHYbu03x+ff/9YM7NoI7Alb+4o+/TTGxzESiyN7OMO/98lc4PSHsdidmk0hre/v2TngHoWka
      yWQFnS6AwbBKqbSEoggkElFsto7GfQaDgcOHI+h0UsPIFUVxg06vaRqqqiKK19wg61+r/26x
      WO5K/VFVdYNNsV7VWv/8n/70pzsrAFdmFugf3s/M6BifvX8WRQqw//AgI5/+Cp2zhfa2Znoe
      UoLau59+gTsUQdB1oOYzTMXK6JUcst1Hc3v7lyLzaHU1RrVaZW1Nwe02sbJiJJUax2JxYjRG
      MJuv0UtaWiTsdjvlchlBEDYsyvVYv/hhY+xAFEVEUcRgMNx299c0DU3TUBSFYrFItVpFEARM
      JhNms7mhRq0f5+mnn9nZ7yUYdDFy5gvyhRwOfwstYT/Vcu13m8350C5+gOE9/ahVhfnxcTS7
      iwNP7qF3uBcle3+2xG5AfXHZ7TZAQNOyqKqKwxFEEEzYbO0YjXYURSaTiaGqcwwMtG9QDa9X
      Ka8XhvoY9R+o7eQWi+UGIdkM1WqVVCpFLneNgq9pWmPczWIKoVDwwRjBsizf0r/7MBnBbque
      77108L7H3I1GcH1pLCws8v77F/ja1w7h9/uYmZnlvfdGiET2kc8vk88v43L1IwgC8fgJfv/3
      v0+1WqVQKDR24ptFh+sLfrMdXhAEHA7HHak/1WqVdDoN1E4Oq9WKIAgNAbiZED0QI3i7gxv3
      i6891YvN9vAHqe4Hqqry/vsn8Pm8DA52o2ln+eCDaQyGC/T1teLxBJHlMrHYNOHwHkRRwGCw
      Eg4PUiwWKZVKDYN2Pdbvt5st+rpAiKKIyWS6o91//fPqzyyXy9hsttvGEbZZBVK5eO4si0ur
      tUml46RLN0b9MrndQ8MAOHVxluLaKj97/U2qGkxOXObTE5/z0VvvcmVmFmXXOY63FpqmMTY2
      Ti5XQpZrOvwrrxyiVFrBaFS5fHmaY8faGRgQCYddZDIpRFFPsZigudm+qa6//tnXqzo3c41W
      q9VbPms9dDpdY8HXN9hyudwwgm/6vjt6+j1DI74ao6iUKRUVSkvjpIxulHKegMPIfKKEvpIm
      1N7PeOIMqtHL4YOD2zulO8T5qWVefrKTCwtZWl0OJq/EKM1PM72S4ZgKPV3tD3qK24JcLsfp
      0+O0t/txONy0tTUxPj6O3e7ge997BZPJyCefnKFUKpHJZMlkoFRKE4tN0dHhYnh4GFmWG6rP
      9TSHmy3GzU6GarWKoih37JKu31ePH9yJ23TbVSCr3Y7T7iKxcgWn1YnDZCFezKAKEgGfC7+7
      DU0VKOjM2Kx3Th7bbrS5rfz8vc948ujznPzsCzyBZrxHniJZUMjnq7d/wEMIVVX55JPLxGIy
      kUiF557bz9jYOH19fUSjS2QyGZaWcszPZzAYdFy5Mo/XuxdNUxFFHbncLHBtIV6/+Dcjvq13
      kdZ/rwuDyWS64xOgPq7ZbL4rEt2OG8GpRIxUrkx7W/NN73nQRvDI2DR7+zp3dMzdYATPzc3z
      wQejGI0ZVDXMnj0+RkcXGBpqYnp6imi0SktLhK4uD6OjCQyGAj09LZTLFXK5Ij09HbjdLqBG
      dahUKuj1eqrVKqVSqWEMr1+ct1p+kiThcDjuyg64WzymQlyHfD6PXq/HYDDc/uYtxG4QAKgt
      3Dff/CWlUohyOYXZbEVVq3R2mpifTwJmTCYNTYNSyYrNppFKKShKke9976mbfm6ZTKZBh4CN
      Buv19sD63+12+7Z+F1smWvNTk5SqKhMTkxuuV0s5itUbDd8HgcRylNff/ggNuHjuNCfOXLzB
      sP2T//xeIwT/KEHTNBYWFlhbS/LNb36V/n4dspyhq8vOsWPt7NkzwFe/eoRnn+3FYrHidhsw
      GmXi8RJ6vYZOp95yp7ZarQ3vzs1OgOtPCEEQ7mn334xefTNsmQ1QqVaYOHealQxkkifQm3TE
      YwUMSg5rWz/TZ09hcwUwG0Qki55MroLXakAvaKyWzfhMMnqLg+GhPVs1pQ2ILy9w+tIog24H
      axUVr8fFyZPn8KRiX3rD9k5Qc3tOY7cH0LQrvPBCP3v3DgGwtLSMTidx5coK09OzOJ0eUimR
      w4fbWF1N4PU6yeXypNMZPB73pvq3KIrodDoURdmw+99MVxcEoUGJvlvcjdBsmQCYrU7S2SL9
      3WGSyWUMJiN9/e3I6SVygkhzcxtWh4eQ18ZSNovHa0AtpCnls+wd3ENi8TIGk2mrpnMDfKFm
      urI5Tpye5LmmGCurMZpsYbr6O7/Uhu2dIp/PYzBYMRrtJBIJ3njjI44dG6ZYLHD8+ARPP93L
      6OgKomglFitRLGqMj88wM5PDbM6QTMYRRR1f/eogzc2RG55fX9Drd+dbeWoEQcBsNu9cRtj9
      ItLcRKS5CYDmlnUfQJOv9m9ve+PS1SvMzUzS1NGLy24m4r3/aOrt0NXTT1dPPwChSJB9m9zz
      7N6mbTW6diump+ew24OUSjGgitU6wOefp0mlphFFG3a7DVVNoigWSqVxXnjhCGfPLlAq5XA4
      WjCb8+j1IufOzROJhDb9DK/X869Xd7ZC/blbPNBvurWjG5d9d1GJv/fSQWRZJp/PN36UOud3
      F6FUKnHixElisdimr2uaxuzsfCPv9nYYHOxDlq/Q3m4E8oCGxeImEBjC7W4mm83z3HO9+HwV
      BMFOoVBBkmQsFi+5XByvtweHo4tsVuTNNz+hVLox4WczlWazudWF4Xpd/maEuptBURQSicQt
      bbpNT4C1tTVcNgPpSi2HN5vJgahht13zUiwuLtDU1Mz46AS9/T2N64nVOO6ADxGYGLuMwxMg
      6PcCNU+Aw+Fo3JvLZbHZHpy782a4ng79t3/ybabPfYZ/7zFCNpF3fv4G4Y4u9DrTjtGd6zum
      LMuNLCmfz3tDwjlAMpnik0+myGaNZLOXaG/34XQa6egIYbVaNhQckGWZhYVFgsEg3/rW0cbi
      O3duBKMxgNvdhk5nZHIyhtfrZd++TlZXRebm0rS3B4nFFnG52gCNVCqKy9VEJrPK3/zNL/j1
      X38Br/fa/G7F/Fz/f0EQ0Ol0N339dlBVlampad544y1kWcbj8fK97/3ahrVXx6YCkEyu4TTa
      +Oz0PAalQkt7mOj8FSwGM1OLCXo7gqQKMiGfg3Nnz1NWFFRJIjp6GpOjDYvpMn2HnmYttobV
      BG/84hRGkxF7pA39xAQmk4nPzo7S2xXGqJcYnZonEvYQaemnu/1G/XE3oK3FwViyTNCoklf0
      RGfmyK3Fd4zu/Pnnp5mensJisWG327FaLQwODtywo6qqyocfjiMIzVgsYLF4KBahWITZ2RiK
      UsJmW+Opp4a5cmWFCxcuodeHkKQJRFEhEgljs4HRGMTtrrFzs9kVVFVlbm6etbUien2eaFRh
      cPAAr7xi58c//hXt7S4iESupVAqHI4Dd7ufs2VFeeunYhvlJknTDiboZM1Sn091WYDZDNpvl
      7/7u71lbS3HkyAvEYgvMz1/hjTfe5ODBA3R3d294jvSnf/qnf3r9QyqFLJNXlnD5A7QEvIh6
      CbPBgM6gx+PzYBBFkPQIikbvYC/L86vsH2ojnipjMljRGQRCkSayyQRWmxmXK0AoHKSiifgc
      Dow6EUSJpqYgSlXA6fHSFAlRKBQJ+L1UKpUHmgL45olxUuvYoN/7Sh+TF8+zWNBwaVWS6Thd
      e/bjdOpZns8wtL/vvpN6bvU31zjuMnq9gUAggMvlwWg0Mz8/j9VqwXTVeaBpGn/zN+9iNLYj
      CDeKpE5nQq+3EovFWVnRqFQcmEwB7PYgZrMfkylItWplebmA2VxAkgpAnNnZ8/T0+Bga6uf0
      6TF0ugp6fTuff/45UEKna8Pvl+jr6+b06Q8xGr2Ioh6XS6GpKdhYcJIkNYpg1XG9LaDT6bBY
      LBiNxrs2gIvFIn/5l3+JIOhw2W3kC1na2tsxmYzs2bOXalVjenoKr9fD9PQ0uVz+cSBsM1xP
      h/7dV4bvqsbPveB2gbDZ2cVNX0ulkng8Djo6OtDpdMzMzHPiRByrdfMaQ5qmEY+P0tTUv+nr
      iiIjijqKxTiSJKMoRUolPRaLA0HIA3ZWViZpbT1ItVohHh8hFDqEy5WkszPAiRMX0TQRo7Eb
      WS5hMKzx/PPDGI1GNE1jbW3thvlAbXd3Op33lfguyzL/6T/9fzw5fICgP8DYzDQd3T1MT0/S
      1NTS2Cji8RVsNiv5fP5xTvB6VCoVZFnm288O7Xgk+F6wtBQlHI5w7txZotEVnnjiAPPzMSqV
      S5hMHiTpzmnnslxiYeE0kYiZYtGJ29119XoZvV5FrzchCG40TaO1teaxkyQdNluYVGqUY8cO
      43DYefllG2+/PYooihSLcUQxyGefjfDMM09s2NGvZ4AajcYN6tz8/DyZVBpJr2NtNc6RZ47d
      1is0MjJCwBtCvPps8Wq8QRBE8vkcS0sLWK02isUCiUQcj2fzmlRbBlUuMnL+PPGlxU1p0HXs
      BB1aUyu88X9+QTxXIb4U5b1PT3LxzCkWpidZjtWyiM6MLfI7f/azXR8JLhaLV3dSlURihfb2
      ThSlVqkhGjXgcDwL3N3BrtMZ8XgixOM5jEZvQy3R6Qzo9ddUrPVIpZZYWbmEwaBisZiZnLzC
      Rx9dpFAokcslcLt1qOoMhw4NNd5zvZonSRIul6uRwFLH2OgYJ371MaWZOJ6KkYmx8VvOX1VV
      FhdXcDvtWCwWEsk1vEEvyeQamqbh8/nxer243U4MBiN9fYP4/YHtPQFURSZbLOEr5Li4OAKV
      IkGPi9LaMqOzy4RbO5AkjUggxPjI9tGhlXKeLz5+h76vfJX5cyOkE1HKeispffmhLFIlSRKL
      i/P8xm/8GoIgMDY2ht3eREdHO0bjEgsLUaanddjtoTt+Zk0FacfpbIN1Fs16luZ6X30+n8Ji
      AZ3OiyQFeOedD+jv7yEUsgB5SiUD+byOri4bZvO1AKfBYNjACZIkaVO15+lnnia3mkRAoGIT
      6evsuOGeOlRV5eOPj5PNFOhta8JsMpMtFVBLKoFAmEwmc/VvEJmamiYcbmq8d5tVIAmHxUxR
      VnCYzcgimPUa5nAbHTorHn8Aq1GHpgiI20iHloxWDh17nh+/9gbDvUO4zS0kJhZ4+sVDaAbP
      Q1GkSlGqSFLt65IkCY/Hw+LiIi0tLfT39zM/HyUWi5NK5Zmf12OzBe5xJAFVVVhZmcBstlMq
      5QmFrlXrqwuBTlfihRcGgAEuXBilo2OI1dVVjEYjQ0PNnDgxQTq9xsDA8Ian12MBdU+Q6SbR
      f7PZzHd++3tkMhlcLtdNZ6uqKq+99jMEwYzDakbVNBKZJLKq4PUG0TSNlpZW5uauIMsy/f0b
      N9jHRvA6zCys8svTM/zWi4M7nhJ5p0ZwNpvB4bDS29uzKZXg5z8/hapupJoXCglAvKrOWG5p
      BAPkcgkkaYFCwYTP13+D6lMqZTlyxE0oVDO0ZVkmm83y2WeXUJRWZDnBM8+0UiqVMJvNN8Qq
      KpVKI3nd5XLdM+FNFEVmZmZ4++33OXr0BeZnx+hua6YiKGgIGI01terixREikQgzM9MMDAxt
      ELrHRvA6dDQH+IPmAJlMhnz+1nWBdpoyvboaxWaz0dQUJBwOA9cMyRqPp6ZaiGKOQmEOk6kV
      TVNJJq+Qz8/hcFhpagqQzeZIJmdwuYIIgoTFcmNwyGr1IMtmvF4LlUoBSTI0Tp+a0OUIha4J
      kF6vx+PxEAi4WFmRMBoDnDw5zdGj3UxMzHL48EYBMBgMuN3uRo7A3ULTNM6cOcOhQ4ewWq3Y
      bA6KxXzNpapqrCUSpAtZNK02t3w+RzabYe/efeh0Gx0D2yoA6USM6SuLeANhWpuvuuW0Kulk
      nIrkxu/caBCtrsQIBP3bOaU7wp0Uxvq/f/spwrYyc9Ekzzx9lNOfHkeT9JSrOpojni2PDj/z
      zNM3XSz18iN6vZ5XX32R2dkrzMyssrCQQ5LyPPfcMEND147+557r5X/+z5+wspLhwIFv3bAo
      BEHAYKgt/mTyCjZbCLvdiyyXkSQ9qmpgfj5KS8vGoOV6QqGi2BgZmWZlRaSjI47f77thjHtx
      LUejUc6cGWHfvtrf4/F4MJkMyHKWqelRMqk4vQN9DB0Y5h//8Q10Oht9fX243bWaRefPn2Xv
      3n3XYhObBcK2CiaLlXymQCYVY+bKAivzUywsx9BKFZbiaT48/ilqJcuVuVWi89PkiyrhsH/X
      BcI2w7N7m2n3u/jgxCcc3H+AdCrGheMjpIo5VlYX8QQ7sFnu3A15u0DY7fzjlUqlwbd3uVxY
      LCJzc/Oo6hrDw0PYbNc4VwaDgZ6eTt57700EQY/bvXn0XZL02Gx+jEYL8fg0oGE0WtHpzESj
      UfL5DKGQr2EXWCw6xseXMRqtSJIRWbZhNFoplxM0Nd2rTXINmqbx5ptvMj5ewu220tJSI921
      t7dw+vQEPZ3NuB0uktk0oiBQKRUwGUQsVmuD/hEIBDdsJNtOhjNbTPj8IdqaI4g6Mw6bFaPZ
      gqJWaWsN4/WHaQ4HMBn0mC3bR4feDqysrOKONBNbWiYWT9H95B6Gh3sJuFyUS1vrSo3H47d8
      3WAwIIoi1WqV48c/4bXX3uQb3zjCd7/7LYLBGxefw2Hnu9/9DrOzn5NKLW/yxGvQNA2HI4zV
      6mvYA3p9hJUVG2+9dZqLF0cplUpMT89hMtlvOKmWlyusrKzc5V+8+TxcLg+ynKJSuUankGWZ
      kZEpLlweQ5Hg5ZdfZm5+HovVgiBBqZQnd9XVfgO/6LERfCPupDDWSwc76Gi+/12tjtsZwXV+
      TD1YtJk6tLi4yPLyCqFQiHB4c0ryesiyzE9/+hq5nJ1I5Pbu53h8hmo1TyQy3EhsAVBVhc7O
      AufPp3C52hr1gOonUrVaZXb2BL/+688SDt+5a/Z6HD/+Oe+9N83+/VZisRDf+lYrLpeTixcv
      8frrX6DXW9i7N4Cm6clkkuj1sGdPL16vlzNnztPefmOe92MjeBO8emxg26kPd4v1fJ86ZFlm
      ZmYGVVXxeDxYLBYOHbrzvAq9Xs++fUOsrKyRz9++jEg6vYogZCiXuxvBMQBBEJmcXMZoNDVi
      BtVqGVHUoaq1WEJHx1EuXVq4LwFIJLIEg00kk0mMxhAffzyKxVLi3Lkkzc3fQtM0stkxenra
      CIfbSCYXsFqtV3uQVUilkrhc1+qXCoKwfSpQKpFEpRblzeayxGKrN713txXGymazGwpjjV26
      yKnPR3ZFYazr0wm7urro7+8nEAg0DL27QV9fH+3tTUxNfUK1Wm5c30wx6Op6CnBQKKQAKJdz
      KIp8dT6tSNK1E7Falcnn46ytzZDPLyCK08hy6q74/Nfj5ZeP8MMfPonBIGOzzZDLJRgdjWIw
      OAHIZKaJxbLMz89dHUfAarViNps5cuQpqtUS0ehiI9KfzWa2zwheml/C4XOzOD3LyKVRSoU0
      K4k0hWKBVGyF9956k3i+wvz8HBISU2PnWYjlaAoHHrgRnM/nGZtZ5uign8trBtTCCkKhyNLU
      GGOLaWx2M17PzYMz94J7MYLr1ZPvF06nE4NB4P33fwYYyWbXrvtJNH4kyUwiMY+qVslklrHb
      BcCCJOkRxWtzzOcT5HILNDdbOHiwg3i8SKHgRpYTBO/R06fX6xFFEVmWiUYTWCw9eL3dZLNL
      CIKTcjlHJqMnlVpkfPwSzc1OFEXBarUiSRJ+vx+Px8X4+AQej5eFhbntU4FMZh0zs3NYrHZC
      PjdufwBJgNXlZQRFJtLVgd7qJuIxbXsk+F6wvjDWSrFCuqAy9CUujDU83M+pU9P4/bfv0RYI
      9JHLxdDrc+h0RSYnT9LUtBeTqWbDJJOLRKNj+P0dZLMlVldjdHf7WVxcJp2+vwohgiDQ3t7M
      7GwWg6FWCrFSybOw8DNk2Y8kOWlqcmOx+FFVL8vLVSqVBbq6OtE0jcuXLxMMhtA0jebm1u0T
      gHDrtVLnTev8xZFI02a3b7jnQUOv1+Pu7uI3u2uMyPbWe9dbHxbU/PLeO77fZvMDPiYm3kGS
      zJRKowjCHhKJBfL5DD5fD4qyxOqqistlZmhokPb7jI3U1Se3243fbyCdrucOOzEa9xCJpCmX
      z+FweCkWawE+UZRIpZJYrVYURUFRVMzmmks0m808NoKvR6VSeeRaHkHNoNa0u1WnBJxON5oW
      Ih4fR1FOE4kcwOvtIxiMsW/f11FVDat1a3o+Ly8v87//91nsdj/lcg5RHKe5WeTZZ5tZXV3i
      1KkAzz33BAsLE6RSMVJrRaxWCwODA2iaRqFQ4KWXXuT8+RGy2RylUnlnBGB5cZ5SVcDjdeKw
      2VHLaRIl0wOJBJ86/jHOcAdtPjMfffoZgVAzJqO5kdt7ZmyRoc7AQ5EPsJWopSBuNFBzudXb
      kuoslkFUVcVoPIjZ7EaWS2jaKMFg5z150m5VKkVVNcrlEjZbCwYD+P2LPPFEEx6Pm9dei/KD
      H/j4yU+mGBwMUS4vMzE5Q0UWmLlSQK/vQpZNBALzVCoK5XKB/fu9OyMAa/EEFref+EqCC6c/
      w+U0kVPcvDs9wZ7uCKWKDkEtoDe6tlUALlw4j8luprC0gKnzMHoqxJdipFcWGrm9jypEUSQc
      NrKeAnUnjFK9/truXq2WWV39kH/5L79/TwWtVFWlVCqRy+Xwer03PCOTyaLX10/nDHv3uhtO
      gHDYjcNhYnAQDhzYS7EoUyzmUFUjOt1RVFVGkkSSSTeKUmJlZYSjR5t3RgBcPj+RpiYW56O0
      d/WhlpOk165FggVVIBFbxLDNkeChoWHefPMXeH3tTJ36gMWMwKvfOMLixHnOn7//SOXDjqef
      HuAXvxhFr7+3AJ9OZ6Crq+2eFj/UhNBisWA2mzctb9jb243ZbGJpaZlw2IXDUYJq+sMAACAA
      SURBVOtFsLi4yDvvrNHf38WRI3vxeNx84xvPcfz4cbLZLOHwKooCmqYAZaxWC4HAy7XT5nEk
      eCNmFlbxuyy7jg69U27h6ekZPv98nnLZitNZY53eSa39arVMOFzg4MEejMatUx/rp4LFYkGW
      ZXK5XONaPTg4N7fAz3+u8Hu/F6C5OdJosVpvkVTvTnn6izNo+TLhrlZMZtPjnODN0HEdHVoU
      xV0XFd5OdHZ2YDAY+PGPT7G0FEWSbIBIe3szOp1pQy5vqZSmWi1hsXhxu3McPbr1WXX1VklQ
      2wgURSGXy23g9Le0NNHScgK9PkI6ncZoNFIsFpFleUN/4ZHXP6FJtRDsaKZardbqlW75jDeB
      nE9R1juwGWr62oM0gu8E6+nQ3z7SwQ9e6uXTM5M898yTTI9eJJoqoKXTtPZ209zejrTbGh3f
      JwIBP62tJuJxDUXZAwhMT88gSQVaWiJ4PCkiETeqqqOzcw+XL48xPZ277XPvBYlEgnQ6g15/
      jQdlt9tvKK/4yisHMBhqtUcLhULj9fpJAPDE15/BEfJgtVmpVmuxnB0RgEo2yehaDLMkMHvx
      LKFIEMXg23Ej+F6hMztRpVrapMPl5ONPLuJQU1/aqtIGg4GvfOUw7757Ep1unni8Dau1lng/
      NvY2/+7f/XDD/UNDA5w8+Xdo2rEtL2br8Xiw2+0kk8lGzzBVVZEk6aYN9+q/1w3k+n3dw/2N
      k71OLNwRAZAMJhyWWt+ocEuESCTIzFJhx43ge0Uxvcb05BTNgQ7K2RWCYTtdLX27Oip8pz2y
      boZAwMvhw3vI5TJUq1FSqQiSpKelZWNJ4fri+q3ferWxMLcahULhqqvViCzLVwNayobyiZqm
      US7XuEz1xb3+hFBVlWKxiMlkolgsXuNTPTaCb8R6OvSeNi/H9nVv+5hbbQSn0xkWFxfo6uq6
      bwN6fHySd96xIQgSOt0i/+Jf7EUQBF5//TR+v4knnqgFmorFInq9vrEAt+I0kGWZeDyOKIpI
      ktToMV2vMFcXirqxW/9dUZQN3eHrwul2uzc0037kjeBisXiDy+1hKYx1KzidDvT6dvL5wn0L
      QGdnBx0dlxkfl4AIP/nJeaDCykqR4eFQY9ev9/VNp9NYLBYWFhaIRCL3Vef/+tzr9WUWJUmi
      WCxucFLUPT91Aby+J3WxWMRqtbK2tlZj1u7UCTA3M4UiGuhoa7ntvVt1AuSTMSaurLF/fx+X
      PjtBxmBHXl7aYLz+1Wsn+dmJmQ3v+9s/+faO0yF2ixv0VkilUpw9u0ixqDEzs8yLLzYTDAbR
      6XTbdmIrisLS0hKKojQWc70AQJ0aXleF1rs+VVVFVdUNAiDLMrIs4/f7yeVytfduy6w3Qa5Q
      RBRVPnz/fRS1SkkTUdNrGK1uPJFmMqsz6Gx+nnnq0JaMF19eoCKa0StFAMYmZihLNkzZpS+t
      8brdcLlcPP98jQZerdYMylKphNFobKgbmqYRjcbx+RwYDIb7VoM0TWs0LtTpdBiNRvL5PFar
      lVwut8EYrmegQW3TuL4MvKqqmM1mkskaOc5oNO6cAGiKQlmV6erqpVjKIAsGikkTTqeXXFXE
      5w1i94W3bDxfqJnEapSLo6O4giH8bi8FyUnnYOuuNl4fFuh0OpxOJ8Vimb/8y1/xr/7VywD8
      9V9fJpVa4/d+bwi9Xo+maRiNxnuq9lwfp729vZETnU6nEQShERMwmUyNXb7eDKRezS6dTjd6
      BtdTSusnRr3xySNvBH9ybpJLVxIbru1ENejr8TCoQDfD8vIKTqeDM2em+Nf/OszAwDI//KFM
      X58fo9FIoVDA5/M1PtN7EYRsNks0Gm3EAJxOJ0tLS7hcroYHqK4GGQwG9Hr91TpJteZ8xWIR
      SZIaVaqhZg888gKwGa7vZLMTeJgFoI7z5y/x/e93AyKSVOLf/tsx2tqqzM5WGB724vHUFqvV
      ar1lucOboVKpUCwW0el06HS6RqecQqHQsAkKhQJwrRdBtVrdQIeoe4hEUcRgMOysF2gtsYbn
      asucbDaH3V7j22RyWRy7qFXSf//F5/zRbz/PB2/+gu5DX8Gi5vn0zEWaA048Lg86e4iQf2e5
      QrsN6+v6Q81Yff31JQShC00Dh2OKaHSVZNLC7Owg5fIIqdQahYKVPXtEvvtd512fBAaD4Qbv
      nE6nw+FwsLy8TLlcbuz46+8rFotYLBbK5TJ6vR5ZljGZTNhstp0VgOTaGkZR4R9e/5Cu9hAO
      iwXVYMZsNDEe277q0PcCJbuIpf1p5hcmeXJwgCsXZ7BKLXz6/sNXTXo7UK/NWUexWOR3f7ef
      YvF13nrrAD5flpWVo4CKIEiMjtaqVWiazEcf/ZRkssyzz0bo6opsSPS/V+j1+oYatD44JggC
      pVIJt9t9jf5wVWh2jAtUR7mYY3quQEdbM8GgB4/fy9jYLF6Hg+wuywkWrQEWPv9H2nu7mJxb
      oqXVzsDQPiTjw1FNertxfcT33LkpvvgizfT0C/T0TONwrCAIe4HaffXFKAh6dLrfZGxM4PLl
      KEbjeQYGdHzzmy24XM57no/VWutPJopiw/CtQ6/XN8hvlUqFQCDQEN7HNsAmeOf4OV55erMu
      wtuHh90GOHFimv/4H+2oqh6PZxyLpe+u3t/UlOKP/qjtvuYQj8cplUqIoni1vmlNDar/v24P
      uFyua3yh+xrxS4qn9nbsyt7AuxlPPdXBoUPLgI5KpUy1uoQkLaJpt675VF+IZvP9c4isVusG
      t2i9r3AulyOfr1WPrlarDVUIdkAA5EKWkfMjFMo3LqhsLMYtOic9MPz7//oBpVKJhbFRPjx1
      CoD40hwXz17mk09OMzc7+2AnuAshCALf+Y4XScqSzx8knV7iD//QTFPTLJpWuOn7NE3DYIjz
      6qtbc8LVbQBBEMhms5RKpYa9Uu8BV9/cNE3bfhugWpUplkqMjY+RTsSIhP2MnD2PJ9iEUC4i
      Oa3k8hVcZgm7I8TQ0O3r0uwUFjIVDHoJUPn40zO4ZJloRWVpEQy2ACHf1lQ7uBPUXXfXN5fb
      avrx/aCzM8Jzz43w/vsmzGYbTqeTf/bPHJw5c4G33upBFDenl3R3F2lq6rrv8evd6eufidNZ
      sykKhQLVahVBEBqJNPWssm0XAE0QMZt0GPR69F4fFcFAc3MbDo+LVCKJze3B5zNgNxsR1N3z
      ZQJYqiXm15LEoisM7e1jLZFn2CyRXF3d8urPt8P1FeAqlcquJOz9/u8PMTg4zU9/uoam1YrR
      7tu3h2TyEp99Nrxp/2KPZ2so1HU6dD0RJp/PYzQaMZvNjfhBvQdxqVSqXduSkW8Bi93F3uED
      Gy/2bj+9+H7w7N4mRFFk+Ohh6h2u/ISh58HNaT3PBW7strhbIAgCR4508ctfXiGfL2A2m6hW
      q5jN+k0Xv6bl2b//3r0/6+FwOCgWi415WCwWSqVSwwPldDob0ej6CfrI0qHr+uBm2I106F3o
      rLsl0mkv/+N/nMFu9zI4aKW728/4+HmWl/de5ebIeDzzDA9baGm5O4/RzVDf6eul2+u1U8vl
      ciMyXMeO5gRDrWfwxcsTtHf1YbfWdq9YbBW/P7DlkWC1WuSX73/M8PBhggEnp059gVWv4HRe
      i+KeGVvkz390ctP3/+2ffHvXCcB2ZFptF2pV2FJ4PK0IQjMXLshMTk7w/PN2fvSjeaCJr399
      heef37clxX3rqBu/tYT9UsPtWWeprk+kN5lMO2ME11HvGTw2cpbpxTidTXaKssjY6DThyNb1
      CVbKecauLGMxaJRkhdMnP2J+EcKO3EPZE/hhRDabo1AoYjLVDFtR1FMsenj77WlgEMgxMODd
      0sVfR53paTQaG1yhOg16/SbSiBFs+QxuilrPYCSJgYFOIi1dtDWHMFotGA2GWvukLYgES0Yr
      PWELl2aTaLkYvpYu7BaFweF9DD6x93EUdweQSKzh8RiRpNqOqygFSiWZeNyCKNo5ePD+GmXc
      CjabDavV2tj16ymSNwsy7tgJoDNZGdp7487berUBePMWVofW28P84Q/+6bUxIrVnPxO4NkbA
      beXbRzbvPr4dO9OjhJo35poKKUkWFOUKkYgPVf2I7373W9s2dj13uK7vWyyWBoV6MzyyRnC9
      J/BmyGQyN+QJ75aK0bFYjFgszp49Aw96KjfF5GQFUdy44PR6EwMDKk888SIm0/Z6sGw2WyMJ
      /nZEu20VgImJSdoiPpYzMq1hP/GVGO6gn+vNud1Gh76+T3BHwMpf/PG3eOetd3nla6+wvDDN
      JyfP09YWIejZWXq03+/nnXeOUy6rHDiwO5iz66GqKu++WyYU2rjIdTonBw+68Pvvvo3T3aKe
      FH8n2FYBWJicplCpYtFX+cmv3iLSfQh/JsbETIy2Jj/5eJTlsoHBrtYtM4K3E5Kt9qWGmjtx
      TUxTSSf4xYc7a1grioIk+Ugmy7e/+YEhhsFwrZN8e/slDh8euOfWSNuJbRWAnj29rCSy6MQq
      ka4OjCYjlUqRgN+LWs4Q7BmmPDNd63G7y+jQN0BTWJie5pLdS3NnE55QJ71+M4p+5+jRmqbx
      k598jMlU5plnntqRMe8WhUKBcvkMOl2N/282f8qLL760ZU0ythrbKgDNbe00X2W4Xm9uLi0v
      Ew4FaI3U9PCtNILvF8f2hBjqvGYDuK16EHT84Ps/bFzbP1BL6XvmK1uXyH8ryLLM22+PUC6L
      /JN/8vKuNdSj0QSa5kHTap/f/v3du3bxwwM0gsOhB9t3K7++E8R1+O7z+3ZdIOz06UtEo/Ct
      b/Xs2sUPMDNTIpncT7Wao7U1x759u1elhR0SgHx2jakrMYaG+m4IPGRzWTTYUiN4cuIysUSB
      o0cOceLTj/F6fMQSBZojHlqvdoH5k//83gZDdz12YyR4794eenvL99QLeCeRza7hcOTR6zuI
      RjMPejq3xY4IwMLCKsND/Xxx4kNU0USxJGO16sgVZMrlCp3tnVuWEzxxeQSby83klThoFabP
      jlFsSrOUzj8QGvNWwWKxbCj0tFuxvOzE680AKocPW24oTbjbsCNnqctp4fzFMUItXTSF/JhM
      RkRRwufzE/K5G0bwVkSCewb2cvbMadwuK7HlNfxhL9ZwJ8PDvQRcrh2nMT9q8PtFEgkTxeIF
      jhypkdyq1epNiYcPGo9sTvD6CtDX43FhrHvH1NQC/+bfGDEaJ/mzPwvS3d152+SdB5nc88gK
      wK1wfcXhncCXRQAAXn99nL/+6yLDw6f55//8G7fl/dQL2dZLme8ktnTE1dVVUBXcgRD660Lh
      qytxfG4DiaKx0RppfXGsnUJxbZV3T5zmG9/4OlOXL5IuqJQTKxsqRmez2UeqL9hW49VXe3nq
      qTUSCecdkd7qvP0HgS0VgKWFOfIyeGJLzCfyCKUszR1dXBqfJmQzkY14mYqmkKoaFreT4lqC
      5tYQU3NxXDZhR3KCz08t8/KTnVxYyCJWS+jLFaLz048rRm8xvF4P3qtVAHcztlQA7G4vTqXC
      Wq5IwOsklVCplMu0REJ4LEZUUWVoaIjUSoJcOUcw6KMsawT8XoIB947kBLe5rfz8vc948ujz
      rBQrpAsqQ0eeelwx+hHFYxtgEySTyR33t3+ZbICHCY8sHfp6rM8R3i3U5y8L1nd23G3YVstj
      eXGeC5dGud0Rk8ndunrYfUNTOP7+CQCWFqf41UefcPHMKRamJ1mO1RqmnRlb5Hf+7Gf8zp/9
      bNf6rB9G1Ds1ViqVDRXZdgu29QRIJtZIrKW5pMpkC2XEaoV8qYI/6GXs3Dn8nf2IWpVIYOty
      gq9HLUd4Caetlp43P5nAYbCSXIs+zhHeAdSbEBqNxl15AmyrADi9PgxGAwVFxWAyEnRHQIBy
      dpVIVwd6q5uIx4SmCNtGh5aMVvraIvzk71/DZrdgcAlMXVniG8f2ww5SmR81aJqGoiiUy2Ws
      VuuupUQ8NoKvYmZhlV+ernWL/K0XB7HZdjY+8WUzgiuVSqOB3lY0y9tq1O2SR84IvhkNOuC2
      8tsvDQHs2t3qYUK9e+P1tfofFNbTLVRVbbRV2jYBmBgfo6f35hW/srksmqptaS+u6dGLRFNF
      njlyiI8/eB+Hy0cuL98xDbqO3UiHflhQL0pV78lVP9l2KtJ7M15RvTaoXq8nlUo1yiVuiwBo
      aoXx8+eQgMVMCV0xi1ItsrCyRktnL6JapVrJYfeEkKoz5EoV9FrxvozgicsjmB0upj+5xDNH
      nsBp1XNu5AKiJj3UNOiHDXUPWt34ha0t61j3KtUrwK2/Vrc76qeOIAiNUujVarUhBOvfty0C
      kFxZ5eALr5C6Ms6ewYPMXzpHPl+lq7sPr8+PSQeFQhZZ0ONwOvEKGstL0fsygnsG9nLh7BcE
      wzZi0UUS6RK9PQexmIoPpJrzViOTyWCz2XZ1Nli9AUX99zqub1p9L6h3fCyXy7Xujjod5XKZ
      SqXSWOTX7/r17pD13mFAo0x6Q5C23wjWmJ+dxR2IYLPcmSG3nUbwubE5SpVbd38Z7g7tKjZo
      /YsXBGFXuhLXo87sXI+tILvVu73cyXJdrwbVT4v69fVCskO1QQVa2jevwPYgsK+v9aavVSoV
      zowt7rpFVu+L+xhbj23/VEupJUbmszS5bYiiisvto1DMYzZb0DSolEuUZAWn3bqhg8d24N03
      f4HL38WBAS//8PbndIXcaKKE3upieLAHWZb58x+dfGwEP0LYdgFQKgXiq2lsUhlZ0XNlbAR9
      ZIDk7BeIgoYj0kYqvkLA60ISDewZ3J6SfxcunMcXCaNmU6haALcdknmR1MJl8oKNwcEH2P3i
      MR4Ytl0ADDYPRw5HSKwsoRVzNHUM4Iq0EtOpaCJYDDoMQhCxnCHQ03/7B94jhoaGOXH8Y1yh
      NpYX4lQqKk99ZR/ZZT+TEwuP22U+otg1keBKuYzBWM8UezB06LoNcKCvacdVoFv9zaVMiveP
      n8QbjvDk/hpvKRFP4PV5G/eMT4zT29PLlfk5TIKCJdCG3XBvYj0+OklvfzeaKvOr9z/EF2wh
      EnLj824sbTg2MU5fTy2BSauWePfdXyE5gwy2hQhG7rzQ2YXTn7GcLvHSC8+y0yGzXWNZGXYw
      1H87T9Bu6xFscrjwWL0c3D/Eu++8gWh2sDo5xdGXX2R+YhyLt4lyPgk9cOrEx4iVIp37nmF1
      aZaO5hZGxq6AViHU1IScXcNg9+IwG5mPLtLa3EIxn2IpnqYt5CNZAJ1cIVXI8sSeNpZWcjx1
      tJm/+/H/4pXnn0WxNlNcnWN+foZUWaWQL6ATdewdHiLiMePeM0x6YZYrc5+wGF1BJwn0DQwx
      OztF3/6nyCzN0xqycerCIpJO4vnnjnJlfpa9T36FqdHzRJMlLFJ13Xw0tHIKg93HscMHt/yz
      3SEB0Pji0xP42toJeX1USiWqmko2k8TjcpPOl/C4HFtiBE+PXuTyzDLf/MYLvPnzf8Cit5HD
      THPEy/DeGtXhv71x7pbR4L/9k2/f1xy2A7VjWkHSjCiFPOHWToI2geNrefSpSZpDtdPAH27G
      TpnphQVeOHqYsyd/RXPzEarqHHo5z9jladr2WMguTZPKKpQVCadOpcVmYDaW49tfe4H/8h/+
      X4af/waaYOClF4/y85+/QUdXD36XkXOLCbJz8wh6O25TlWIiQUoV2btupvHVFGAg0Bymwyjw
      0ehl/E4H6cQaEa+O//6Pn/IbXzvMx6fOUlHhiaNf4eNfvoPVG+To0WOc/vT4uvk8y3/7D39F
      257tCWLukAAIeDxBmoJ2ZmZiXLl8np4nDnH25HF84Q5kRcDjsaC7TyO4Hg1eW74AahG3o4dS
      IUFudZGZ3DJWexNd7bu7strNMLCvDxEdnd3NCCYXNr1KLCfQ3xqkqaMbs772VR7cdwC9pjJo
      MnH+zDmefv5VyrKIptgQ0QhGmlBFC05LD3aXm7VMAYNWYjGe4/mwHwH4zR/8AZVyEVFvZiU6
      ygsvvgjlLPGyBSk/y9ATB8nEomBykY1ext9e6wLa3r8fvVmHdV8fNV1GwyzBrw0c4MLZs3R3
      tmAx6vm/vuPAbNDT39+PSYTVfJY9TzxNV4uPi+Oz7D84vG4+Ol765suo4vYIwI7ZAKlEEofH
      wcVz59Cb3PT2dxCPzpPMFFFFETW3RrBnHz678b5sgAtnvyBTkOnp6GBs4iwtHfvR5BLJlSgt
      AwfwuUz88V/87LYnwE5nhT3oNNBHFY+kEXw7G2C3RYJBZfTyJF63C38oQDKdxu281ls3uxLl
      wvQ8B558EpNOZGF5GbuiYAg3kVhcornlWgXrci6LZLWju0dr8/qxtxLJtTRuz+2fnU6l0EkS
      1jtcI4sLyzQ1b16eZdcIwHrs5G44s7DKanLjabD7BEDmjX94B5/fxGqxSixRYqDZw6WFFb77
      9RcpLl7hfHQRk72ZgNXM7OIEQjZHxegh3NTC3PRpevY+SfLKKAJWAh0B5qfnmFmI8dvf/3Xe
      feNzqsVZDPogRocNs7FEIa2gWozEZxcJt3mxmC3E51dIGl0c7vIzuZThhYPd/OT9z3myv5vE
      zAQTyTKd7R4sejtJWcYil4jF0lRNRl55Yi8zuSr5pWliK3mMHiNWg4eqkkHIl/F0DLC2PI9J
      qpKs6BC1PC89e4hLY8ssZwvYlCxjV2L809/5TT758GO6msNMXfycWNGBr8WJyWDG7zCwli4S
      X1lAVQ0MHXqSaipONJZHEpKoZR3mSDNfObyv8cnekw2QT6wwvrCK0WKjM+IjXazitJnR1Cqr
      8RSCquELeBHLab6YWKa9JYyqaDhtBkqKhNNmBrXA+fPz9LW7WZGNNHms5IoVAt6t09GziVVG
      Li1w7NmDnHr7DRIGJ9WZcYL7D3Fo/14kAX55eoafnZjZ8L7dZwSLHHv+GHNzs7iUDANHB6iW
      Swzbnaio2ANBXIUyLqeZXF4mHPBhbWljNS/T2uTFZhrC6/fhMvSRz1WRqwr9A324fEGMkoGn
      jz1BfMVBfLWEzu2gtzVEpVCgUFUI2a3YPC7MJjM97b2kSjISCq1NJhRBx0B3Jx6XkeDTz2K9
      EqWlLUwpk8FZhfFzx/GFB/AE7Dh9HsR0FJfLg9vfTqjJg1AV+fzsp/T09zK3kqC/r4NyuYJf
      MuJx2TFbzGSzo/R19qCWM1jcQcxGM22tEbxeH+5jz5GrGKgKFXQ6A5n4FTxeLwGvCw0z/T1t
      LM2qVCUzombA4w0wMb3EWiKJ5+o6u6cTQJFLnDt9mpLOgdMkgqYAKsVsgXQmhWT3YjPZ2NNs
      4v98MkqTz0FVUXD7/RgUDYPBhKjlKMo2yskpyrZ2zPoKA709mIz3ZwPUEV9eQJYsrM3NMXho
      P//wo79Hk6w4xCSrRTODw33s37eHv3rt5KYC8CjaAKqqbinbtNbO6da8qq0c83bPUhUFQZI2
      xBru6QQol0rorQ583iB6rUi6IGPXqQRDTUTn53GHW0EpordZeeX5r7C2PEdJEamUchhdAYRq
      HsFop5pP0dwzhIwRgQKJZIqmUPBepnQDfKFmEqtRZhcXcAVDdHWEKYhOIr49dMslFP1jg/N6
      bDXV+k5IhVs55u2eJW4ynx21Ae5kR4DHNsBW4noK8GNsxI5GgncLzTiezDC1kLjp67tlnluB
      3VqQardgWwXg8oXzmOxunBYDBouNUllGqJYolGUcThepVJqg3008mcHrdm1JJFitFvnl+x/S
      0TKEmp7ni2iSDoeEYDTT1nuAkN/G1EKCP//RyZs+4zEd+tHBtgqAJgik4inmcqvYLSIFqQmX
      roqqKcSicyRTGaKJJpxmA8nE6n3ToZVynrHZBQrZNJ5mP5emLpJZzWJubeWz989TUA2E/Luz
      vehj3DnqqvTiSpxoLE3IY8ds1OF02NHr9Y2MtDuxL7ZVAKwmMzqjhMNpwGQyYnFG0Co5QCCX
      SaAzWPA0RbDqRKKzk/dNh5aMVnqaPIxNusgszOBtbaJVMtPd2ob1280ksumt+cMe44FAlmVe
      +/AC00spnCaYixcwm0wkM0UUQWKgxcXvvDLM3759DlVV+d5zA3g97lsKwq4JhP3/7Z1Zcxzn
      dYafXqa7Z98HGGzEQnAFSS2WRVmWpci2rDhWypGTcqUq9/lBuc5VLlyulBNnqYpjS7YUmbIo
      SlzBDQABYhtgBrPvPb3lAiYFUiI52IZY5rkbVDd6gO4z873fOec9ncwEP0sD7LVy6O3Q7sbD
      fuD3n9/md1eWSXjhi3sFmobNyyM+bqV0NJeIR3Pxk5d6uHA3x+JajYGIQtDn5h//5rWH3wpe
      j/uR/8ehLIeOhQPEwo/6EW3cDdpr5dBd1lnKlDD1OjkLgm4Jw3KoNkxiXgHDsol7HH55YYGI
      V6Q/JCMJcD9d5he/ucRyyUIRbWzb4cevjtFsrfvVdiQAbl2/SiCWxDF1WoZOKBKnVqmQiEfI
      FspomoLTauEORNp2jtgMGzPCFy98SF3wUr1754kZ4b2XCX46Swv3qRkOgl6lJWjYeglvIMHY
      6JMNAPYL0/MrXJ9ZJeRTEawmqyWdum7jdom8POzhynwdBxiJqRRqJm4XKJJApWmhuhxEYHa1
      hNvtxbTBMi3+dH0OCYdcbRed4TZSr9UIRptM3Z0l3N+HkF5G9sh8fHGFwd4AjYqLll6hkcry
      rZd21qn5QUY46PnzOtDw4NE0TL/C9OQMiijxwrlTO3rNTuPWNBaX5gmEAigCCN4Ahl5/aCWy
      33hgcDU9v8q//O4WCb/I1XIDj0vAcUASBVqWQ71l41FEmoZDy3Io1k0coK7bvDrm48p8jXND
      Xq4vtzgz4iEU8DEuGRQ+uwOKhFhpdiYAItEoDhKJeIRoJIShN8isFTl7ehRNEnEcyGZ0fKHQ
      jl/78YywLypjOCrHXnr9wGSEHcAbCBD0KH/+BigTDMce2hPuJ3KFMv/xyS1mU3lEx0LXbT5Z
      auJRRF4Y8qDKAjXdZjCsUKiZjPdqlOoWMb+MYTokwyrZqoUkyZw/HidTeGfFqgAAD/ZJREFU
      MRlOKLxz/gSyALP//hEuw4KajlTV944I3sjzcod+oAEOUiZ4P4lgwzD4p3+9wEK2TqbY4FRS
      48ZiDd10kEUYiCjE/DKOA3dXm+iGgyILnB/zMbemI4kCNgIvjkYIKCKJaIBcuUbTEnnzWB+L
      v7+EPJUGy6Y5HEFdLO4dEdxJ2nGH69JZTNPkgz/d4IuZPAI2umGTr5lIEmCC6hLRTYdsxaTS
      tFFlgWrTxqetL4EGwgpxy8IU4fjKCmLTxJWu4LUcjKEwqytphGIdM+TGUmWkio6R8HU6ACxS
      i2lMx6anJ0q91qBa1wkH3LQciXKpwPDQ9oTbQe0JPuh8PjnH1bkiLknAstfX+tmqQdTrAsek
      adj0hxVmM02SYYWEXybktTnqFjniGERWS6guGVotpKqO5VUQTBtsB7FYx6zqmCE3aqqINRBC
      LjSwfUqnA8ChnE2xWGqRWl1ioCfJ5O0ZfB4JzR0mFNneUIqD3BN8UNH1FrdnU1y+u0yxbjGS
      cDOzWkdzCTRbNseSPgaiDmvlFpWmxUBUxXFAU10ct3ROr+bxhzTkqo4eAKnWQmhZ4BMQTBtb
      k3EkEUEUEBFAkpArOlZAxQponQ4AkWhvH00pT19/Hy7HJBGP05PwYwsqPs/26oAeOESPHT/C
      WrqKwSrDp1/gyLExCukUwVB3+vteolqr88///SWZsoFo6yxnG/SEPZwYCCBjUWm0sBGIhbyU
      jBaOZLCaX9/2TEZkxupFIn43Jg6Otf5pj+UgOCA2DIyoB1uTkW2QvBquo/00G8Z6P4Bt48nU
      DqcI3n89wVtnL4vg31yY5JNbGQAUySFXrFFpWiRjAURbp2GKaKpCX8SN5hKYS9cxDINjSTeR
      oI/xewt4DahgIt5fw3ZJWH4VObu+vDWDbkTbhmNJht/+Nqrfy+KvPkKu6BiygNkbOJwi+IFD
      9AMnuMfZqw/MQaNQ+WpAYcsSiIR8DMkWb7xwhOW1Ml/OFgHweVT+4UcvUCyWkGWJ4J+nCi3I
      DtbkIk65SSvhR2waGGEPCAKCKIBbQeuJcPT9tx/e08GfvUVxdgmP6iI2MtC5AJi5exeXN0DI
      7cJwQJRVWrUivkiCYi6H36OA4l3vF94h/vhf/8uLP/4R1fuzfHHtKr5QAp9P/Zob9ON0y6E7
      w5HeIJOL5YevDQuSyRCvnj1KU2/h0aaoNQ3efGkMSRSJRh7Vb33fOUcKsK9MITRaWEE37mwd
      WxExEgFkG4785I1HPtA0j5veia+MkDsWAI16HdUX4Obtm8RjcdKFGmG/yq3r1zj16ptcvXGJ
      QDjBi2cnduR6k5PXGR7swQAUj4THK5HKWyiLB9MNeuruNB5VxBA1rGYZbyBOsjf2vN/WU/n2
      xAipbIVr94vYDgxGVX7y3fWsvKYqvPv6058FWZYJTIxS+fAagmUjVA1aozEURHw9UUbeee2Z
      JdEdC4D+oSNEohG8bpVKuUA8rhGPhIhHQqRXVxkeGEL27NzAvImJs3z64W8Jzs0SlUFH4Wfv
      v0FqbujAuUHPTt8indOJhjRk0UaUJMqFHD2JyJ7OBMuyzM++/yLfL5UxLYtIKLjp5adLUXA0
      GbHWWn9tgWbYqD2RtvoBDqUIfsCTNMB+K4cuFXLcm11EU0VsUcNqlfH6YxwdG97TIninWJtZ
      YPWPVxGbBpojIY71MPj2K21N1TnUAfBNZAtlvJqruwu0z7Asi0qhhCiL+IPBto0AOrYEujd1
      m3K5xujJCTRZoFYuImteisUSHq+2q+XQG3kwJmliPMEnFy6gNz0k+wMPhfG9pRwTo4ldfQ9d
      dh5JkgjFIps+r2MBUK3VSefzuFOLuERolEvgiORaDn3h0K6VQ29k45gkxT1EpWIyca6fG599
      fiCFcZdn0zEtmOwf5Dsvn0OWZKoNg0A4jCcYJOL3EomFcbkU4hsmnuwGExNnaVbqeHr7mZ+8
      gTsSIN4/zMvffYO+RPxACeMu7dHVAI/R1QCHi+6H3gbmljJPbZbvcvDomAa4df0qtstDLOgh
      5FNYKom4ZZug10W1aaMIFulchZMnxnbl+nMzd7h8+R5//Xd/xZ3Ll5hKpVGy2W/sC+6WQx8e
      OpcJrtXxRFxkclXSy2mqxKiWMvQl47gEhZbdRJV2ZwxOdnWJu/NLfGs4RtmwGRvqoSYHqejl
      fdkXfPHiRYLBICdO7N5Y2cNCxwJg9PgJwpEwt27cIDJwFE/dxKM69Cf7wIFcJoXi250AiPUO
      8Iog8um1Gc7n1lhr2bx67hgLfnVf9gXn83ny+fzDAMitpUmlC4R8Lsx9VAqxF+hYAIQj63u0
      p86cBeDxgTWR6Ob3cDdDtKeP9955dHbtkdEjj7z+/ksjnBlJ7LhN+E6Tz+c5c+ar7eKAz8fn
      l28gDfUjC/unFGIvcCjLoeHp7nB7fdfk+PHjmKb58HWxVCIaCiPaBi1BWv8G8O9PV4hOs6sB
      sLqwQCafJdE/jCAI+FSJe7P36e/vx+f34eCQWcsT9KpYgkK5vP2eYHjUIXpsPM6vfv0RgyGg
      TYfovV4O7fF4Hkn1x3v7iPe2P5m9y1fsagA0Gg0cAe4vLuNXYKpQJhoN49ILLJXyzKerJCNu
      WlWb1UKNnsT2l0GPO0R/+Jv/oVTQGRkc5MonNw6EQ/TCwgKSJHHy5NadtLuss6sBEIrFORI9
      Tjq1QKlucPpUP7alU9UNCoU1egIat6fnePnMMeJxjWh4+8ZYjztEv/bD95jI5gi4TIKhwX3v
      ED07O8vY2Bi5XDdfsRM810ywbVsYpo2quB75eScywU/TAHu5HHp6epqFhQVisRjnzp175vHd
      TPDTea4iWBQlVKWzN+dZ1uiwt92hx8fHGR/vFu3tFLsaAHazwGJOQLarqKobb9CHCJQKeTSP
      F1VVabV0ao0WQb932yOSHLPJ7z/4kL7RF4n5babn15Dqa22L3wd0M8GHh939BnAs6jUL2coz
      fd9koM+P4BjUqg5O9Tq+5CjZhkM1u0IiGtrWiCRLr3F3fhW7XsdyTOLJIZbny8ihAJ91xyN1
      eQK7mvER3RGsxireUIyzp4/hkgRswU12ZQ5Di1IolIl6VRLxHkRDJzE0uuVrSaqXkWQExx/A
      Y9aZm59lKbPMkaEjvPXej/F4t+c61+Vg8lxEsN5somjaIxO7OzUiqR0NsN+MsXLpFVJrRUI+
      5WulEF0R/HSeiwhWv2Gdv9sjkg6yI3QwFGTq/jKSRLcUYpM8lwBILS1Tq5ZJ9CYpVxvYpkmi
      J7ZlEdzIpfn4ixne/dFrW3aE3sh+E8FzM/cIhsNIZo2W0y2F2AzPJQAajQamJaDXK0xOTjE6
      MsLMzNSWRPD07Rtc+PIWPkk+tI7Q46d3r4/6oPNcAiAciWDodWr6ujt0NBYiPZ/d0pzg8ZNn
      GD95hrXVdNcRusum2TM9wbstgjejAfabCH4aXRH8dPZMOfRui+AHjtAbeVJQdB+Yw8PWA8Cx
      uHr5CrFkH7YNPlVC8YUp5TLUGjUCwRghV4svp1cZHkxiWw5Bn0LTktYdoO06168vcnw4TNpQ
      6Y94qTZaJKI7s16fmb7N7Mwq7/zlW3z60QdUsgaW39uWMN7r5dBddo4tB4Bj11F9Sfp64nz+
      5XX0RhGxVafn5HmarSJWNkcgJrOQWsFq1TAti3A8jmI5lBQN0ani9viYvnsb3TdMtZDh5LGd
      qXGZvn2DpmnijUcAgVbLYvT0KFcuXT40wrhLe2w5AATJj2QvMD9Xw+0LEo/40Dw+cpk0vYN9
      yIDLLfDDt75HfnWBpiXSalZRQwkEs4ag+jFrRQbGJzBQEaiTKxTp7+3Z9h81fvIMly59iixo
      rK2sYrTqSP4w3/7u611h3OUROiqC2xVknTLGepIG2Mvl0JulK4KfTkdF8PO4Ee2UPjzOXi6H
      /iYc26JYrCA4LQxRxW5U8ARj+L3bGzp4GOhoABRXFrmfzRMMJQn5VarFIuFYhGK5hqa5qFZr
      m+4J/t0v/43v/O37LE9Nki41UOqFTZc/P85+ywRXyiVSKzmghYCIIDlkcyVOnj7ZzQQ/g476
      f7QaDeq1OnPTU5RqFVKpORaWCqRSKQprRQzDaPt3WXqNz/7wAZfuzLCSzePx+8im1nCHAty4
      eJvbd27u4l+yt3Bsm/TKCnqjSk03qJQKOIKEKIpt++QfVjr6DeANRwg0WiR7wwz2RimmM2DV
      CEVjRAM+2MS9klQv5//iB5w+dQZTNMk0LLSwl6NDR/C8N7Dve383QzAS4+0ffA/HtnEQAAdh
      j3sb7RX2TCZ4IzspCLeiAbqZ4MPDnskE7xaxcIBYOLClQOhy8OlIAJRya9y8M8Ppc+dwKzKV
      UgFBcWPrTeq6se0RSRt7gaXiAl+mCowEJIQtiuH9JoK7bJ2OBEAwGicRq5BZXQFLoNGoo2ku
      6sU0JbzbGpH0eC9wLlumnKngHhriUrcXuMsz6NgSKBILU68WqVgWA4PrNn66V0UqN4nEwuQy
      Or7Q5o2xHvQCL82v9wJLQ/0MSW6ODh3Be8jEcJfNc+BF8AM2owH2uwhOp5YeJsK6IvjpHIq9
      ss2OPtrvD0y+XGZh9t7zfhv7go4sgaxmiUs3l3hx4ig4UC7mMfQ6DclPzC1St0G2jC2KYJtf
      /+I/+enf/5Sb1y6zUGhgzk1/4+ijdtnv5dCVUgGPd3cnbh4UOhIAU3fukc9XmL+vIQkOpeIa
      XpeEZ7ifmzcvEosPYGxBBGdXl/i/jy+QLq+3V0YjIb6YWqLPr+zL0Uc7xbdeea2bCGuTjgRA
      rG+Q4RGRpWyZRssgEomhaCrVQpYTp86AA9ktiOBY7wDv//znrK2mqedzpDNrHB8cJZnw78vR
      RzvFgwk3tm1j2/amzrVte9MTcjZ7zl46/lCI4LmlDJlCe5YocLDKoXf7YevENXbz+AOfCQYY
      GUgwMvD1nz+pH2C/lUM/DVEUN/eJuMniOcdxNnmOw6aKvmDTAbmZ43csAIxanit3FhgZGcWr
      SoiSRKVYYCm9xkCyB1nRqFYqJBJxavll8mZgV+cEb7cn+MDgmHz26aeEYv2cauN/e+EPH3P+
      7bfafjCW5ue4v7zGG6+3l2zMZdJ8fnmSd9/9QZthYHPj2pecOfdKW0cb5RV++/ksb3/vPO42
      rPd3LABktx+XYDI9eQuzVcHbM0DII+FyuTD1GrdvTGKIIjMLy7xwrJf0UnrX5gR3e4I34NgE
      wz04Znul5v39g5v69bVyiROn299o0DQNt6ZhOyC1EQG5lQXqlkjLclDaOMGWA5zod5NKlxkb
      fPY93rEAsFotXC6NodM9VOo6tgHhsIdsOkO52mR0/Cj5YpVEb5JgUCERYdfmBHd7gjcgKoQD
      KqHEN6wBv4aDI5rkswUSsfY+IEKRKI1qDULt6RfTNBgaHmrr4QeIJoeJ9A62vcySFReG6Gd8
      oL33fyhE8JN4kgbY75ngLu1zaDeLs4XygXWL7tI+/w9sGPSaGpVFggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gender Map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Internet Access' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map, Rankings and Wiki' width='192'>
      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
      vdT8P0iJqPW1ljmjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of Possessions vs Percentile' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aXBUV5ao+52TJ+dUZio1o1lCICRGIebZGGyDC+zyVFVd7arbr+J2vPuj
      3o3X99f7/X68jqjovh23u6uqu7puV3cNxvOAbbCZZxCYUUIjQvOcUs7TGd4PAYZCgAwIocP5
      IhTKTO1z9j6pvfaw1tprCZqmaRgYPIMIgiCI090IA4PpxBAAg2caQwAMnmmkP//A7/cTiUSm
      oy1TiqZpaJqGKE6dzGuahiAIU3Z/g8eP8KxsgoeGhohGoxQXF09ZHV1dXRQWFk7Z/Q0eL8/U
      JjgQCDA0NHTfMqlogKbGqyRV0FIRTh49xJmLDSRkme7mek6eqUcGwsN99AyHnkzDDaaUu5ZA
      esXj8TxgeaJy+cxhjl8c4cflc2j5ah9qYTXKwGVOJ0KMjYYoscc4ey2XaMMZKlY8N36VqvKM
      TKK6RLczgKqqHDhwgF27dtHT00N3dzcdHR33LO/vaqAr7mNhcS6qkqQ7YWXlgnKWLqyit2cE
      DRMWi8Rg22WiVi8j/T1E4vITfCKDqUC3AjAwMEBdXR25ubn84z/+IwcOHKCmpmbiwlqKPbtP
      kV+YQSDkZ9gfRLSICIBoErF6cqjOddIRtGNKxmCkn2BfJxebriOKIiaTCZPJ9ESfz+DxoFsB
      GBoaori4mMrKSiRJ4q233sJqtU5cWJOpXraQVHCEkcAYQ6MhXKER2vxxrre1k57pYfbCpRQ6
      ImRXLcdscVBcnEcilXqyD2Xw2NGtFqirq4s//vGPAMiyjCRJrF27ljVr1tznKpXrDY1kzZ2H
      NTbMh598hSUjj80b1+MQEpy70kptzULar5ziwrUA6zdsIMtrv6NOQws0cxAEQdCtANzU+9+O
      IAjfSU+vqgogIooC3LyXMP5au3G/2zEEYGahazVof38/yWSSoaEhRFFEFMXvbKQSRdN454fx
      ji98+9oweOkD3apBDx06RHp6Ok1NTbz66qvAuCrU4/FMc8sMniZ0OwO89NJLdHd309zczN69
      e9m7dy9tbW3T3SyDpwzd7gFg3BbQ3t5OS0sLXq+X2tpaJGnqJj1jDzCz0PUeACAajfLxxx/j
      dDrp6upiz549090kg6cMXQtAJBLB6XRSXV1NdXU1fr9/uptk8JSh200wQFZWFgUFBfz7v/87
      VquVHTt2THeTDJ4ydL0HeNIYe4CZhe73APF4nKamJsNb0+Ce6FoARFHk4MGDdHd3T3dTDJ5S
      dL0HkGWZQCDAr3/9a9xuN2vXrmX16tV3ldPkOG1t10koCpl5RWR7nYz299A5HKC4tAKnKUln
      Rx/peYVkeKwM9g2Rnp2N2WRYg2c6ut4DaJpGb28vg4ODZGZmYrfbyczMvKucEhnk5MUOnOYk
      De3DvLh1JV99coTKqmxaBpPM9mkMhMzENBPPL8jk8JUIL2yuxWIyfIFmMrrfA0SjUd577z2+
      /vprurq62L9//4TlTM5sahZUYBM1zGYHieEOsuauZPGyDeSYo/T0BymqqAAlQd3FVspL3ERi
      CTS+dbrT8Tiia3QtAKFQiPT0dBYvXkwoFCKZTN6zbFfrZS43XcdssyEIKmaHFQGwWK2Uzqmi
      8cxx3HKUcCRF67U+DuzeRziloigKqVSKVCplCMEMRNcCkJOTQ15eHidOnKC+vp4XXnhhglIa
      oVE/hVWreP3N17CPdTCquelrbUZNhhgYHGNW2Vy2vbiBMc1BebqLucuWkp2mEE1pSJKExWLB
      YrEYHqIzEF1vgmHcA7SoqIiMjAwcDseEZVLhQb746ms0VSGzsJrZxeX4267xp3c/oqJ2I16b
      iYHuXuYuWsJsd5TP9n1BVuECMu26Hj+eCXS9CR4ZGeG3v/0t27Zto6Ojg0Qiccs1+s/RVBVV
      0xBF07jbv6aSklUkyTQ+smvarfMAqqpOeLjG2ATPLHS9Cfb7/XR1dSFJEpIkkZWVRSKRuGd5
      4cbh9lt9WhAxm6VvO/ltnf1hDtcYPJ3odgnU399PfX09WVlZ1NXVIQjCvaNCGDyz6HYGqKqq
      4s0338Tj8ZBIJIjH48Tj8elulsFThm5nABhfBrW2tvLqq68iCIJxHNLgLp64AKiKjKKJmKWp
      n3w8Hg/xeJxLly4hiiJz587F6/VOeb0GM4cH9EKVCwf2cq6xCwAtOcbHH+2hfzT6nSpR5RTD
      Nw6jRHpbuNI5+FCN/a6MjY2haRo5OTlkZ2ffUw1q8OzygBlAxT/QT+uomSWVhQw1NtA7Mko0
      HGMo2Mmxsw1ULlvHnBwzvQGZUE876cVVBK+fp747yvrNG8h0mum4cpoPj1xk4fwaFuSbaWq9
      Tk+DTMXiVZSmw+EjJxAcuaxaWUPK30Vzexfd/gSbNm8k3W5+6IdLS0sjkUgwPDyMIAj4fL6H
      vpeBPnnADKBhd2Yw2xyiI5jiUtcolWUFxP097DtzhfVbnuPk17sZ9g/w3u9/T3fMihRr53y3
      wPMrCtj/9UlSmkBWfglFRcUsWzofm1lAkCVqF82juekqalJhzuI1+BjhQnMHQ83fMEwWNdky
      9T2BR3o4i8XCzp07ycjIwOfzYbPZHul+BvrjgXsAFYHSxeW0nrtMIm4mL8NMeDSIN6uIjDQP
      8/OzCCVTFC1cz+aVCxjrOE5fXzsHTjuwO3womoDF5sTtceP1pDE2JJJXMRevy4rVMsRwbzv7
      L3XiSgZwOUrItTgorijH1T+M+IjuxrIs09TURDgcvuUHVFBQ8Ej3NNAXD5gBxq2dTl8xgw17
      8VYuwiJquDK8xAa7aWpr4dpwBK/VhNVixyQKWF1Z+HzpzJlTSWFuHiIgiAKRwAitbV3IqoqA
      duPuGp3t3cxbsJCCrEzG4zGPfy4g8KimJovFwoYNG3jxxRdZuXIl169ff8Q7GuiNB8wAJiqX
      LcXlcLLhe2/gm5VNKmTGZHWQlW6jrXOA5Rs2k+6zsaxKBcCZMZuNi2X6xmLk5JciiSDY01i2
      cB69/hB5FaVUCTbMdhOLqypxmcqpb2rHWjSP2YUFOGUvqsuM1TKPuaa0R3o4WZZpaGggFosR
      DAbvawk2eDbRrS+QpmmkUimuXLlCMpnEZDIxZ86ciW0BmoaiyCRTKmaLGZMooCkykYSMw25D
      FDRSSRnJbEYUQVHUCd0hDF+gmYUgCIJuDWF9fX188MEHKIoCgKIoxGIx1q9ff1dZOdLHrk8O
      YbWIJE1evvfiKr7c9SEml4CQUUmVL8Hp8514iuawfXkBn+ytZ/vO57GbDX+gmc53t0bdGFnV
      2+aNZDKJemsi0UjGE7e9fxAqiXiSxz0NZWdn8/bbb/Pmm29SVFREJBLB5XJNWNbkyOa1N95k
      +wsbMMfijPa1kla6lu+/9pe4Yz20dQyz+oUX0JIhzpw8z/zaeaCpj7nFBtPBA2eAplN7OdU2
      ik0S2LD9+/SdO0BDzyCunDJe2rSKxhN7qO8axeYr5cXnVmKXVE4cOsmKLeuxT0aLkxrm0KE+
      try46JE3vbejKArffPMNDQ0NVFVV8fOf//yerhCCKBEebGTv4cssWLkWh9CBw+dBEE243Gmk
      mV2c/novHq+HYTlF/zcXablynS0vrUXSFFR1XBh0uprUNfefATSFwYEQa7a8xM5Xv08mAzT1
      Wvj+62+SI/fS1DtMU1eMV998i1yTn+u9YwAo0WH27f2MDz/bz0g4zkB7Pe/veocvD58lIcu0
      XT7Fu7ve5XBdA4qmkIzLJCMj1NVdpudaPR/seof9Jy8jKw/fobq7u/nd735HKBSisbGRP/3p
      T5w7d27Csmp0gM8On2fNlq0sKMvFZLEzNjiApqQYGxmlpGop33/lRQTMFKS5WLxpExkmP2Nx
      1TgRNsO5/wygyahmMxeP7eNkALa9VImjsBC7xUphcR6t/b1IzllYRInM7FyS8XEti4rIouWb
      SFw/x6XGK4y09rB+2w5a93/E1Q4XDfUBXtr2Aue++ITO8k2oaoKjXx3EO28FHeePMnvlZjIk
      jUfpT4WFhfzt3/7tHaPyvZZAwd5WRkYinD64l0tpHtasXU2q9yPefacOZ9ESMtKs9F1tJa24
      kjJvkE+/+AS3u5ClNt060z4z3F8ARCsbtu0ENLpOfsDRxjHkqA0VCA2PYM0sQE50o2oa8VgI
      7DczJbrITHeRDGXQ2RvE7Msh2+2A0jwagyHScgtId3soL0onENPobDmN5Cvix6Wz0HyrOXD0
      IBdVD2/s3Ird8nDZFy0WCzk5OZMq6529hv/x8ztzh73+478glpCx2SwIAhRWrqBQHO/wf1k4
      H8E4FKML7isAamKMgwdOIDqcdLcEWPP9F2nc+xl79wwwEpTZsbyA4OXDHDq8j/7eCC++mg6A
      oAY4fvwYgd4u5q1cT2/9MfYcTjHc2cHG7S9z5sAe9h0eoKc7xM5FZroq11FdIfPFgQPM9jnw
      5eQT7hwkpajYeTgB6Ozs5Nq1a3fMAKWlpZSUlEzuBqIJu/22ukXxtj8ZKVH1wv3tAJpKODDK
      aCCM2ekhJ8NDIhKkf8hPWkY2GW4HiWiQvv7x9z6PE0HTiIQCjAVCSHYnmb50lESYvoEhrK4M
      sjPcJMKjDIwEcXozyfLYCIVlXE6JQDCEiMZYIITdnU6GNw3xIUfZzs7OuzLCfCcBeAgMO8DM
      QtdZImH88HpdXR2tra2Iosj8+fNZsGDBlNVnCMDMQteH4gFGR0c5cOAAfX19+Hw+rl27Nt1N
      MnjK0K0lGMajN2RlZeHz+QiFQoyOjk53kwyeMnQtAB6Ph+9973vYbDbOnDkzYWRog2cbXS+B
      gsEgR48exePxsHDhQg4cODDdTTJ4ytDtDKBpGv/6r/9KY2MjHR0dxONx1qxZ8+ALDWY0iqrS
      PhzBYzeTlfbgE4C61QJpmsbg4CCNjY0UFxdjs9nIycmZUuOVoQWaPlRVoz8Y59dHWnj/mw5e
      qJrF37259L7X6NodWhAEMjMzaWlpoa6ujlQqxY4dO6iurp7uphk8RjRNI5yQ+c9T7fzycAs9
      Y1GWFvl4o7ZoUtfrVgBg/EyA1Wrlb/7mbxgZGeHjjz82BEBHRBIy753r5H8daOL6SJi5uW7+
      7e0VvLywALNpcttbXQtAVlYWgUCA3/3ud4TDYZYuvfeUGA+N0DUYprSsGBMq/e3NtPSNMKd6
      CV4pwdWGVnLKKpmV6aTzWie5RUVYnkBwL4O7iaUUvm7o43/ua6ShL0BxhpP/d+ci3lpWTLrj
      u3nl6lYAAoEA0WiUn/zkJwwMDGCz2cjLy5u4sBLm4MEj+EdU8kqKEYN9HDzRzMrlRRw5fJBi
      n0hCyqL97Dk2zPXQ0C0xq8RwhHvSxFMKp9uH+edDLRxrHcTntPDzzXP50bISijKcD+U2o1sB
      6OjouJUV5mZArGQyid1uv7uw6GDL9u0c370fDYiNdpMzdymlc/Lp6exiaCROdpkT/COca+gk
      a1YRA8NBZmV7wMgPNqVoGsiqSkNfgF8dbmFPfS+CIPDG0iL+en0Fc3LcmMSHH4x0KwAAx44d
      o7Oz89b7tWvXTqwKFUQkE2h8e6zTZB3/akSTifJ5i+hqbcKryERSCiPhFN2HjrDxle24TJpx
      ImyKUDWNwWCc/7m/kV1nO4ilFJ6vzOXnz81lWUnGY9Ho6VoAXnjhBXbs2DH5C5TxEcfiyqCn
      rgFtrpW+wSDVq8soznGy+0gDC9JlhHmVDIz1Epc1PBYTphvu0cb5gMfHUCjO/z5xjV8faWE0
      mmTT3Bz+++ZK1pRnIT7CiP/n6NYOkEwmkWV5UgFxo4PX2XP0LPF4Epcvk3UbNtB+7igNHf0s
      XruV6uJsBq5dIuQooTQtxu49R8iZvZQVi0rvWHcadoBHxx9J8O7ZDn59tJXesSgL8r3831vm
      sXFODnaz6bEOMrp2h+7v78fr9RIIBCZ9MuwONA1ZVTHdPPl1W46wm1+ZERfo8RGMp/i6oY//
      daCJpoEg5Vlp/JfVZexcXEimyzolderaEHbkyBG8Xi9NTU23lkEej2fy+QEEAen2k1+3dXZj
      qfP4iCZlTl4b5peHmznWOkROmo3/sWUeb9YWU5DumPLvWrczwPDwMB9++CH19fW3DsHU1NRM
      aZ4wYwa4P5qmoWqQUlSSssqFLj//+8Q1vmroQzIJvFVbwv+5oYKSDOcTGWR0vQSC8dhAHR0d
      dHV1kZ6ezoIFCwxfoGkgmpRp6g9ypXeMK70BGnoDXOkdIxBLYZVEdiwq4P/aXElV3pNNYaXr
      JRBALBbj3XffZenSpVy4cIGuri62b98+3c3SLZqmMRxO0DYUpnUoxJWeMS50jXK1P0AipSKr
      KlbJREmGk/UV2VTledhalceCfC/SJF0XHje6FoBIJILX62XVqlX09PRw6tSp6W6SbkgpKoPB
      OL2BGNeGw1zqHuV85yjdo1FCiRSRhIzLKjHL62BNeRbzZ3lZVJjO3Bw3HrsZt82MRZr+0DK6
      FoDMzEzy8vL453/+Z2w2Gzt37pzuJs04NE0jIauMRpMMhxO0DAa50DXKpe4x+gIxBkNxIgkZ
      t92Mz2GhIieNxYXpLMxPpyTDSY7bRqbLOm0j/IPQ9R7gJqqqIgjCpEcbTdNIxiKMReJ4velI
      gko4FMHmdGG1mIhF41httrsMMk/7HkDTNBR1/EdWb75WkdVxl+KhcILhcJzhcIKRcIKhG7+D
      8RQdIxE6/RGSsorNbMJplZib42ZxYTrVs7yUZTopznCR4Zw5ISJ1vwe4STAYJBaLkZubO6l/
      Tioe4MN3PsGbbSNsyacqM8WlxmFs2QW8vCyf3ftb+d6Ojdge0iIpKypX+4MkUgqiKCCJAiZR
      QBTGf5tEAdNtr8U/e28Sbnx222vxNhtFOCHf2Ykj469HIglGo0lGI8nx39EkYzd+J+SJo10L
      AqQ7LFTledhcmUv1LA+VuW7m5niwmU2PFL7yaUC3M0AsFsNisdDc3MzBgwdxuVz4fD5efvnl
      B147cq2Os72ZbF1TwqE9HxGJa8xdsZ4rFy+STpT86iXMysnDab1z/JjsDPDxhS7+2x/OkFDU
      7xgRW5jg1Tg3hUBR1Ruh6294Nmnc8nASBXDbzHgdFrwOCx67Ga/dgtdhJt1hJSvNSqbr9h8b
      PocFyTSesOpmZ58pI/yD0PUMEIlE+Pzzz/F6vTgcDsxmM06nc5JXK9jc47pom9OJO8tH3b49
      eD0eAqkUI99coV5rYeuOTTgeIpHfuops/r/vLyEYT91akii3LU9U7dslijrB329/r954rWrj
      rwUBPHbLHZ0402Uly2XF67BglUQkk4jZJCCJItKN36IgzPjR/GHQrQBkZmaycuVK6uvrSU9P
      p7S0lKqqqklda7I68Td3o1W7GR0eY9nWTcyrKGbfoW8o8lhJW7qWgdP7CMZVHM7vHic0w2nl
      7VVl3/m6e6Fp46P9zblcFPQzSk81T+fW/DHQ39/P559/Tnd3N6Io0tXVRUtLy6SudWWWIQWa
      2PXOn5Dy55PutODvayezvJryeYWc2vMpo2IOPvvT8fUJwp37B6PzTx7d7gGuXr3KsWPH8Hg8
      2O12tm3bRjgcvmeWmLvQFOJJBavFfJcznKooE4ZHf9q1QAZ3ous9wLx583C5XESjUcrKyjCZ
      TJPv/ACCCZt1Ymc4Izy6frhrBvD7/UQikelqz5RxM09wVlbWlNURCoVIS3u03MYGT46ioiJ9
      O8PdTigUIpVK3TofPBkURQFBHM8brI3rEwXxpr6du7QmxhJoZqH78Oi3c/36dS5cuHDfMsGB
      a+z+dDcRRSM60sl7u3bx0ed7GA4GqDu0l3ff/5KxpEJ3w3mudgw9oZYbTCW63QMAyLKMqqqY
      zWbKy8vJzMy8Z1lNTVB34gwjIyIJJcWpL0+xbsdrJNtOcuLkGUwOH88vjnP2ag/xtk7WvFCF
      poGiyMah+BmMbgVAlmX+4R/+gWg0yqZNm+js7CQ7O/uesYFavzmOUFxDhakNVIWkz8esNAty
      STFne9oReq5x4FoCU0YEk83Coa/2sXzdBvIzv808aagfZx66XQK1t7eTk5PDX//1X/Pee+/h
      crnYtGnTxIXVCIcO1RMZbONSayPnr1xDjcWQgXg4jCUtg5dffpHV62uxWVw4YjI18wpp7uic
      +H4GMwbdCkAsFqOjo4MTJ06QSCTQNO2upHm3EGy88Vd/warapZQVFlI+u4i56RJ7jpzl+Pl6
      iopysNhsNF5pYsHKZSAmaO3sx2GdIMiWwYxCt1qgYDDIpUuX7liXFxcXU1R0v6jBGoERPw5f
      BpISp/5KA6LTR0VZESZNZmB4jLzcbMaGeuj1xyktKcZ+m0OcoQWaWej6TPDtj/Wk1uaGAMws
      dK0GPXXqFKOjo9TV1U13UwyeYnSrBYpGo/zTP/0Tg4OD1NfXA7BkyRIWL148zS0zeJrQrQCs
      X7+egoICzp8/z/LlywFIT0+f5lYZPG3odglkNpupqKggJyeHL7/8kqNHjyLL8nQ3y+ApQ7cC
      AOOOfVeuXOHVV1+lurqavXv3TneTDJ4ydC0AZrOZSCSC3+9nYGAAi8Uy3U0yeMrQrRoUxlWh
      XV1dnDhxgqysLNavX4/ZbJ6y+gw16MxC13aA6cAQgJmFru0AMB4Z4rPPPjM2vwb3RNcCYLFY
      6Onp4dixY/T29hIKhe5ZVruR7E779gMUVb0VaeH2iVLTvo3AYDCz0bUAyLKMy+WioaGBTz/9
      lObm5gnLqfFRPvvwA3bt2sW5xg40Vab+zGH+9O47NPX6CQ518dn7H3Hl2iCaluLi6bPE7hFJ
      zWBmoVtDGIDdbqeyspIrV66wcuXKexcUJNZtfRm3Jc67731BdlotF68L/PDVbXz4yR56vXbm
      rFhJ/ZWLuMYkwq452M26HjueGXT9XxwaGuL8+fN4PB4ikcg9/YJEaxr+6xd55z934cibiyPh
      Z9bcSkSrl4KcdJJJjcZLl1HlFFe6x4h0XOKb+k5Uxs8Ny7KMLMvGibAZiK4FwGKxkEwm6evr
      4+TJk/c9EJ+VX8qK1SuQhzoJpECWkwAk4zHmLllDVdksMpCxI5E9dz5jrefxx5TxoFSiiDhB
      nCCDpx9dC4DH42HLli243W4qKip47rnnJiilMdTRRn8gjsPtQSKByZ1P/9Xz9F6vZyBqIis7
      g6x0GyF7FqVZTqLJOLJmGg9Ie6Pzi6Kuv0rdous9gCzLHD9+nMHBQfr6+qiqqppQT+/yuGi6
      3EhXSqFy5UaKc7MQlo9S39LHmg2bcJlFxgQzK5fXkO1IMnj6AmU1K/BZjU4/09G1Iay/v5/d
      u3fzV3/1V3R1dXHo0CF+8pOfTFl9hiFsZqHr0IiXLl3i1KlTXLlyhd/85jckEglyc3Onu1kG
      Txm6nQGCwSBjY2O3tDQwHjJ9Ks8EGDPAzELXM4Db7UYURX75y18iyzKCILBu3TrWrFkz3U0z
      eIrQrQAAxONx3G43b7/9NoIgIEm6flyDh2ASPUJDTqUQTGZMogCaSjyZwmy2cjPzpaZq8ICs
      JJqmEY8nsNmsCIKApqkkEgksNvuU6WIdDgdNTU38/d//PaIoGjOAwV3cXwDUBMe/+prro2Hi
      oQib3vgBnYc/pysSB7uP13du4/q5g3x9tIEdP36bkpxv4+8f2/s+7UNJbO501qxeSf3hTxlR
      zShSLq++tJJT+z6jN6Chih5+9NaLSA+ZcfF+RCIRqqqq+OlPfwpg6OoN7uL+AiCYWbz2OVbY
      zJzf8wcGetsY0or5wQ9quXpsN429EYrKqlkaNiH+2VZ6NBxn5drnmJWbiRLuJ2Iv5q1t6zm6
      5ws6m5uIOIr54bZlnPjkYwbiCvmOx788cTgc9PX18atf/QpRFFm2bBnLli177PUYzFweIAAi
      Fknh1L69jEhlPJ8tMTSagdlkIiPbR0c4SUZhLnapFQGIhUe43jVEZm4hRbl5dDSd55szEaqr
      52C3pyMg4nJ5UFMKLk8aJlHEbTExGpWnRACsVitvvPEGqVQKgOzs7Mdeh8HThapqdIzGcFpM
      ZKdZH1j+/r1Okzl3eD8BVwXbV1cjRDqID/eSUkoZ6h3EVVlzR3EllSISjeJJKcytWctCm4Wr
      dQfpG4gRjUTQUAmGxnB63YwNBFFUlbFEitnOqdmcplIpTp8+TTgcJhwOs2jRIl588cUpqctg
      etEYT0B+oGmYTy/3s6zYy09X3i8M5jj37XlqIsDF1g5cmUk+eK+eJetfJEM5xZ/+0AKODF7P
      lji0+z3qW7uxt/eycesWapfWADKfv7OLkCgRDibZsmM7TYc+5d333iEh5LC8ooKe9o/5/Z86
      0DQXa6xTk3PLZrPx9ttvAzA4OMiePXumpB6D6UXTNOIplffO93KgeZiidDub5tw7F8TtfHdD
      mKYSjyeRrNYHbFw1UskUJrMZ8YbWJx5LYLPbxrVA6g0tkH3qtEDRaJTf/e53hEIhkskkNTU1
      bNu2bYpqMwxh00XPWIx/P9VFy1CElSXp/Hh5AS7rg1cVuj4Un0qlCAQCRKNRVFVFEAR8Pt/E
      Sew0mWuN9fT6I+SVVFA2K4O+9mZaeoeZO78GrxSnob6NnPJK8jOddLZ1kFtcjEW6U3QNAXiy
      aJrG+e4A75zrJRBL8VJVNtuqczCbJpcrWdeW4OHhYT766CMURSGVStHW1sbWrVvZuXPnXWXl
      0ADtfpnSXB8Xjh3HubmWQyeaWbW8iCOHD1DsM5GQsrh+9hwb5nho6JGYVWr4/k8nSVllf/MQ
      X1wZxCqJ/GRFIctL0r+zOv3+qw9NZrB/GGWSN0vEwoyOhb9TA6aKvLw8fvazn7F161bS0tJY
      s2bNPY9FSu58nlu1CEmJkRIdqIEecuYupWTOYvKcGkMjUWxOJygJzl3tJMsl0z8cRGN8FFJV
      9VaeMIOpRdM0QgmZXd/08MH5PjJdFv7r2mJWlX73zg8PNIRFOH38Ms/vWIMkmJBMIpqqICsq
      JpOEKAqoqoKiqEiSGX//ddoHHaxe7kRRVQS0W2VNpidrhBobG+O3v/0tbrebzeLY4P8AABPP
      SURBVJs3k5+fj+leCa41jfqz+/mmU2PbixsRhi5gsox/NaLJRHnVIrpam/AqMpGUgj8i033o
      CGmvbMdl0owkeU8ITdMYDCf5z9Nd1PeFWFLo4S+WFZDhfPiIfw9YAolERpv56ONhgsEUP/rL
      1zjx6fsMxRTMrnx2bl/BZ398h5RJwlOwkMUlNkyiRteVE1yNZGDpO09PRCW7bAlbVlc9dCMf
      hmAwSDQaRZZl3n//fQDWrl3L6tWr7yqbGGnkRIeJv9y5CasJwq4Meuoa0Cqt9A0GqV5dRnG2
      k8+PNDA/XUaYN5eBsR7isobHYrolWMaRyKlDA670hfiP0134IyleXpDLzoU5SI9o3b//JlgJ
      8vkn53h+5wYGTu+m21tEX5fIK89XcWnfxwgF+XQO5/Dy2gKOffkp7tJyGupaSJmd/PCtLRx8
      /x1Ms+ZQPX8+eT7XPauZCjRNG090fRv3OroY7mtk9+GLmEwitjQP6zZs5NrZIzR09LN43Vaq
      i7IZuHaJkKOE0rQYu/ccIadiKSsWliLe1umNTfDUIKsq+xqH+exyPxaTyFtLZ7GsOB1RFHiU
      IWeSm2ARRAhGE1gzJBQthoZGQtVwmiRkLQ6aRlIDQRCxu+ykYnGiKY2lz21lpL+dfftO8KM3
      tzI12v6J+S7en668Sn7wg8o7PqtZu5mFq1VMooggQG7ZAnIFAXCz87XXb9VhMHVoQCQh88GF
      Po63jVCQbucHS/OZneW8Y+B5FB7QQ0yQ7OOjXe+C1csrZbMJXPuM9z9oxerJ56XSebTXf8R7
      H57HWzCfHI8Lcd4Ssh3DHK2rwxEcxB9N4cupeCRJfRguXrzI6dOn7/hs6dKlLF26dHI3EASk
      2/cMt33hRsefejRNoz+Y4J1zPVzuDVJT6OWNJbPIdlsfa196sB3gxlJClKTxijWVZEpGMlsQ
      BUBVSMgqFrOZP+8XmqYiyyqSJN31t6kmFAoRDAZvnQjTNA2fz2ecCJsBqJpG00CY35/pZiCU
      YEtlFjsW5mI3P941xOSWQIKA6falhCDeGWdfNGG1TNwwQRAxT1MEtbS0NOx2O//2b/9GW1sb
      drud9evXs3nz5mlpj8HkUDWNQy3DfHC+D4CfrixkTXnGlK0gdGsIg/HIcJIksXjxYlasWMH5
      8+enu0kG9yGWUth1rodjbX7yvTbeXl5IWaZjSpfPuhYAr9eLz+fD5/Px2WefPSBJtsF0oWka
      A6EEf6jrpqEvzJJCD2/UzCLbZZny/ZauBUCSJJYsWcKsWbMoLCw0DFVPIYqq0TQY5k9nexgI
      xnmhKott1TmTcmZ7HOj2jKCmaXR3d7Nnz55b5wH2798/3c0yuI2UonK8zc+vj17HH0nyw9oC
      Xls864l1ftD5DPDhhx/S2NhIIpFAkiS2b98+3U0y4IZLQyjJJ5f6ONMxRobTwn9ZVUhlzgSe
      ulOMbt2hb1qCW1tb6e3txePxsHjx4nv7Az0GDDXo/UnKKlcHQhxt9fNN1xgASwo8/GhZAT6H
      +YnbV3TtDi0IAvF4nN27d7NkyRKampoYHBzkpZdemu6mPXP4I0kudAc41uaneyyO2SRQW+Rl
      Q0UG5ZlOrGbTEzeU3kS3AgDjYVHS0tKora2lv7+fU6dOTf5iTUNWVUyiCUEYj30k3HC3vTln
      GgbheyMrKn3BBGc6RjlzfYyRSBKf08zGORmsKvVR4LUhmcRp6/g30a0AaJpGRkYGOTk5/Mu/
      /AtWq5UdO3bco7BCz7UGrrQH2PDcWixaknNHDtA8MExV7SYK7VGOHL1A0aIV1FRkcvrERRat
      WoHDSJN0BxoQTyl0jEQ50jZCfW+IaEohz23jrZp8FhW4yXoCqs3vgm4FoLu7m6GhIV555ZUH
      F1bjdA5ESA75SWmQGLzGNX8aP/z+Gj7+9Av8LhvVa9dRf+kKnmAzYk41dunp+SdON5qmkVQ0
      znaOcbR1hJahCAIwN8fFxopMFuW77zo++rSgWwEYHR3l0KFDRKPRW58VFRVNbAwzOVm1uoZD
      Q/sAkGNj5FbMQbSkMSvHRzAU5dyx45jtVq72p1A7T3A8tJDVtRVoivLMHojRgMFgnJPtoxxp
      HcEfTeG2SWyqyGD97EwK0+1P/TJRtwIA41EhRkdHb72fbGAsQRBJxqLjU3o4SGXt81iSozR8
      cxmTaCF77UqGzh1jKFpGtv3bMwZP09Q+lciKStNghGNtI1zuDRJLqRR4bWydl82KEi9u2404
      sjMA3QqA0+lk48aNrF279oFlU9EA7V1d9A8O097eTpGviIHDx7hq62Ew5WK5z02kt5to2iwW
      uiM0dV4nmTJjkyYXfUAPaJpGIC7T2B/iSOsI7SNRBEFgdqaTteU+5ua4cNvu9gh+2tGtHeDm
      smQyAXFTYT9N13tQVQ3Jaqe0rIxg33Wu9/spq5xPlttOeKSflC0DrzVFQ0ML7pxiCnO8d9xH
      b3YAjfFQg5GkzPE2P6euj9IzFsdpMbG4wMPqsnRKMpxYn9L1/YPQdVyguro6ysvLuXbtGrW1
      tU+kTj0IgKZpyKpGJKnQNBCmvi/EteEIA8EEXoeZNeU+Vpakk5NmnfGzn64NYcPDw3z11VcM
      DQ1x9epVABYtWsTChQunuWVPJ0lZpWUoQuNAiMb+MNdHoqRUDVGAYp+Dn6wspLbIi+0xH0qZ
      bnQrAFu3bqW0tJSzZ8/eComemTm5eJHPAklZpScQp304QkN/iKbBCLGkgqZpZKdZqS32Upmb
      RnWeC7fVPOloazMN3QqAyWRizpw59Pf3c+TIERwOxzMdGVpWVEYiSXoCcRr6wzQNhBiNpogl
      Vdx2iQKvjXk5aczLSyPLZcFlGY8DpXd0KwAAfr+fy5cvs2PHDvr7+9m7dy8/+tGPprtZTwRF
      1QgnZEYiSRoHwlztD9MfjOOPprBJIukOM0uLvFTnplHgtZPpsuh2lL8fuhYASZKQZZlkMkkk
      EsFsNk93kx47mqahMd7hZVUjmlRoGRxf1lwfidIbiANgN5soyXDw/NwsyjIdFKbbsUqmGae2
      fNzoVgt0k+bmZk6ePInP5+P555/HbrdPWV1PQgukaRpxWWUolGQwlGAwnGA4nGQ4nGAonGQg
      lEDVQBSgwGtn/qw05ma7KM9yPtGDJjMBXatBb+fmI052etc0hc7Gy9R3DbJg6WoyzDHOn2sg
      f94iSnLTaL3aSkFFBbYpCo+uqBqBWAp/NIU/msQfSTJwo8P3BxMEYilUTUPTxnX1FtP4ksbn
      NJPptDAn20VVXhpeu5mbBtlnbWkzGXStBr1JNBrlzJkzRCIRli9fTlZW1gOvifi7Of5NH5s3
      zubwkX3kp5uR0ks4d/4b7GVO2gNeSh/R1B9LKYTiMqG4TDAuMxROMBBM0B8aH9HjskJK1kgq
      Kqqm4bRIpNkkMl0WZmc5yEmzkuO2kZNmxWuXsEgiFpOI2SQ+csjAZwndCoDf7ycSiTA0NMTg
      4CDZ2dkcOnSIN95444HXJgL95FYuIjt/FrM8zQQCCVz2BChJzreE8GSoXO8doawg86E6WutQ
      hHfO9RCIpYgmFWIpBUkUsJlN2M0mHBYThel2ct1WctxWspwWXFYJu2X8bzZJNEb0x4RuBcBq
      tVJXV0cqlbp1KH6iyNAToyGYhFuvy+cvZairjXQ1QVzRSEpOGk+dxPe97aRbv7uqUNPGDUxF
      Pvv4SJ5mxee04LZJuG1m0qzPhgryaUC3AuBwOCgtLaWtrY2cnBxKSkqYO3fupK61pGXRfboe
      tdJK71CEBWsKKfBJfHGsifmeFFpJMWrfNVLqw22fKrJd/D8vzHmoaw0eL7odZurr6zl58uQt
      NWgsFuPcuXOTutaVUUJNuYU/vv8lS9a/gMcqEhkbZdmqlcxds5y2I1+TVlFLtl1fbgHPIrrV
      Ag0NDfH+++8jiiK1tbXU1NSgKMqkQ6ajaaiahiDcMA5p2q1DwPfSKunBGe5ZYkI1aDwev5VZ
      faYTiUSQZZm0tLRJuUU/Kjc32wYzA7fbfbcaVFVVZFmejvY8dqxWK1arFVVV6e/vJxqNUlJS
      MmX1aZqmm+/uWeEuAXA4HDgcjuloy5RiNptJpVL3zQ+gaSrKjaR+oBGPRtAkK3aLhKooyIqG
      xWoGVUXRuEtTEw6HpzT/gMHjR7daoD+ns7OTkZER1q1bd88yXVdP8N4XF/k//vt/I9JwnC8u
      9GAmwor1G2muO00omGTlq28SungQobCGxbNzn+ATGEwFuhaAnp4e/H4/c+bMISsri1gsds+y
      qXA/5+pHqC4pRlESnK4f4cc/eoNE92X2nr9KWm4F22vinGy4ihq3UZtuQ9FAU+RnNiqEHtCt
      AASDQX7zm99QUFDAyZMniUQi9wmLqHJ03zHyF9QQvnKJRCKJ6HFgMwlInjTMTh+OUDefH0+S
      5ktDi4U5dfAQ5YtXsGB23q27GNbZmYdu7QBdXV3MmzeP1157jZaWFjZs2EBFRcXEhdUo/kCc
      vpbL1F9r5kL9NcRgkLGkgn9gCIfbw/oXtvPcylKcmcU4TQ6WL5nD0NjoxPczmDHodgbQNI3D
      hw/T0NBAX18fu3fvJhwOs379+rsLiy5e/8mPAYWzNhflyxchp8vs+v072C0q6198BU1OcLah
      j83fe5nze+v56vhFlq977ok/l8HjRbeGMFVVJ0yU/V3Co8vJOKpoxiKZ7oyIq6koKphMU+MO
      bfBk0LU7tKqqmEwmVFWdvPX3z5Astm/f3L6+F0SmMM2AwRNEt3uAjz/+mMbGRj766CMSiQSJ
      RMIwUhnchW5ngKqqKt555x26urpobW0FYN26dZMKlWjw7KDbPQCMnwZrbGykuLgYSZJwuVxG
      iiSDW+h6DwBgsVg4e/YsBw4cIJVK8fLLL7NgwYLpbpbBU4SuBWBgYAC73c7PfvYzRkZG+PTT
      Tw0BMLgDXQtAZmYmwWCQ//iP/yAcDj+xILkGMwdd7wFg3EOzv78fm83GrFmzpvRcgLEHmFno
      fg+gqiqiKFJeXm746RhMiG7tADCuBfrtb39LPB6f7qYYPKXoegaQJIlwOMwvfvELysvLWbBg
      wT03wZqqoqgqJkkaj/WjqsRlBat5PO2PqqiIN1wfjDzB+kH3AvD6668TDoeRJOme53WVcB/v
      fXoYQUgh+UrYtmEJ+z/+lDAJvMU1zPHGOX66hayKBTy/ZBZ79l3iuZc2GXmCdYCu/4OaplFX
      V8cXX3xBLBbj8uXLE5YT7ZnsePUVtj63FnlsmOG+VlTfQt564y9gqIXm1h5WbNlCNDjEhdN1
      FM+vRBJ0rTt4ZtD1DDA8PEwqlaK2thZFUejp6ZmwnGAy03Z+P0fPNFG0eAM2LY4ntwzBZMGb
      7ialSpz8+ivcXi89sSSpoTN0txWweXMtovrs5gnWA7qeAXw+H8FgkD179vDBBx8wb968CUpp
      qKpK9aoX+Nl/fRu1q57BhEhkbAxNUwmPjjF70WreePUl7IJIrsNJzdYX8Cq9jETH4wxZLBYs
      FouhaZqB6HoGsFqtvP3225w/f56CggLKy8snLNfb+A0nGntwSAphaxr5hZVcPP4Bu4fPkHCX
      k+m20d90HlPebMo8QfZ+/SU2k4fFRmS4GY+uDWHhcJi/+7u/Y/bs2fT397N8+fIJvEE1VEUh
      FouSkjVsDidWswk5ESMQieP2eLBIJpRUAk00YxIhGokgWexYLXeOH4YhbGaha0NYMpnE7/eT
      l5fHyy+/zPDwMCdOnJhAAAREk4TT5b7jU7PNQabt2/hIJrP11munK20qm27wBNGtAFy8eJFD
      hw4xPDzMr371K1RVpaamZrqbZfCUoeslkKZp+P1+otEoAG63G4/HM2X1GUugmYWul0Awrgb9
      xS9+wezZsxEEgZqaGmMWMLgDXQuA0+mkpKSE5557DkEQjLidBnfxQDuAqqTovNaGPzweMj0w
      1ENd3Rna+0bG/y4naGtsIhK/M6T62GAX587W0dDUTlJRCQx0curkaToHA2hAYKibM6dP09Hn
      Z6oWYbFYjPb2dg4fPszhw4fp6OiYmooMZiwPEACVxtNH+fLjj7nUHUJTwhz66iQmi8S5Y/sY
      iqY4e/hL9h85ydBY9LbrFC6fvYTFmUZfy0UuX2lj/8FjeDJcnDxwkOHhAQ4ePYnZ4eL41/uI
      KuqUPJwkSeTn57Nlyxa2bNlCWVnZlNRjMHN5wBJIYM6y9VjFIB2KhjLWg5JVyZJF8/HKw7T1
      hlm6YTsm62lM3MharmkIgsi6bduJBQdpb1RIU8OYM8qYN6eaUG8fQ51dOPLmsGTBPJSONgZj
      CqVpj98obbFYsNvtfPHFFwiCcCtTjIHBTR4oAJJZQrsxQGuaiuSwIgBmmwUlpWKWzAg3/j7S
      c5WvjlxmQe1GStwhPt1zhPnrt1HkCOIfHV/nmCQLmgYWiwkQMIsacVkBzI//4SSJ2tpakskk
      gJG9xeAuJjXsCqiomoqUlkm4tZFgLEJzUzezZt00Ho1LQEb+PH74wzeZX5HJ3t0H2fjKW8wv
      ycJm8xIY7EAhSU93H64MDz2dnUSTKdpHxsh2PP7OD+MnwgKBAKOjozQ3N3P69Okpqcfg6UDT
      NMIJha6xBIH45IKg3X8GUBOcOXKEtp4wsrCfC9aN1C7K5LMPPiRvzhIKXSqHdr9Hz1iC5t4R
      lm/YSFleOqDhTrNy7KvPESQHK1atYclsL+/84V0K5q2koKiUFYEBPnz3ffJnLyPdMjU+eSaT
      iZKSEmRZJj09nQsXLkxJPQbTQ0pRCSUUAnGF4UiKwXCKaEJBVjVKfDZWlbgfeI//H2tQxf0i
      55bkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentile vs Highest Parental Education Level' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Bd133n+bnx5Zw7B3QDDaCRSCQCYABJSaSSLduyZmyvx5atqR1b1njs
      qdnyuqbkranZqp2q2dqqHc9UebQOsj3asbxjS5ZEURQFiiCIQGQidkbn+HK84ewfr9FAE91g
      I9NSf//qfu/ee37v3PM7v/w7khBCsI51/BRCkiRJftJErGMdTxLrDLCOn2o8UgaoVCqUSqVH
      OcSakE6nnzQJwEeDjlwuh2maT5qMj8RcwCNmANu2sW37UQ6xJnwUXjh8NOiwLIuPgtn3UZgL
      WFeB1vFTjifPAEIs7korfWVjL35hW7f+BrBtC+shSRdh3z6OtWyc1a63bLHsf9O0HgotN2FZ
      FitRYVt2fQcXAsta/vsNw3jwgW97rm2vMhdCLEl28QE6hBAYD7K73+XZq8GyrNuuv/09CEzT
      XHEeb0K9f0ofDqaHrvLetWFCqVae2bF56fNaOctbR05gCotdu3dw+uRpJGeQPb0tVOQwamWM
      vJyiLeFFVZT7Hr+0MM2x0xeoGRK7n+7h5KnzaI4AL714AFm6dZ1dy/PNv/kHPv2FX+DY91+n
      KGwOHdhPrmQSc9gMpGtsamtEVVQkafXxVoMQgqun32aBRloCBd4fmCKabOfp7d1LzxN2lXfe
      PEKkbQtKYYLhmVmSndvwShVaWzu4cP4c27bvQFFV5PsgwjYrHH3rbWynh529Pbz91lGQPbz6
      6uGluRC2xbEjr1OxoKF7B/N9l8gZFXbufoZyIU9TPMylgRG2btqIqmr3NBdCCI4feY2yCbHO
      beSHr5KtVdix9zlSIe/SdemJYb715ml+9uc+y+zAGfrGF0i09GDOXmMmZ7Bt3wGqCxnaOhKc
      O93Ptl2bUFeZkycuAa7fmOeVV16hlpsH6txs2wLdFeC55/fjlAyGB26wbf/zNPodnH3vBO+e
      eI9CIc97p97lO6+9xYPIAXc4waEDe5AUwcLoMJv3v0TSaZExxC0pI2xOvHuKxlQz1dwYztQ2
      XtzZxo/ePs3Ro+8wvZDj8tkTvP7a98jX7o+awsIEc1UF2TCZmsvz4ksvUknPYCOW5iQ/8j4j
      BRmHrjKdM3j55U8wPXCRY0ff4WrfMDNjfRz5wXe5Mjp7XzTkZqeYz1Rwqi7K43207X6RDSGN
      mWrdlru5GxcKRUyzRjk7DYFWDu/p5czpcxw9epTRqQUGLp/lB9/9NrPle5eKxUIB06xRyc1i
      exo5vHc7w6Mz9d3drEtFf7yJja1BLMtkcr7Giy+9QHF6iLwI8erLe+k7d4l33zlK3/A4Yzf6
      ePMHr3N9ZGrF8Z64BJAkG8u2sS0TsLl67j2CzRtJBnVef/0tnjr4HOXxPgzTwrIsWjs20OLb
      gMcc4ek9B1nov4zN/XOyWc7yox++zdPPvoAxcYmSZWLZNrIEQ32XKIsA7QkH/TdmUcwC3rgT
      y4pgVGskG1twe3SSYScbd+zFXZrCsO/PwLx4/jQ5Q2Vudp621iC2sBGSAMvg/NkzxJp7CEgy
      7V0bGLh2CaeuYQsbzemje2OIrZs6KORm6G1NMlC5zy1Bkok3thD2GAxOzOL2mki2hSJLTIxc
      ZyYnsX1LG7biZdvmTvqHh8DZhGlIhOINJOJhWlMR0pt2kNIqVE0buBfpLKgJN7u29XD5Wh+K
      qxHLNJEkqOTTnL/Yz65n9qCr6i2V2Tbr6jEywqphWwaaJ0DHhh42djSTnSrQ0xVjIldbccQn
      LgE2dzTw2ve+hy/RDMhseWovjfEg5cICNQH9Vy4RaGql772jzFUlYtE4A+dPYMhO3LqCL+Dj
      PjSOJeTn5rBUjcsXL+FJttH/3hEywk1Ak+jcuI2tm1rxhJL8yq/8Igf2H6B78y7E/HWOXp1h
      W3eK2Rv9TM5X8LkceLwBNPn+qHnm8Gf45MvPsXvXTja2xHjzjR/hjzUiqzq7du+jORnA37IZ
      c+oi7kiCpqifH7z+fZLtG9FlkzMX+vH7/Ci6E59Tvy8a/NE4FKcZGUuzcdcBpt7/MaMlmagu
      0dS+kV3bu5FllaAHrlzvJ9GxDWdlmrfP9dHd0UBhYZqhsQV8Hg8Ojx+Hcq9zIREOqFy6co1E
      xzbc5jw/PnOFztYkLn+YfQf2oEswdaOfyZk5Llzuo7khyI/ePEK4qZOoq8Zrb56ja3MHbqXI
      pYFRfEEviu7A7XKuPOKjTIUolUrYto3X6139IiGwhUCSJKS7KIy2bS9dc5Pku11/O2ZnZ4nF
      Ymu69vZxVifZRggJWZYQtg0fcv190yHLdzD3En2AJQSKLCOEQMCa9P50Oo3X60XTtBW/r/82
      kGV51d8mhEAIUb/mA3/D2t7LanPxwefZi79xdQhsSyAr906LJEnSE1eBkKQ1vTj5tklY68K/
      H8h3neyb48tLxp20husfJh23f64sEnGTIR4G1vLbbt8gPvj3g4+//HnKhz5TQlbun5YnogLZ
      lkmpVKJaM+7qoloJYtFNJoSNYZhUS0UM6/6EmGnUKJVKmNa9G2s3dyfbMjEtm0KhcF80IATV
      aoVSuYx9j/bDrbkQGIaBUS5SNe9vLizToFQqYRh3dxuuSocQCNvCMC1KxeI9/5bFB1GrVSmV
      SsvczPdCR91YNrBssaZ38kQkwMTQdS4PzmBZNfYfeIaZyUma2toQVpV8vozXITOTKdMQDzA6
      PkNreyvZ+TkyhQqpiJNj5/rYvqmLbKmGVpjA2bGL6tQIgXgjIb97zXScfvsolsdFrgCHnt7I
      5FyettYUpUqVatWCah5D9eBRDOYLFs2pMLPTM5iyA489w9lRwc42DzklydTgeZ7euYPhkQma
      OztxqmvdW0ze+v6beIJu1EATnQknZeEgEfFSKhSRNDfZ2Un8sRTlzAxObxBsk9mFLI2pKO+c
      OEVv706y6XnCdoZccjvO7Di6P0Y87FvzXFw6dYqskMjmqhw+uJPRiTk6OluoVWvk82WcskGu
      phDxKkzOF2ltSTI3NUPZgoizysnrC+zYkCBneShMXaNjyy5mRm+QaGnH61xZ3VoJx374Jo6g
      n6rwsqM7QbokaE6FKBQr2JJKJTOL5o8iVbKUcRILupmbmUFx+ynP9jFZDtAZV5H9zQxcPs/O
      3i2MTqVpa29DW8EmeSIMIIBwJMrC7DDvnXyXeDLK8ZNnyUxeo61nD3OTA3R2buLdY8cIhcOc
      fT/NxOACjWENzdlOpWKgKoJ0tkhClRm5dAZLdXF15CQfO/zcmn3gkqwSj0WZTw9y4tR7BANO
      LmZnOHtpkAM7uxleqLC5o5G3z1wg5FbIFpuZnSrisvJ0dEWomiqaXGMuW0GSZM6efBc9GOPk
      mfM8u2fnGidDoDtdhENepnPjHJ8U6KJIoSXCmatpelv9lNQA5XI/o7N5mjtsrp25TltTmFFZ
      plyuoioSmVyesE9m9kYf1WIJo6+fQy+8jFNd21wIZOKxMOnsIKdOHicSDXD8xDzDg33s2rWD
      0alZejrb+PHRS8RCXkpGlsFr80QdVRy9HVQNG002mV8o45Rkrpw+juyPMHTqNC8d2re2uQBU
      zUEsGqL/xhjvnp7D57CpFYK8fXacg1tTTFR0OmyLy1eHcMtVxsMJhOKkOnCDVFTGQsIyKxSK
      BpIkOPbOu4TCQS7ZEju62+4Y74l5gSzbYs+BF5HMAsWqRTjsIdHWQ29XAw4tSGtLA7lsjlLN
      JuT3kUw0k4qEUR1uQqEooYAHa9HQyedyFIolQuHYPenCAgGyzkvPHSKTy1BDx+dV6Nn5DBGn
      QjzVTjLmYz6dQ3H7ccga7a3thLwevP4AwVAMt0OlHrgUZDIZCuUa0XDkHqioG/XuUCPPbOtk
      IZfF4/MhqQ72PXMI1bBobt2AxymRzmQRlkQs2kBjPIaiOgiHIkRC/iWVoVQqkM3m8Yfi3JND
      ShLYKBx+/jD5fJqiIRMJ6nRueZqWsJdQMEVjKkI6k8eWdTwOJ82NbcQCfhweH8FQDJ/HsaT6
      ZLJZ8sUy0Uj0HoioqzGy7uPw/qdI57MoDje6LrNr77O4bJOm1m7Cfp35hSxOfxRFaHR3duBz
      6viDYaLRBKrCYrTcJp3NUbMk/Ks4YpSvfvWrX70nCu8BhmEghEDXP+iWk4gmUgR9LiIBPyNj
      U0RiDUSDPoKhMGZpniv9U2ze1M7cTJpYqgG/10sg4MHpC1CbHyVbk4mEggR8Hhpb20iPj+Py
      h0jGw3cYQKVSCY/HcyeBkkpzWwu6quLSJGYXijQ0NePz+Eg0NjDed4G5vER73EemYNDc2ozH
      48bldOCNJRm/fBZXOIrHEyDg0WltTDE1MUM40UA4cOd4q9Ghai6aWxpQdQ+ikqFkarS2NOJx
      +4jFQ1w69x6uQAMuu4rb7ycUDBDw+9CcTpRalslMlXg4QMDvJ5pqorowi+Lw0JCK3yENK5UK
      uq6j3BE9l2lsacalq/jcTiam50k0tBD0+Ygm4qQnBxmdKdPdEmcuXaKhqRGP243P68ITibEw
      dAXb4SPg9xPwOGlpbWFmbIJAJEEs7F/zXMiqTktrM6rqRLXLZEo2zc2NuF1+ko1J+i6cxFCC
      xNwSZVOmuaUJv8+LKiuEohH6Lp4n0tCI1+PD49RpjoeZnsuRaGjE53YsG+uP/uiP/ujJu0Ef
      A+7F/fiTTseHuUEfFz4Kc/HI3aAOh4N0Ok25XH6Uw3wo8vn8Ex3/Jj4KdJRKJarV6goS4PHi
      ozAX8IiNYEmSCIVCT3yygSe+29zEk6bjoyIB4MnPBXwEUiHWsY4niQdiACFsxodHqJkW1WKG
      82fPMpPOPSza1rGOR44HYoDczBgnzlygVDU5feI43lCQ02fOcJ8JketYx2PHAzFAINHCptYW
      AIJeB+dOn8GWdW5W4nxU6j7XsY7V8EAMUKuUyBdy5LI5ptNV9h54BsUsIQSoqoqqPvlcu3Ws
      4254IAaoFHN4IiHKhTy7n9nD/NQ0u57ajXKfOfHrWMfjxgNt0f5Ikq2R5NL/23eEH5igdazj
      cWLdDbqOn2qsM8A6fqqxzgDr+KnGOgOs46ca6wywjp9qrDPAOn6qsc4A6/ipxnqodh0fSVSr
      VWZn6y0eq4bFP1wcpzvhp7cxuOZnqKpKMpm8+zUPROU6fqJh24Kj/bMgwcHOGPJjjPCn02n+
      7u/+DoCqaXFhLMMNr4OB6K3qwsnJSVKp1KrPCAQC/Mqv/Mpdx1lngHXcgT/8wz+stxUXMJ0v
      AxLf8TmXGmYVi8WVa6xvwx/8wR/g999ZC7xWJJNJfvu3fxsAWwhGF0qEPTq+21qsvPHGG7z0
      0kv3PQasM8A6VsC/+3f/DqgvvPfHs0gSbGkILBXYP4yFdy+wbYHXqeFxPPzlus4A61gVsiSx
      rWntOvejwomRDH0zBQ53R2kJr73x2VrwwF6gm+3o1rGOR4WoRyfs0fGuUQLkKwbfPHOD/pkP
      L7x/wIqwUb7+Z39FplSl/9I53nzj+/zlN7/9oUcM/WPDRKbEyaE5zDUc17OOh4/uuIdPb00Q
      cq9cyF8zLU4MzTGdq3cf6Z/Jc7R/lncG6l6k8XSJU8PzmCscqfVAKpA32sBT23uRkNiwZQcu
      x3nCRJFg0YgSa+q2/FHH/zg3Rt9MnpDHQVd87f021/Fw8GGdnq9N5/lvp0bobQjyxYOd9KQC
      fP6pFjpj9Xf1t2dHGZwrEPE46Igt71H1QAwgywrSzd1eWFwanOSFl7cBoCjKT4x69GxXnITP
      SVPo4eqf61iOcq1eQuvSVWwhyFcMvA7tQwus2iMeDnRGl2IETk3hmc5bLVee64rTEHTRGHTd
      ce8DMcDc+BBjs9NkDMHOrU20dO9Eu41bfxIWP0BvY/CeAjDruHeUayZ/cnQAgN882En/bIG/
      OT3CS5tSPNsdv+u9XqfGLzzVuur325tDbG8OrfjdAzFAtLGdjzW2L/2/6cl2QFzHP3LUTIu3
      +mZpDLrpTvgAiYd28scqWHeDruMjAZeu8mpvE8eG0pwfz/KzO5toCffgW4Pn53ZN415PqfnH
      b6H+hEIIQaZUW9Fz8ZME07Ip1SyEEGQrJk+3xfhkbyOyJBFwaRRrJm/3zTCTr6x66kyuYvLt
      96e5Mn3vp/SsS4CPEKampjh37hwAuYrB8cE5Nib8tEbunnZwO7Zv337X/JiPGo4NpZnMVnhl
      S5yk38m2Rj+d0Vu/9/TIAt88O0pHLMjP7GikI3KnIVuomiwUa8y6VODevHTrDPARgizLOBz1
      HvYOIaPqDnSHY+kzgMuXL7N58+a7PuNeIYTg8mQWwxJsbQjw3sgCcZ+D9qiXmmmDBA710TQ4
      VmSQZQkJifaIm/bIck/b1sYgU7kKYZ9nVfWmIeDkM71JfM57X87rDPARQjweJx6vezyEEByu
      mrh1FUWunyIzW6hiWhYvvPDCQx23WDP55plRapaNIrfy30+PkAq4+PILG3njWj2Y9PKmOI41
      n3u2duxtC2Na9rJnCyHomy0yX6yxuyXI559qpjQ9jMOpA3ee9ytJEmFP/RCW0YUiP+6b4fCm
      JKnAndLig1hngI8QLFuQLdcIunRkWVqW+Vismvznt/poqzz8sxbcuspLm5LULJvuhI/DG5M0
      hdzIkoQqS8D9H8OarxioioxLW1mCyBKUaiaaoi07EvXKVJ50ySDg1LgyPEby4l/S2Rgn+cmv
      3HW882MZTo0skAy47mAAIQTFmoVbU5ZSu9cZ4AMQQrBQMtAVGa9DeaRnEn8QxwZmee3SJD+7
      s4mdzWFmC1XCbh1dlXFoCpuSfpzTD7+vvyxJHNhwK3D0qW2NQD0bdGOyntKs3vOp75Ap1fhP
      R64T9Tr44oFOVOVOCXJ1KsdfnRjm2a44H99yy3bZ3x6mWLMo10zeGS3SJDrY3LS6r/8mnuuO
      k/A72ZwKLH1WD8jCRLbC2wPz9CR97Giqf/+RYoCyYWGYNn7X4z28oVQq8bWvfQ2o78Kj6TK6
      KpPyO+6JAb785S8/EB26KqOrMpoicyNd5kjfHF0xDwc7I2iKzC8+3cobb/Q90Bj3AtMWLJQs
      JKAxINDvkQlkWaozr6qw2jSqS9fcYo5cxeDrxwfZlPSzvyOKLMvkkzvRN2750DF9To3dbcsP
      KTw7lmUsU2Fz0ociS8uY+YkzwJEjRygUCgghODuaZr5Y44Xu+Iq7xWrYv38/kci9nMy4HA6H
      g8997nNAfdc7N5bD61DoinuXRP+7777L/v3773uMtWB3W4QtDQHcukqubJL0O2gI3KnzPmrY
      tkCSQJMlNkTr42v3UQ3md2r89vPdKLKMsopx3hX38Xsv9+C+TUUqVk0ms2W8DpWgW+c39yRQ
      p07jXhDQ8NSaxzdtm+G5ImPpMtOFGvvaQnymN4l+G7M9cQbw+/2oaj33IztSImOB0+tfSn19
      //332bp1612f8aBdqBVFobGxcen/5qY7rwkGg8uueRSQJQmvoy79gm6NVzYnHul4K6FsWLxx
      dZaEz8Hu1iCB+/Cs3A6Xfvf7JUm6I805FXDxrz+2GZ9TRZYkNib8YDhBuTfN4P3xLH/27iAd
      MT9bm6IUajZx33Jb5IkxQF3XrhFu6Wbnop97444axapJe8S9pHpUKhUOHjz4WGmzhUDi3qOK
      PwmomTaZsoGmSNgChG3fkzS+XwghsBZ1dVWWiHkd5GsWli1QdC+0PQ/yystVCEHFtLFtcOvy
      0ntLBVx0xX3sbA4R9DpWZOYnyADwZ8cGmciW+dcv95AMuEj4HOBzfPjNjxCmJbg+V8apSrSF
      nWs+df4nBQGXxme3JXGoMv9wYZy+mRxferYLv/PR2mUz+Rp/dXKEmXyJf35oA26HztBClZRf
      ozXkBGX5WdPpUo3r0zl2FasEXDrXZ8vULEFvyoNDgULVIup18FvPdy/dU6ga/PDqFFsaAiT9
      dQ/RQ60Iu5f0Z0mCbY1BtqQCBNwfPEj7ycESgrJhUzJ+slMQ7ga/U0OVJcbSJWbyVco165GN
      JYTAtgWTuTIXx+tR4Uy5hldX0BX4zoUxTg7N33HfqeF5zo6mOT40jyyBT1c41jfFO/0zTGQr
      fOviFGdGM8vuuTSR5dsXxvnRtemlzx6IAcq5ed743g8oVk3y8xO88caPeP/6DdbCApIk8fLm
      FL+6vwPDsp9Y6rRlC+byFazFPBOHKtMcUGkO6I9l96+aNseH5pnOVZZ9LoSgYtiPrLrOFoJc
      xVh6fsWwlhZ61bT483eHEAh+5/BGEv61GeKlmkm2VLsnOgo1i4tTJb59fhyHKvE7L3SzJRWk
      bBgEHXB9OsvJ4bml66umTbFqsqs5xJZUgKdbwnU7QpcYTxc4NTyPRP09fjB63ZMM8OKmBIc2
      3EqvfrCCGFXHHwhgWjaXLlwgFE4Qj4ZACARrqwc4O5rh2kyR57oiKLJC2bBoDTkf2ykzp4bn
      +fvzY7y6tYFDXXEypRr/5cd9RDwOvnRoA9oj1n/Pjab531+7zDMdUf7Nx3uWPs9WLPrmyiS8
      Gi2hh+8JujKV59xYlj1tIVpDbt64NothCV7ZHMeyRT35TNSN8bXAtGz+7Nggc4Uqv3N4I8E1
      SnXDElRNm66En6TfweaUn+9fnuQHV6b44oEOfuNAJ/FFBrRswZG+ObJlg1e3JNjaGFz6Luqr
      xxo8DpWYz8Gne5NoH3Db+l0an9623MPxQG/X4fbhc9YJELZNNB7jzIl3MW2wLAt7DZmMTk3B
      oclossxswWCuaFJ7jLW3bl3Brau4F70Vqizhc2j4ndqqvuuHiaTfSUfUw8bE8iQuRRho5Vk0
      q/RIxnWqCg5VwaHISBJYNph2XTX1OFS+dGgDW1J+xtNrizxLUt0H71tUn8o1izeuTHJjoXjX
      +0Iula0pN59/qolf3tsGmRFmZmeYzFXIVyyCHgdzBWPJNevSFFyacscGKUsSG5N+DFvw7YtT
      zOSrSxLcFoIzNxY4OTR/R0bpA1eEXem7ymzFpLkpxeWrV1Dc3nqCk6Ri2x+u2mxO+eiOe9EU
      CZ9TxbAEzkeQc7IaehuDdMV9OBb90F6nxr94vmsxDeDR0FGzbKZzVRI+By1hN//+Z7ajf0DS
      eI05tloXUWqNwN2PnrKFwLBsdEVes+eqKejkaP80/TM5ijWLuaKxGPWt31+smhy5PkPfbGEp
      GrwSRhZKDMwV2dMa4gu7W7GFwKEqXBzP8A8XJ+hdKPHFA52r3i8JG1d1lkLNz5vXZiAzwqGI
      TDKxic0pPz/unydbMUj6HYQ9Ogc6wthCrCqZi1WLYs2idJvdUqqafOv8GKYt6Er4CN0mnR64
      IuznvnCrIqyl00BW1DXrzrYtODk8j67K7GgO4dYfTcbh3SBJ0h2+6keV+XgTV6fynB7Nsqsp
      wPamwFKeTK5iMDhXYkPMg9cTR412gXfl1OZsucbxwTl2NIe4Pp3n7f4ZfmlP+5pTpzPlGu9P
      ZJjOVYinK/z92VH+ye5WDrTVF3sq4OLVrQ00fkgd9PB8iZGFMp1RD6239ezpjHn5+OYUm+7C
      PADkx3n79Gn+djTApvZWNgQbaO8IscEXZ2C2SNCt0RH1EFjMDpCwqRayKN7AHY+qmhZxn86n
      tiYJuG69U7dD5dXeRkzLJvABb9ZDdYOq6r25yjLlGt++MI6uymxM+B9J56+1QAhBzbLRZPmx
      9L9M+p00BaskA05sW2DY9d37+nSBi5N5FFmit8EPsdXTni+OZ/jepUnyVRNVlsiWDQrVtZ/L
      HPM5+c2DG/A5Nb5+fIjpXAnTsrAFDM6X8eoKL22KI81dgZlRiPaAfOfG8HRrkPao546ItVtX
      eWVrw9L/C8UqM/kKXXH/cvXFGeJSOcLVdA1TT/PscxuQvQEKFZP3bmRQZIl9baGle8ZHBunr
      66ejve0OWv7m9A3eGZjjt57vJuS+xSAysKclAJLCB/XaJxoJDrp0PtnbgK7KuJ7A7n8T07kK
      f3pskF0tIT6+peHDb3hAxH0OXt5U90S8dmmCszfS/NqBDrriXmRZviMnfiX0NgbJV0x2NoeI
      eB080xEjeg8xFFmS6E7Ud+dNST+f2JLi45tTVE2b+aJJxbBJum3IjQIShDeAXO/0MZuv8KNr
      0zzbFcOjqzhVheODc7gdCjuaQsvUsNJiRdep4QXmilW+/Hw3nbe3lnH4+Pzz+5B9o5wcmePY
      4DwTuRoSEtsaFxPWbmMYh+7AobCsRuImnHYFKzNNelyHhu0IIchVTDx2DmPiHCLYgTvWvuye
      J8oAsizdal8hBFRzYFbBHb2DUx8lyoZFtlxj4R5dePcDIQSZskHVtEn4HKSLNbLlGpWaRcLn
      ZHujn5WEkGULzoxmlhwEAZe+bIeN3+aqFEJwcSJHtmyyrz30oZ6sT2xpYHNDEK9Tw6XJ9MRd
      6KpUr1Zp3Fe/SKkvOFvUMzjfs8bZmPDREHQzm6/wxz/ux+/U+N8+3UvFtGkI1D15709k+a/v
      DBL1ONjdFl5G501EPDq/tLeVsM9N2ONgoVhBVyQaAk765yoMLlTpjrk4P5rm5JUpPhOtEnQa
      zBdrHB9awLQF+9pCvNIs2DF1kZBVArYznq1w5Pocba4yC3MKtdkCL3sN/E51iUmfeC5QsWYi
      I+FSgYlTUCtC2wvgeHwNqNoiHn7/Yz3L8u8fFequvHmKVZPPbEvyuV3NvLw5ScTjYL5kMpqp
      EnErNAQcy4zwmmUzNF9CVD5czbEFDM6VyFdNtjX6CbjuzgBjmTJvDyzQGfXgUutJZHvbovVF
      4lreTmQyW0YAL3QnluIDmqqQCHjxO1VO3cgwna/y8sYYTSEXIbeDtqif/R0RPrdj9Vwqj67Q
      2xhgrmhyqDNCwKkuZZPO5ssMTKcZmS/y/lSFHoeOf8HmtUuTZCYv81JPA9sa/fgCQTo6W5HC
      LUA9FuDWFXzhBFXFy7Frc5x7/Qq/dqCTjkUp+0QZoFyzeO3yDJoi84lNUWpTE1jZcXxtLz6S
      av1c2WBkocjGhH9ZRqAkSUS9izuTbcLUedA9ENn40CWRLEt0RNzMFWu4NAVNkffKT3QAACAA
      SURBVHF4FWqmzbnRNJmKzalile2Nfva23Vp8TlXmcHeMs/Mf7l+XJXi+K0rFtPCvksxmWDZv
      9c8Tdmt0Rj20hFw4VYk/fqsPv1OlUBX4XRpPtwSX6exHrk0zNFfgBYe6lOEZdmv8y8MbUGWJ
      QtXEqclLbQw7oh6+criL8IfEBQTg0mQcioRlC/JVg4hIszUW5q/em+bMaJpPb2tkeL7A9xa8
      /OqmJpxaPWV9X3sQn0OlP+tlyNzJgXAzHuo9RT/WE+dvT99AU2VUYTKaNhicr9C82CTriTKA
      Ikv4HCqGZZMuVjDGhjCzM7jKeXTH2gvB14pvXxjj1MgC/9O+dna1rOJaNCuQnwDNVdd7pYc7
      RbIkgbB5t3+asFthZ3Odju9emuRPjw2wty3KplQIr2O5TVRnUn1N/ChJ0mIAa3WJli4ZnBvP
      43MouDWZva1BpvM12qI+kn4nCyWDoYUSEvDUbUzQnfDxLdPm/GiarQ0BfE4Np6bQFHBydHCe
      XMXkpY0xnIueLUWWaFqhI9sHMZKuki2btIZ0/p9jg+QLRX6ra4GGRIqDXe1EvE72tEWYzVeY
      ylWoWYJ97VFe+XgvMW+9buPabIm3RkwcvgrPdXmRJIlCxeDCRAZXdZ5dMZmPN7nZ5MuiKfXN
      5YkygK7KPNUc4P984ypH+6b4yv5fJarU0AKPJg14R3OIqmkTcGm83TdLvmazsylA6nYPhuaB
      5mfqyVfSozHMizWTQs2keJvXxqWpNIe8vLAxztbFmoC7QQiBYYmlhXmvkfOIR+fF7ihv903z
      639+nOe643z109v44oF2oh6dYs3i9SszXJrK0xH1EPXWd/CtjUF2NIdoCrv5D69fYUtDgOe6
      43znzABC1oiHAktpJVB3dWcqJh5duWtNcbpkMJ2v0RTQMC0LSVFw+0LUXAlyGYPm6gCu6Rv8
      wlN7qVk237tUb4MSHs7wQne0XjvgVLg0vkDco9Ee9WLa0Bpy8i+e6+JHR0b5b2fybGsOsdWb
      R4rV3cuPhQFsIciWDfzOO/s8fu/SBBfGM2xO+fFGG3A+Qj18S0OQLQ1Bvn58iDeuTrEhHiTp
      dyxnAEkC9/0X16wFe9ujdMV9hD0OpnIVJrIVDm2I8kxHhPlihf/rzWs80xHl8Kb6+VaWXc/b
      CdxWKTeRrfDuUBpFllEVmZc3RnFqyxdYulhFVeQVbRtFltjZ5OfqZAbDFpSMep7Nzd3aqSk8
      1xVloVgj6FI5NjCLLEnsaY+wpy3Czu4EA7MFYl4HQ1Pz/OjMBdy6xv/6hY8vc2dnKibXZytE
      3CpdsdUlwXi6yHS+yp5Ila8cagHNhc+pYdoCZ3oKOdMHRhWldR9OSebp1hDvn1QYmi8yd7rE
      891xgi6N/e0RtjcFWCiZXJ7Mcu6GzSd7G+jdtotzheskUnH0RAjU+jt/LAwwslDm7YF5Nid9
      PN2yvMfmzuYwhmnzyW2NeO9h8QshmCvUMG1B8h5LF3c2hzAsm30dMTbEHn8/R0WWiPnqL+Di
      RI6xTIW4z0FT0MVEpp7slb9NOlwYz3JxMs+BjltqW80SVEyLK1MZDEuwuyVAUqt7aqqmRa5s
      8MdvXcfn0PitF7pXDe69sDGOy6HREvagK/UUBqdWjyinvArJke+THTP53sRGhKTQk6q7TsMe
      nX/10iZkSaJSzHI1aTBUkpZtcGJx45OwiXjuvtS64178Vhr3qb9ADreT7/oc3/m7N4D6BooB
      Z2Q3jHwDqCfvRaUq8tAx8qbFd69IyJJESpGZyylM2YKRnM2Pqyl6G4PsaQ2y3RlATXai6K4l
      2+6xMIBbU/A51BUNsi0NAbY03BnV+zDULJsj/XOYluDTvck1H54AdTG+9QGb3Vp23dUYdms0
      h1xIkoRtC6bzFWJex5qKSPIVg5aQi5TfSa5U4zujCxzemOD3X+5ZVhftc2r4HOqySHlr2EXY
      neT6ZJqJbAnLqof+i1WTr70zgCJJhNwOIh59WbeFDyLpd/LZ3iRlw+bbF8Y5O5rmt3Y6iQX9
      CNWNNnkBH/Dyhr28O2FwearefW2uWGNkoUzY4yBbUfnCZ38GW1IJ+29573IVk7f6ZvGJPE9F
      U8DqknVj3E13YZRjdivT+TY6Czabtm7Dpd3ZmOAmY1lC4FDlejsXSaJm2rh0FY+uUDFt3HMl
      crMyLWE36cvfp//6ZTbvsvB27F161mNhgLhP59O9SVaqqRZCcH48x0KpxsGOyDLvzN2gKTJd
      MS+GZa/acmM1DM4V6Zspsq89RMClLUaCBZosrRgJrpkW45kS6VJtKY8kUzI4N5Yl5NZpDtVF
      +5kbC3zjvREOb0ry6ta7B9Rqps2fHO0nUzL43Zc28Y1Tw1ybztMU8qBrOsI2ieSvUfO3kitL
      PLshTNitc2nxflmS8DtVPtbpZXSuRtRb3/0tIShWTTwOld842IlDvTNx7CaEEJQNi7IhGJiv
      cG2myFS2zI3pPHOFGnlXC+HOX6M7qrNNjzNWmaFq1uMQp0bSvDMwR29jCMuG5s0xoh6dk0Nz
      nL6xwC8+3YpDU9FlcJklrg9cZ0zr5GBnZOWUF6sGtSIVdyMVTydH+2fZEbKQJWnJdhDc6pXr
      c2rYQlCo1g/z8+gyHl1GkhRsUZcQLk3hczsbcagKZ7VNXHZoeNUWbo+vPxYGkCQJdZFyw7J5
      /fIkbREPWxqCCFFPqMqWTUrFLJpqIXmiH/pMWZKWWlvcK8YyFSZyFTLlul6dLhu8eW2O9oib
      p1rulAyXJrIc7Z9FuTDOL++rRxJDbo29bSGCt+3UQbdO1FvfdScyJeI+56qSQJYh4XNxfSrP
      5Yksr2xtoCdZJOF3MZyuoc1dJdz/F5xXevnr0lPsbY/wT3a3LXuGBBx0D0MiB1YXaAH8zrrK
      o0gSls3irrjyBjGyUOTrx4fY1hSmLRbkl/e2UTUsGpU0E1UnC2VBVo1SdXsIaDKf6a1Xir01
      AoMzOY4PzDIwkyPm0WjNnmV7c4RLczGuTeeZzlXYEPexozmCZsicGitRlsrkK+aKDCAUB+XY
      UxxMSpjuFNPpHBPjY5QNE13VMS2bYs3Epak4NQVFAlnUs0Mt20YRNSTbxkaiho5l1924XQk/
      58ayuP0Rdj8VpS263Lv42L1AY+kS/9+5MbriPrY0BJEkONwdo1Kr4T//XxCFGXj299fEBLYQ
      lGsWbn1t/Xss2+bsjTTlao2DHeElg8+y67lAH0zDrpkW709kCTjrXoVdrWGMxWs0RaYnuTxY
      1xnz8nsv93DmxgL/8Y2rvLQpySdWkQSqLHN4U4JzYwu81TfN559uJ+KSCS6cptnRxogIkIht
      pyO1m+4RFxL1Hvplw+JPjg7gdSj8/M5m1NwUpIe4EdjHt69O8eKmJD2pAMWqyXcvTZMpVaka
      NV7Z2rjsdJtrUzn+9NgAV6bzNIY8fHqrA2yTci6NyxelS3PSYtWzTN2LNsHtaubz3XEyZYPN
      qQC59Dz+/h+SmXHzc5/6NxzqStAS9jCWLtMYdHByWOXEaIGXerzEfMvjAUIIpvNVFkom+WqI
      lF+juTqDpzCJW3Mutk2sJwoIUWdoTZGXEi5lSUJSFJAEWAaSUUZRJPxOJw6HjiRJnB/PEnBp
      vLQxznC6StKnEV6MUzwQAwhhc6N/kGR7O1YxzaXrgwRjzWxoSy3rJJYp1ThyfZqnWsK4dJWE
      30My4EEIwVTeQJEg5nUgAk1116P24X5jgBND87x+eZKP9STZlPQT8tw9F2Zkvsh/eP0KC6Ua
      X36hm6543QCOenQ+05use1FsE9H/JrhCXKGTvzg+xM7mEHvaIjQEXPzHN67RGPLwuR0NHLk2
      TVPITW9jEEmSkCQJTZEIexzEvI4Vw/5QT72YKRhE3To/v6sFCfivRwdwigr/cmOWE0MDfO2S
      zae2Pc8/b+skkR7lR9dmaAp56Jsp8M6NSRJ+J5/qbcCTGYfcLDcmZ+ifNWiLFGgKebCEwOtU
      GZnPM54uMDRXWMYAg3MFZos12qN+JElm5NpprMI0f32lxqGeFl7YswenKq2amn67HSXsFIXG
      z6M4PLh8Pvx+iRsLJY70z9MadhH3OWkIOOu5Th/YqCpGPSBXMWx6UgFcmkwxl2WkqOPW6j2S
      LFugqTJuVApVA6oCj6PuIZIl6jaOpIOsIkkymqKBLKPKEiG3xr62MD6nSsW0yVUsXKr8cBgg
      NzvGuUvXea6hmdFr1wkn22mI32noXJnMcuR6XX/8mR1NPNsVI+Fz8H8fuY6uOdjeHEGSnES3
      /jwgkFbIOlwJVcNaMvrSpRr/7JkOPtXbuKo0SAVcvLw5SbpYY9ttRnDNEtzI1Ii4VeIsYF/9
      LrhDtO79PZ5uDbOrOczE5UGuT+c4MTzPxrLBvrYQP7gyRUPQdcfpMRsWJcFquvd8yWQyZyBL
      ErvbIiwUa7g1iZDbj7eljWYXZE6d5+J4BlsIGkJeYv4iMZ+LpN/JU/EwL21K1Fuo7P4iVHN0
      Sgl6ipO0Rn1859I0F8cXUCSZT2xtJOKWaf9AmvThTQk6Y14qJhwdmOPstMFGt0pVdVHRwmCb
      dWl9fpLnuxNLx6XatiBdMlgo1jg+NMtkpsw/3duOb2O9Z5IQguH5AnOFGu1hN3GfTlvEzQmP
      zsBsge6EfxkTOFSZjXEvQgh6G30oEtjODYTtBYx8GtusYQkFkFFkCdMG27bRVRtJqnt+bs2z
      fMfmWW+rUt/obCHYnHAtU8EeiAEC8Ra6mtMARBNRhsYGGBmb5Pn9O5cqwhRFobcpSNW02dIQ
      4N2BOU4MznCwM8bAbIGGgA0IBucreHT3PdUEHOqK05MK8D/OjvKtC2Ncncrxyd7GVftYunSV
      3zi44Y7PK6ZNtmySq5gUVAVjqko0ahNxO/jlve2UDYu3Zgoc6tH47ec20J3wkwq4+PmnWkj4
      Vm7WerdWgjFPvQ9m2K1yI11lNFPlF3a3M5urMCe89DSq/NyuZloW+3N2xX14HA5iPp2+6Ryj
      7hx/X63RnfARdIfBHSY7lUfXVApVk5BLY6FQxbTr3dwag547bBGHqtCd8DO8UCHl09kgbHoa
      m/mfuzvx6RKMnWBirMjgbIimoJvexgCj6TKGZXNlKo9raIGrE1mm8xXyZWPJEVGzbP765DDZ
      ssFzXXH+5voE+ztiXJ7MsVCs8fHNKeTb5kaWF2253Dii7yjofuTWAwS8bmbz8yjCRJFYLJet
      e3tsUa+VdqkydztCxrIFk9kKVQuSfh2nKt/hiXwgBigXcyyk59Fn53FJKk1NTfT3jwFSvdnV
      YkWY16Hx/MYEc4UaRwfmmSvUSAZc/O6Lmwi5dcqmoGTY91wJpsgSCb+TLx3awKu9DfUyxvv4
      HX6HQlfMxdXpEv/p+AhWupdfj1j83TsDJIM+OuN+jg7Mck5c4//43A4CLh3TNAiLDE7Lzdkx
      i/FMmY/1xJf87UIIRtMlMqUaWxuDd+x6KX9dF66YNtmKRalmMpEpYQl4oTvKVw5vRJLqO1jE
      rRJ2q/z1yRH6Zws42yQmsxXen8hyoLOetNYd9xJya3W3pyzxdEuAsmEhKwqXpko0h3Qa/Heq
      iFGPRm/CQUOhSs2SOD6cQdgGL3sN5kw3z3cneGVrA8PzRf7tP1xiQ6w+js+h8msHOinXLGI+
      B/aiHWUL6EmFQNh4HCq1Uhar4iTm99ASWb3FObOX4MYxhFDIBDbz2rUs3S4bt+bAoSoI6uql
      16kiS3V7wBKiLjEESLZZP7BR0UCSMC2b2UKFU8PjdCUCzBQcbIy5MG1B2P2QskEto0ayrQUF
      G38wyMTUDDt371wxnRfqvVxSIQ/7O2P0pG6Jwg+pGVqGsmFxYTxHa7iuDkB9F2kJ10V8sWpy
      cSLHhphnyTW4EvIVg7JhEfc5kRYXWdKn0Z0KIqLPEdya4vrREdJlm2e743RGvSQbQ0sLvFar
      ki1WsCyLv706z/WZPL0NftoWVQ1bwDdOjTCTr/B7L/es2qq7M+LE71Bw6zITQZ3U4iK9XX2S
      pLohqCoyEa+D3/nEFt6fzIGsMTmfIapW0YPJpfkAiCz+9tF0mXLNwKWuYI/UCngVjQ2pKJgH
      6M8ISkaG4tV3+Y4mWCiZaOoo3xlyUKyadBeLuGoKkl3l4tHXmfE5luismTYlw0JTZAxL8PTB
      F9gU0+mtpLlerGGJRtwOdfVcptQuhKSTufgW9swgEU8KhQqyVcGWdGxJwxagKzKWbZOvGuiK
      gktXKNUsJLOEVzaRXUFAxjINbEsQcrkJu1TMSoG+GQsTha1J91Ku1YOdExyMsiF4y1uzMXD3
      2tWOqAe/S1s1Q3EtmMpVuDyVp2xYy174TYxnKlyZLmAJ7mCAUs3irb45GgJOfnh1gplchd//
      2GaiXgfFmsXJ4TmSATevbulAUyS+8qITt6bic6gc2hDjxec2LDGty+Wht7MVTXfQMTeGadn4
      HCplw+L7l2dojbg41BVjMlNZkREtWzCZqyylHzgWxfPF8QzZco3WcH23rJk2IwslUgEnn9vR
      hDESpjHkJuhxMDhfYe6db5CZvYr80r8iGApzY6HItqYQTk3BsGz+31PDzBer9Db0LCegVoDh
      H4Hug9ZnQXMjSWW2pAJ4AruQEPWddVEKCSHYvRgvuQmHeqsGuWJamJZAV2Wqhs2fHBviY5tT
      fCoQpHPiGNvcXpKBFIYlcKgrcIErguFMkpsYRjPf4PlXf5fR4RyiUqFkgZAENVH3ntXPS6h3
      rBbCpmaaYKs4NQ1JSGDb6LIg5ZHY35FAXuincva/U43vIN/xSVy3pYw8VjeoItfPfboyXSLg
      VFY87ubD0Bhwsa8tRGqFxW9aNufHFnCp0NtwZz1BsWoyla8iSRB2OzhzI02mVA8i6RhEa6N4
      ZQeqlECSZMIeB+fGskQ9OgKxtPhHFkpM56rsag6gKvKi/7ze1bpvJs9fnhhka0OAr35q9Z6m
      p0czvHZ5hkLVYldzkM9uS3BpMs/X3x0kFXDy+y/3oCoSN9Iljg4u0BRw0hBwMDRfYni+RHfc
      Q2/KTSEe4p3KNubGKkxfHWI6V0ZVZHa1hJElibaIB49DvTNYqOjgDIHDT7lmoNo12sJeLNNg
      uK8EkoKi6EspA0IIKtUKJQM0TVuy1Uo1cylYpSt1jVyoEqWazY1MDTMWIlIdZ1NwgQwyNdNe
      OSmuOIM+eRSfT6bY9nS9NaWsgu5BNgW2sDEtME0bVRbYdn0TUYRFQBNYsgNVVciX6+1cfC6d
      vCHxzkiBLl0n5fbgi6eIeSrUs2QfggS4Lyz6c20BM/kqb/XPE/e52N3iX9EAvtnx4GZVk67W
      SwZXahg1mStzbGCWhqBrxdMFwx6dZzsjFGomVyezzOWrHB+aY0Pch65IvJyqgCYtiempXJV3
      BheomTYtxVvVYu9P5Jgp1GgMOvnx9WlsIZbOqQ046/n1ndGV07mFEAzNFbg0kSXs0VGlClSz
      5MshKpbEplSIHY2+JdUi6XfSFfPw5tVJFopV2l3qUtt2h6qg7/s5dm+uMDBXYqcuc2EsfUs1
      lGB3e5RzY1nSJWN5hqmiQ/MByqbNxf4h3GaajR2dGKU85XKFGio+n44kBKZdjy4jJMSiRKi/
      m3rEVZJAV281EtMVmV/a20bE60JNeuHZ36PTHaeKA4++fPGPpUtMZcvsDNvIwubrhe1cOm3z
      z1wzRKkhKToutV4jYGABAsu0kIRNoWKgKvU2NjdrEyqmjRDgtASWgB/3zfDtUoXP7/p19odq
      dakX7IDkduAxM8BktozfqbE15UaRJPpmC0xkq5i2RNn03sEA5ZrF5akCSv88z3dFUWSJmmnx
      5+8OUqyafOnZrmXBmYaAmy/sbiW+gmcG6gv36OBCvStaqUJPVGNP1Kh/qTqRWg6CJC8VfzcG
      nRzoCDOWqcDorRe3py1EumTgc6hcn8kjhKBqWuiqTMzn4H/5xGYWSgYz+SpR7/IOc4Zl8433
      RkiXanz+6Q585Ru0WsPohOgK+9nllXFHwks7r9ehcrAzQr5c5dTwPINjecYyJTa76lHw+WKN
      o30z7GmPcn06R/9MnvFMiV98up1s1eJrb/fhczloi7jvPCldktBkGa/LhccscWKszKVZwVZX
      PfBm2/V062LVpGraOFQFValXSkrUd2BNWez/f9tjhYD3hmeJeF1sSflQQ22sVp3wzdM3GF4o
      EntxIy3bfol2McpE3zT5Qh6/w0RTTGTdgy3suiqGhKZJyGaVsmUhSzqyrCBL9SkLuOuNBuqa
      mkRL2MewbZMIuJA0DRyBZVVuj40BJrNl/u23LpAt1/iDV7ayozlEV8xLyK3j1BT8HygAEYut
      +8xFz8LtsIXg0mSWPz5ynS8d2rDUhUyRJfa2rx5BtgGfU0Ug0RFJsMUp09oYp1g1MSybb54Z
      JezW+eyOZhRZQldk9i1WZf1w/vLSc2JeBzG3ihg/w2/2BiDQvMSIkiQxNF/mm+cm8eoK/3R3
      I223tQvRFJnnuxPMFqrIskJei4NfQvGE8Vz+AZOnv4Oc7IHmfeCOMrXYJ3+TRyPWpvGfT6V5
      /2o/VrbeQv5o/yzfPDPKuYYApZrJUFFme3uSyVyVwbEJhmfm2d6aYGtqZVeDqkj0tDYADdwY
      WMDGxKNraOot/7pLr1euOVWJbMWgXBOUMAEJTanr5Ld7dwR1o/jme0uXTUbTVVpCDoKu5Uvu
      ue44TbMFUgEXkqrwmae7+VibzkhOYJREPcoLaIqE/P8T9+ZBdl7nmd/vnPMt97tr77cXNLob
      +0IsBFcRXEWKIi1Zki3bkuzIHtvjmXjGdiaxUyknlX9SlWRmnKRclaqMJ1We2JNxxfbIGkse
      i7YWSqS4igRIgliIHWj0gt6Xu37LOSd/nIsGmgBkVzjFnCoWC7dv3/v1953lfZ/3eZ9Heggg
      TVOMUnR5Gs8XWOlOCNm5v+tpigAKoc+hnm6e3VdlS6VTgR5/avPff9fZ8p94lHIePYWA5UbM
      laU6h0ed1EX1LkoGU6tN/vCVi2TNuCOb2DlePcU/eGQ79VhzdbnBajP5e8vwHRwus3ugSC12
      ldiB3j7qxvAHL53DWliouYRVG4PqnAIzqy1+eGEe6jGNJOO9qXW29eWpmgVqx/6cN8SD5HZU
      XB7RSe76CgF9hYBEm02KBuAWyCPb+2mnmkuLDQZKeXzbxbHpBkm6hdbgc+4Eml1Gs049yVDC
      TbTMWL782EHa8TJXriyTDxQDWH5hbx4pM0qhx+DYDrZtHcHqlO3tBSaOWLbt3/5jG2ZuTN5P
      THRzoFszc2UGoX2IShs/t1aTtZuQSaz0UB39J4uzKfWkIOc7J5g4Mwz3lHl8ZxUlBbW263XO
      jOXekc1Q6OEtFfZF63hoQCGEJOrfxnC4zrsn3kfQQcSsxRqNkIo4btPSECqIgoBm5r7TVwJf
      WtbaDo0a7ClzcOd2PCXuCr9+bAugGPr8T184zPRKgyGxCK0ViLqxJoOkgQjLm/tvrdtJlGBD
      Na2d6g5vx9JViBgo5xnt2Rxr12PN5eU2Q+WAvsLmQ1cby6XlNt2Rx/7BPNdWWtTbGZcWanTb
      NX7rkRG83m0oKYkzw0vnFzl2dYmzc+tsbdXZM9/k7HydzFiqE4O8XHqO9+vdHOiI2C7UXZ/v
      aHeOp3b18+0P5jl+be2OLYF/+tZV3rm2zFcLbzOeXuZU989TLpbYO7EbYQ0IicUhV0oYUm3I
      jCD0nZmIsZZi6HbERqwxWAqBx6L2eO3yCk/u7KO88wF6tCBTP4YiUpuFxQ+gegAv38fFpRZJ
      pijaBJHEWOmz2koc61Z5lAKL9BRWKDLr5OTbaUYiXHjnexKBIDOC5ZZmwkK1FDBfTykEchOj
      E6Bx8RgzL/0J4sBnGb/vKURcR+XLxEnC5StXASeLIrI2pl1HBHkIIupxhpLOfC/JTMfhUpAX
      idvA/AjbrnPfkSM/dl5+7CjQ1nwCV9+BXA+MPwHnv4O98grxoa8yH4yypSuPlIIt3Xl++5m9
      vPbDOay1zKy2+PfHJ0kyw+O7h/GUx+7BAq1U8/bkKhO9ebZ2R7QzQyMxTh/+Qwsg0ZZ6bPCk
      phxnvHJxGWstR0a76IobqGSNb74/R7UcklPw4tkF10I3UmHq5BwTfXl8BceuLhF5MLL7fuxK
      iyd39tFINP/y22fpK4b8yiNjjFQCCj4bVOlNw2i2lzLeNoZ/c22AXxzMeGznAEb4ZLWljRzE
      HeMe6ARft8mEREpFagSmk5z6UuB3UBWB6xRbTFKOjHbRnc/zjVPXWWtlfOnI8J3h5/YKtr0C
      Z1+AQj/Tjb30eCFGgOgYhTgAQiCUoG0MXqYJlAUR4CsIvYBUG2pxhgG6Ip/P7B+gFAVI4eDS
      Q8MFZIe6sGlOVKq8HDxAY6mX5956kej8d+h78pcQXglPutPFGEvJF47ro9wpkw+8jgCzqwMV
      lHN+lJlACoMLeP/u8fGjQGEFurdDdIMzJADBX7w7w1vrDX716HZ2DJT4d29cppjz8GPN9fU2
      v//iWS4t1HhgvA9fuZa4PQMRl5eavHh2gZ5CwD86Ok5v3iM3mCcf3A61FQLJwaE8gZJIAfuH
      SuQ8yVBlED8boK59Fq/OsNpKWW84pbTDQwWaccIUsNhI6cp5vHttmetrLX7n2b3cu6VCkmn+
      4OULvHDyGuO9JZ7Y2c+VxTUuzK3y2LY71EZWLvKYf4r5ah9/sj7A7MRDPDwyRK1WY7YGGO2S
      8RuTRfooqVA6BSkQUmJSizYGTzi831jQUnBhvkGi8kyuJJRzHjcIrncKADJjWQq3US60CF77
      b6E8wvPP/x7np9ooAveZ1tm1amPxbEKcpFjrgfTwBFjrKrRCSFQqUEIgsJRzHldWYvqLPoOl
      4K7aRGl5mMvlA9TrGq8rdVcar8H8GaRuI/EwWRshDERl0DFkLXwvcqekdcpvzmrbOFEDa8DP
      Y+lApTfCv9aK++zKVnd/+f9jAUgF1YM3/73zU4ixR9gxEzN/aYm+YsgPi7Y9ggAAIABJREFU
      z8/z3TPXGe8rsbWdUE8suwZKPDTey3P3DBH5TkQ30Zat3REPjveQ82TnQYjbFBVuDCHEJqRp
      cz9BN5G1/NJDo6TakmWadqap2DVWa3UUmlKgyPmSrzwwzkApx7uTK1xcrPH0nkEaccYDYz38
      /IMTHBguoYRhdq290fq4aeS6INfNQ7vHMF2KB8dvLhKtM0RSQ3ghIihsNOug8gSBe8wKV/OI
      M4uXc6xHIVwiqIRFYujJeyTasK2vSDmn7uiivtbKuLyS0tuQbCsOIoYP4xW68eQS1joWZjtz
      conWWpSQ5AMfLXw0Er9DVRZCYLFEvkcgNDppU6+v00hCcm1NtWjvGoOXQo+vPjyBtZaJgUOY
      Q4+igoDaO9cxcYu8HyFC1+iSaANWEgiDsW6huSp557OtQ4liDTLTEGvOzTfo8WP6urpQcyeg
      vQxhGSJ3zz+2pvjTM2tYXAvkrcegkApyZR7aBg9t6yfJDMeuLlPJB2zpKVK/nOIrya8c3ZzI
      nV9ssdrS7K9GHN3ei7UWrwPZHZ9cZu9Q5bYKbCvVrLVdaKSSGutTp1GD+ygWHUIixO0SHqYt
      6VFNWrMe9STj1ct1DgyXGOuN+Po7k5ybr9NTLPDM/lF29UcbEOwD47232XVujMIAFAYYyAyP
      BUv0eE2wOVJtaKQGZXwi6xK/WBtaiUZKga86HBZriQJFpjsTQHRyJV/ys0e2MtzfTRR4NBKX
      DN6NYFjKKaoln96B/ciR/xGCIpc/eId6liPne3hK4Gfa5SJGkBhL4Lnd3FqDyGInlygUSkg8
      6STWm7Hl7TNzPLhzhJPXVsirHkZ67tx7LYTYJKArCxXstTexU8exZtDNlaBIM3V2raFSri8g
      iVGej++pjZqQAIwXkeoUYSAAzl6bZXlplkf2jLOndyc0l9wC6IyPZQHU2il/fmwSi+XXop0E
      nmSgGDrOUFJ3x5Gfd7i0Enz5gTEuLdaZXFxnJc24Xkup5Dy68y4BPHO9xrXVmJEuZ6Z3ebGF
      sXBgSPHe1ApfOz7JI9v7+dL9m42Vp9cSFhsOsVBT7/E/v3iNUtXwX//kQ6i7xYyNZfzptzGx
      z4lry1xcaLK7LyRNPT57zxDf/mCRRmKYW28TeoK+QkgzNYSe+DslCefWmkzPzJFFMQPjJV46
      N0+/soReSN0IgnYLjQQUvpSdxhAX+3vSTTgpQEjRwcEF/aVwQ+067wsODEaoO1yHtS5/GO/u
      CApEW7CTb7J06oeYbc9gERR8gZ82sAjyQZnMWrwO7Olul8EkMSbTyKhEqBRaejQSw9W5JYpm
      jcWVNVbqLYYf/Zyr7N7hOiwg4hq0VxGVUezqNaRNUVERPLcxpNq60FUpbBIjLC48Mpa1ZowV
      LlTzvIBcpy8gChQHR8qcSlZdr3KpG0qbG5Q+lgVQCn2e3lNlqZnx4vkVlhoxnz9QZUeXhMkf
      Ove/8SdBuQ6eib4ig2FCrlGDXJvBkk8pdA8x1ZYz1+sk2rC3WuTiUptSKCmECmMsk8tNknaT
      ku+QkltPm2rRmTeUc4rW4H78bkvm5TkxucTZN78HbPbDzYwlSxNCUoQH7fdfomIs7y4qTnRC
      joK2rE67ZOxkdpSxnjyXFpqURZ19w91OYe4uo7eUI+vtprcgQCq3MDueupk2aGsIhHbIim7Q
      NLkNS9kkc4iYEJZS6CM+5GVg0xb22B+jcmXEwZ+7TeBrpZUxtZow1h1SDgwkTejfzb27pnjX
      KjJjMVYigwgQeIHCGoPFkmQdfX4VkRoFMkHqxPFwREDgKbqKEX0lj5Jn6coLSFsQFG9T2lts
      JLx6aZn917/J9tZJeOp3Efs+jyzsgjdPYU2GNBk5qfBFSqp9pJcnFAbEjd1fI6zC4qrTnnTh
      WyPOiIrdfPKBXt6+ugxe+7YmpY+8AG4YYPy4lkQpBU/sqlKPNd87t0w9ztz7le/CAeltiFBZ
      a51hQ1viSYVUPuM9Ny86UIJHt/eQaYsVkmaSMljKUS0FrLZS1mp11mvrvHHmEkd3DVOJbtYI
      SjlvIxb2y9387k89wqnZdT64vs6e/QcRAoqBtxFqrbUSklRTDiAIQ2qxJtWuIhp4ri2vlWhC
      TxJnmj86vcDuapEyTbqaF2Cld3O+86GRDzwmRoZcciY0j+0cYGZ2FinAGIkwltQqtNYoY4mt
      S449YZHCktHhxFh7+4PM2rB6DXwf1qeha/Np2IozmnPnabUEpfX3Ye4M4uhv4B38IoWz59Da
      9dkiwcgQrQ2itUosQ7QKsSjnHC8Uwgvc47PaQZOB4AsP7KYYhUyvtSnZGbj6MlQPuAT0llFv
      Z6y2Upbz2xjLx7w1o6n2JnSVhzH2JM12iich55uNBWiF2LBMlUAlCh0F2jpdU0+AjRtIMqKF
      45xqd/H1Uw0eyC/ylS1LiHu+iPBcePyRFkC7vsLrrx3nwScepxD6XHj/LUTPGNtHBu74/mKo
      eHpXD4uNEsPlwHWGD9/vHkiqqTfahJ7iD354kVy2zs9mL7Cy2sDar7DYyPCVoJJTDMpVsCmt
      aIi3rjSQaAaKPoVAcXB8kLxKGRvooRTeWWfIWsvVlZhmYtjRXyTNNF6ribUW0UGqb5wennK7
      cyuzG0bWiXa4fKhkR6HN0Ew0s+sxU6sJD20pMFzohcrYHb9/02jMw9TrUNqCKu/ZKJxJJbAy
      oNlMyLQlwpIajUEQKbcR+Mot1hu/o41laqXJ9tAnjLrhgV9GXD8GtdsXwJC3Rnn2P5BfzUH3
      eIdH7zah6WuTzt5Kx2A0iQhd+2HWRglIVbRxbxSWTKdYJD4JCEVKQH/Yz6GCYle4zvoP/wzd
      W8ALilDesoHAgIOJn9tbpa84ymrzcc6dnGMlq/HwoOeUwo3GIhEqBJHhyw7twlqwTgpGSoXF
      oqx1XCXdRtgEkVkmZ+cZC6/yWE8/97beg6vXYOwR9zfzUU8AIclFedLMECdznDo/z479/Zts
      Uz88iqFyBZEbP7KWVprxZ8dnePHMLLurRU5fX2ekIOjZ0odazdPODJeX2wSe4MBAgJp7D52l
      xIMlmmnGYiPB4kIWoXzu272LvdXorqeSBdbX11idvkRldJBEl5BJijQpqQE/VyI1LjbNKed3
      1sgM2lq6Ip9cZ/dPtSHWBmkAAQ9O9LNnqEy5GNDy9vGX715jV1Vz39gdoFBrIW1i2nWyVoxf
      7QWjMVmCUL7TGerwWaSEwAvJEo2QEqUkSjnEw5NuydIx+bh0dRKx3GSxsIct3VUmRh+B8Hal
      C1kcoHjvFyFXgWKV9swHhF4esXiW5YVZYqNotWNyIsMLciTaeXT5Eoxo08pcA5MTxNWkWpMX
      MWEQokXAuFnn1dffYGmlzv0rixTKebw7+IdeWYlZa2kqkWMKPLmzj0rOw9QXkRgC3wPlY7MY
      kTYQXs5JtUvZgTwt1s+jWzWwBhkWsFni8iXp0zQBwfpZPt08ju3ajtj+DFRGN77/Iy2AXKFC
      JZ8Ha/jBd1+n0lvh6tQMe3ZudceVtUh5s4oLECrLWydOMa/zPHNwG7n6JGLxElk8DEKwvb/I
      gZEudlfLhIOfoL7yAq9eWGDbQIVy6CGVR6O0g3/zxjWG62t89p7hjQk5s9pmcqnG0W29Pz4k
      S2psnX+J6IPXWUk/yUvrYzxV1XhYaqkilBn5wENLidIJaZqiRIBUynUh4ZJOX0nyvvOzFdbw
      G49PkO+cOpcun+fNE2dYGp+4ywLQMPU6rQtvsHh1GuWPYrIrmCxEhAUylcMYQ8530oe+FIQ5
      0dlUbjJWrbWkmVOR85VirCwIBVy4NkVryTDx4OHbTKYBEBIx5MKzxsVjzH/nX1PccT/941tB
      p8SZJU5TFCl+EBJ6YLIM02yQqQhUiNYZnnS8IZMZrM5oCx/lW0YqId+4bqgxwKPP/jZhX8Xl
      Q2JzriKFoJUZVpop5cVTDAD5iXtZunwasEjPx3JL62PahLQNYXHDjbSVarCKAIvNEmyWIYOI
      YqWHAweP4NcGWD/2DbzKOPHAIdCQ61zGRzbJO33uDPOtlIee/iT1xTnm6o4fLm5piYwzw3c+
      WADgU4NNFs+9wUq4heUdoyxdm2erbHPPUJk9o0NUSx7Tq23WE8s7U2v89fszTF4M+V9/5shG
      /0ArP8KMrmFWW5TCmzH7cjOh0aizfPIY3XuPEPV8qEHeWmgtw+IZKgUIHvwUauIoT8+0iRpz
      KOVEYW98nrUWI31CleL5PlbIW3ZmV9kuhJ5L8DDkTR1w5Lmt+iq/2Hee4V2773zzhITiIF7/
      Tkh7mDLdWBNTUilCeNTbGam+EVOD7DAx77SwpTUILMpodmwdo1Aq8+S54/Sw5mgOAP3772hx
      BOD3DJMb3k00fhg7vA28b5PvhFa+CKFzIkkEOvPxAx9lb2jxCELlEUQBOoP1TCCTjKDQxS98
      6glamWVwsIzUsUP8bukxABipBCw3U6YX12m9+jV8MsLB7VDoR8gpPHWjKu47PU/TkYzUbazO
      sCqHQSL8CNVpdLGej1ABQnpElX4aUQ/RMztQYcR3zi5gLHx6rzNm+cgmeT/zlYmNf3eVy2y5
      w/u0cT2/hUAhKyN88p6t1Irb+PP3Zjl77Bz7Kpoo/zpSKk7GKautlMV6TCXn0atXyLc1p19f
      4/ItePaOVkw+U3zzm2fpmtjPg3vGOTm9zNL1q9R6LB9ML3Gga3izV2x7BSZfBhUi+veR79kJ
      Xsgj2wpcurTGettVItuZITOWODXkA0WYr2CNdV1Ikg0JlI2hfFd9vAVfzuqreJWtpPYut1hI
      GLiHcOAeRg9b7HKLE5dnCfwmYdoikj5KOZgv04ZEOPkPYbJbdnSLQOD7vpNz0SlX5lcY9CtM
      7L7PhQgzb7kF2jVxm+nIlaU6V68v8LB/icFn/yHCZCyuN4gzi7IJOT8A0cmjrFPr8HIFMK5R
      nSwBqxFhBSFAmDZ54SG8nGvG6b+FgTp7HBpzsPUx5wDUGYESjFZ8bJISHXnWkd+Wz2Pr6w4V
      vNFAIqT7u73AIVpZC20EWvhECoRJENZ3i1XeBE3aqebU1Ar5fMTunCJQ0nW68Z+gJ/jvO+qx
      Zkt3kYGij+8HsPsZdAYD1yfZ9YkDDBUgkICXwyBoJppGO0WYjJzaT6HoZDOcDIaDuiaM7cSf
      Kd++uk5fX52plRZp0E9prItiufd2BqSfh8IAtlB1N3XhDKftOKvNlD7ryGSikwArKQg80ZFq
      FHgSN8l1Gyvcjd4IRW7g27fssHrHs7SvLdHM9d/xnqTa0EoNpVAhhWBrd0S9lkevrqNshich
      CnyM8FhrpbRTTWiSzn3wUaKTpEoftOtp0DLgYs1jZnKF5/YNuAkzdJ+THQxuL0R9490pTn1w
      kmrPW+yWAnyPVs1irdmUx7Uzg7IZvshcOGItQnloPFqpIKcSVxU2mshmkCXY9RlsOO4KndZi
      oz7XtO5vhoWFEFSTq7B8HsaOYL089qV/iW1oaI25a9EZ+BEiV94oBOJFWGnAWISOkRiwt59w
      /uQrVCanKE7cj69289Qut/hu1Gg+lgXQFXls6XLsTN1cY+5b/zvRlr18tlpltpUjE4HLTHFk
      qUKgCJWg1jSkwjEzE23whCVSLixJtVMEEALG+4ps6yvy5N4tGGPZPVG5zXfX/bU5GD0Kl16C
      yy+i+3dzLi1TzxQ9Ffd5xdBpS0oB2lMdY+VOKd+CQZIaicDiSTb6ZlNtWbt+iUq5DPk+8oUS
      B8YkfnBnJubl5ZjlWps9fYquchmZrDOWXWTWL2JFEUyGMBnS88grV6STfo5UO5qsE7ztTIYs
      dj8Pc1RyHjs4B7NTMHjvbRZHGyNp0G1XKRWKFEbvgeFDYDJG8suE/iyZlu4kkHRqAi4BToUP
      UhBISepJkrSFbDfxozxEXdgsRmcZzXe/Tm5gBA59Ca6fwH7wLdj/U4gPi541Fx1KJR2/SIQl
      2P08YnkV3p8B7WjQZMkGQoc12PYaCumUnhFkhCh1iyqItZC1UIlml76AiA5D0sCbfB0GD0DJ
      Sc9/LAsg8CRj3TmHVNRqpGtzqEIXPfd+Cjk1C1qQGkvW6Rd1EJukVIjItMVTglZqSI3FEwJw
      5K8ky4gTzdRKxnqsGSgGBEp23nP3Yetz6FYD2b0DFn1W6w1kMQYswstttNc53PkWUVYhXWxp
      LFIKMmPdTikEcZZx6uIkj4wEMP4kIl4nmnoFitUNqBfcjjpbS6i1EkrXXyO8fBJ79B8jsph2
      fZXrK223c1vtvlUIF8oAqJyjBAhB5DvHRm3By5q0M0NMja7h7eSVIW2todprcPqbiKEDiJH7
      Nt+E1Ss8WFpiaHuR3n2fJG23sVoT9O0B8R5xu0VmBbnAI+f5yCyGtI30PYR0YVHoK6Tx8LFu
      AluDlR7aC7kuI3pqs+7UbCy5/1rLtz+M+VPQXqXWgNbVv6Lv8V9AjD+KaL0CzEK+G6Fd8w06
      dYvdC0GnWK1B+hg/cqYcFlTnaQksJHVEbouT2gwK2MnXMSf/ElGfR9z7C8DHTYZrLeGvnWXk
      U7+EGtxPonIkLGFJXdXVWDxjkR1Sm7GWxBgsEmM6O5HwCKUALL6UGG04MFTi7FydWqx5dFsX
      BstSLaa3GN7RtLu+/bO82NzPsB7i7Nwsq402uuqhhL1JrMLNPWtuvmaBWss1dlQKEZ6wGJM6
      HNpTbBsfg0qHYCeVm8gf4uIbCwv1DG1hwlskDHwX0xYqtMq7mDlzDDoqDDcWnuiEJGma0Egd
      MlLpSP2lmSEkoZlBYiV7eoaJhw7yv701yaGp93l29RhWx7cvgMpW9kzAnq5xdNpm9hv/CzpN
      Gfnif+fyCuFkBz0JUkkwstNCaSFZc/F5UCDMRUDUEeqJXTKuPAp+SGvwYfLSQ2x/Eqr7EcU7
      1If6dkNrhdqZ/0B6/QOWdj5B1jWKufoWc3MNCOs3nXqShkuCfddhZ7IE0QJEHW1djibETVvV
      uOBD3z5EUAAhWL12iez6HN0PHdrwoPvYFkCqDa9dXKHaztgzXoAwz9J6Qis1eDhqr0syb05A
      JToTQEAlcnLYoScgXiewAsIShUhx1F7h+EqJyVYvpyJFvR3z0rl5vvLAGAe3bA4BrLW0jKIm
      yzRTw1cfmmBteQ7WF9BGowo5BK5xI0kyRzmWrunaWoiNINWWKDNEUiNtAuTIeYruwXGXlt6I
      dcefvA15kQLGmObrZ5dYG36Sp++tIvyc4/jIEIPTeb2RiOd9iYpraCvQOD8uX7ndTVlFbD2M
      ScnbFF/lydsmMQFLLctC1zDiwV+D8h0EesMSDOyHpIGcfoOuah9tv4rMucniRUU8ox3F2FoX
      PnpOQNfRtfVt99WkroldSUty9mWWZnsIxu7DD3OI8p0d7ykOQmGA/v0PYlofcHZpiaatsvve
      L/Ll7YuIrg5m31rGvv6vwBrE478Nfp5XX32Vo0ePgtWYhfNM2z5yhQrlnGJyNXYuluWbdltJ
      bY2WP0QldxOW/tgWwHo741I9oJbfx54+hxX1BBnruobWhsT4iE4XlLAWazLSzCKtwbcaJRVC
      CkBihCLFQ2iD7yl83+fhvpiy6mK8LDh9fpKCTu7oG7DW1syupxzd3sdoV4ivW1QXPuCC6MFI
      CTpBWzAq7Ijdung7M45+XMwFGGMJPAUm7fD2Fdpo3vv+n7O73Cba9SlXeVW3V6KF1aSL5zl3
      cZHrLcnjY0UCq9Fenum1pEP6coteCDCd419JAb470WTWckUf4SExaAOBFChPMNhTYaLP2b6W
      cz7i7/JOkArhRxT3PUVx8F5cK55xhaS0QWZAhnKjnuN24JxbEDe2XIC0AUkD61uEF1A69Bwn
      miVOXVjjk7uDu/uDmQxmjuEli9iBCUaL0Kj4ZO+/SjZ/mcHnfxOVL4PpxZovghchhh2fv1Qq
      MTAwgL32I+z5/4eBLfcjD/wqy80UlbTA0y4E69Qe+j/5K+h2Da98E5j4eBaAyegxyzy9s4uS
      rfHym69x1Qzwc3vyhNk6sYgohfkNBTSXbSYYIwGJlCCytns9KCL8PDLLEKIDyA/eSxTluC9r
      k538OvcvnuFAdYxKzwObr8NakjQl0c5ZxFcSRAjFQUQ7QyGIM9sJM7IOlThEWINJY7RRCCSR
      59AoKwOQFiEkSao5vhKSlzE726swV4fuCdfCd+sQil7f8ivdp4n6ArzXv8WM7Cc++FXKObWh
      qufYnwatLVYGSD/Ak8rtvjeS3lxI5AlEoDboGqfm22zdZu+qjLH5dliMDJFjj7swTwhYPAdx
      DTo/y4RAaY3QMVZ4WBQGhacTkF4HiHUJufTcKa1ba+QrW8jyO2nGGZkxBDpzOdSHGaHWQFpH
      FHrhsf+K7rBEF4Lra/Nk6wuYtI2iDFJhqoeJFyeJjEZ0QA7bWsW+/xfYxiKyuh+bxZTPfo1d
      2qdYLEDuHqzvCou2XWflja9T2vc4+a1Os+njWQDr06Sz77Gq9qNFk7cuzTFtDU8P9Tg5Ehnh
      36KpqS1IGRAFjocjwSWCJnMa8F6IL1MwcSdGkjcJdUGRjIhc/05XNr/1Xq9coj0zhYx2Ue2g
      AEgPBg4gFo6BMQg/hzSu7G+t7Rz3wu3KSjgKRqzxggjRriGUj8wVCDzF4fsfY0uvD4snse9/
      DbHjadj/hc33QgjE1ofZCVDdT/vEdf7oQoV67RJf2lPAT9ZBKrQqYDtoj5TqZgX1BnUcuyGX
      CIGrumPI+erv7bE8tZawuFpjePkd9NA9nFiyPGzOdzhAIHMRnvCQJsGmKSZtYsISVnoYLMZY
      Wu2YQBjCvKMut+MUYVL8xhRP+8vokUPkbQv76v8J5SE4+KXN6t8dfSKs3UCIBDDwqX+EiZv4
      5Zs1g6XX/z31D16l75O/THnvY+7FeA0a8y7P2HI/NJaQ08foypWRXQ+Djlm4epJXVnoY9Zr0
      XXkXFZU+5gUQdaMLQ8RZiSDfz3/2yW5WbZHBgQJXLpxFt1qAwgjHqkwyQynnb+bTeyFosQlz
      tzrBxHXS9XlsNOaqgXt/ksLO5xBB7jbqrU2bHJu3rAfrbB/q3bA7AlxMbC2B9PD9DtcqriNa
      bYgqCC/Cx2KyhLb1aLYzPC0o2DakEmU1924f68Tz26G6HwY+JEfYGaLQR7brJxBCEBz9Jxzp
      XWA91pRCjTWa1CqMsh0jCNlBoG4tvHkuIUya2FzFqSUon8gX7B5wStDWWlrXTlI//k1KO44Q
      7X/utvvRTlLWrpwkPP/XvF1c5jhj5LJ3wVYgLCGk10HUFMY4HpLneVihkEI5hiiJC02FxFqN
      lY4mvRYM03flrwjjJeLWvaQnv0tu5yO38YGsTmDxAnSPb8AP1hrk2lVkoQ+WzrtJPniYwtZ9
      2Csv03znL8lv2QftNbf76xTZNeZOl2I/PPyfu7pHwYU68XKDxnqAHdrOwEgvucFtN6fV3zF1
      /9OMsEy09QEO1FdQkz/EGz1CtXTDXMHxN4zKoaU7SjdCIWuwJsOgkCp0R61O0ITEiSUQHpn0
      mWqHG75PQvmIO8TegKv+9k0xv5ZtEtSy1rK6tt5BX1xxy1jIkjZeWkM22m5C6ATdrpEIn0Ym
      kVgyW3e6OMqHZhUqWxCVLSQ7foLmlfcoF4dR0eYKbDvVvHh2gYIPj+4c4PkDW7BJg2vHvoO2
      0MKD1OCHEmFSd/J5HWdDm3VCIAtSYrMYEzc7G4PFXnuDTF9hpnAPtb/5Q3ovfR09uw87ft9t
      KMxg/QL6zJ+S832efuIx+pcth8Jn+PZr77vJ3TFeETpzsIAfuqS+s5A8CdYDH0fFEEmNvDHo
      sMylYC9mwmNkZJTmhRPUGKC77z7KHw6BZt7FHv+/Yfwo4tCX3Wur17Cv/x/Qsw2x5ZALyXp3
      kR/egZrYR5K6PMNefQ3La5DvgiDnYFLlI/p2bfqKLTsO87ktGcVAImeuOCXqUWeU97HCoOH8
      Cez5v8GmdcShL4G1yDBybErp006dtkvk+x0IMiVLU9ZTTegriqYB1tKWwkny+QIvCOku/f1c
      5Q2Cd6drzC8tcq1nlfHdBxACFk58lzMnp8hQGC90zoS4vlup22jhIWWn5zhpuGbrzl62lNYd
      Hz4o8MATN9GWtfe+y9TcImFxF3t27dpUldbG0li9DtkKdosPhV5YPIedfgthqxiTbUB/adzG
      s4nD3juUZSs92jZAeQpfWNAZQrgEnrmTvDZzjW9Q4PmJ5xmtFomGtjnW54dGrhBRlQuEB3+G
      /PAwI8MAI+hXTpDpBCt8fM9DeQGYDgMTuEHlNRasDDFKIhHghUijQSrKhZDKwCOI0KNyqEo4
      ME40vOu2a6BrjMQrU/vgOJXRxwh6RtwuPnwY0b8Lhg5D1nLJb1AkfOAXCYOiK5h1bUX0Bohi
      DyJehdaSQ5U+NIRwmrS2vY49/U2Xd/S70/njWwBpC7IaYmg/bHscALtwBrE6h8z1ghBOck84
      yBTrkBahQJkOq9QrgDXkVIAgdlRZIeiKbuq9/7ghheCz2yTTq+8QHb9EK/oHBP1bmV+rYYRr
      vL5R+ZLS8VSMyrPeaOGZFl4UQFjGJC2kVIis5XZELwSrsdd+hBh9EISkcuhZrk4uUgv6ibUh
      f0vcWwg9fmJHAVVfwvM6p1XvDkTvdkRDQ+ZvkAi1yBFKhd+p+gprMMaQpRoDZELihSXXyWYy
      Ylnn27NdnDB1Pn3gMOV9n77r/fB0i8rgMHjpptdVmEcnMUanCFLnuuLn2GBkascBUlmCtQLp
      Oej0Bj4vgZ19EVHokdWWEH5IYfzQHa9BlKo0KgeoX3uR3Nxlgp4RhJ9HPPCrN9/UmIPr78Hw
      fYjSTThVVPcjn/kvsNPHsNNvg1+4o/rFxvvDIuz7vOMv5RxP6eNbANY1Ndvhw7RzAyyvtlh8
      5w3yhW4IuhHK+QlrC43YSdt5UqI8n8qNq+y09aksJp+tEZuIROVZrreIorvz/28MIQT7x4bZ
      pXdQm83j927l3LKmURglUB+A55MasDh+ictCc67ZGkliFZ7OIG5Lfd9ZAAAgAElEQVQ4dbQw
      hzAdklZ7DXvmP8LAXkTWIih3cc8BJwcefQgC1MZy3Rsm7K4yEpRcHh8UYfxxxOyblLxO/mE9
      EhkgTYZptZG+63ySJiMSBoOillo8bQiiACs91pdWeTqos3v3Qzw0+necjNX9iId/HSq3UBit
      QSgPz9MO2rReB5O9SYq7sUsIFeBZjUaiOyp4N56BtZbJ+TXmfvQths0Cw5/5zbuGpl33/yTR
      6H5ydzohwG2eur3BefrwsNfegrlTiLFJl3vdbQiJGN2MDH5kk7zpK1cZGN1Kc3WBi1emGJnY
      yWBv5UPvsywkAfQ/Sl+5wIX5Nt949xqzZwVfOVJmQPkI3QYEQoYoKTuSF+7/LsFyO6KSAs9k
      HRwc0CmTP/wafU88T65v6x2vc+M6sgSuvIbXv4uefT+JtZZca5m80kjhenCtFdyUmbIoIagU
      Iqx1UhxSCggLLhFVPohOFTQoIPZ/3rE1p15HRL1EY48T3eGZp9qyPHsVf/0qQ7t3IRc/cAmz
      Chzj0mRgUzAGL8xhU4kx7nqQHnghokMLyQs22R8lE4+xsyvgCY7D8W9jH/7HLly4wxDtVVeZ
      60C1Nm3BpR+QXv0RpjQC+R63CNJlh/t3JvD8/BID/f0bC2Ot6arj3ZG3UXnXFpZbGc3CsEPj
      xN2xKZUrkB87sGm+ZOsLqFwRFj7Ark6idjy1iW276e/Y/Rz0boee7bc/c52Rrs/jV6p39J77
      yCZ5b71ziqcGhlF+yNbRId46fpznnnlqk0tMaizXVhPAo6uk6C/63DvaxeLqXkQhwkoFWYrp
      IMpexwwtTWMamSEMQ4R0juCeFXh+BNLHUx5es8m3Jptcf+Ev+OlPf8rx3u92EqxOYs++4G7W
      8mVs7ToTB3+OdvEgH5y96iqZOOEphHR8HJOhlI+1qsMzAYLoJivxxq4kJFqFvDWToeqD3NdV
      QrzxrxHVfYiJxzZdRugJJhZfxp77Djb8Anb6R7A2Bf1PdYpLysXsonMdQREZ2I5komvKWW3F
      BNaJX6HcTm+BZmUb64P9DF9+H+L1m/z5O42ls9BccPTkQj/2nX+HPfdtvrKzH/HgU4jSAEy9
      CUnNiZmNub/ju9/9Ls8884z7TmtpJIbFRspIJcA3bbj+Lja5zi49gx6yFCeev7vxobXYlcug
      U0xpC0J5LL70b1l+4+v45T662ufxhKHw1d14g5XOrxg49zfYmZO0p4ZYefc7dN/3WXL+Tdjb
      LpzFnv8u67HP6sUT9D7280Q7HuavTkyjreXzh9yp95FN8naPOZO8nC945aU38brGACcsdcMk
      z5eCLEt56dwco5VxBks5HhzrZub6dUha2FSACsm0AW06vCDjNOG1cVzxMHREtxs62F7gFksu
      oqu6hchfJF6fI+zbi51808XLY5/YvPN0b0VsewK7Oom9+KIrYk2/gYy2QNZCJm2k8hFBCVeM
      syCMY4R2aBmmte5EovJlF2/GNazRWC+kvTrN1XoZ5W3loGwTzJ3EmvS2BSCEwCSGli5S6NlL
      VK7C4hns238I7XE3+VUHi01bbvKowE1mYVw4IgRWeC4H0SnoBOFF9AYplSsvMBXtYujwQ/h3
      Y4MC9O2FVnWDMSqKVRi5F3Hoy4jucUc/CAowfwY9cxrVvx+Rv6W7zRpEUme9HTi7WykY9WrQ
      mEMA+VzkZph3d/Fim9Sx3//n6NmTLBUPEu5/ntbkSXRjFbDUvBKl0T2IW+kcJsNOvwvL07Qu
      v03z0nFUrkjQN+rCRHCgwsIZqMcIQrxCF+1Uc2J6FWMsz+51ucRHWgBxq8FabY38yipNEu57
      6BO8884pRx25pSNMCMEr5+f4wbk59gyW+NzBEfqKAc8Mw6Vzl5leryCURGvb6YcF064hBY4q
      rTw8z78jsY2szad7FnldHOL7rVE+ndQd9RYLg/cgbkE/hAqwUbejQw/egyj1IaSHvfQSZDGy
      U412b3aiO8ZoGmmClMLpUdoON8bSWYghWRKTGY/pdoUnhwRBTz9h5MHR34K7GH73HP0K8+0G
      9UvvkHv4pxAL79/k3RgNNnHXkDZvEuusW4hKQKWju4kQrtMqixFS0RdBo1lhSXdTEEV6deIa
      7wsDm1ojbVwjvfQGon8XrdM/pDn5Pv1P/iJy9/MOTxfCyVdue4bkwpu0Tr2E6D5C5RNfhizG
      Th+jPXcJVi9R3v0ZevLb6YoU+H3YwrAL5/r3uBMGnAiyTjvh0C3P0Y+guhe7cg0bN0BIBj/3
      Ow6psRakwu8aBGtY+MEfo8IC3Q9+AfHgP0S0XqGw/2EWXv9LFr//h0SiTungp6FvD+x4BrN+
      HTV9mnJ1B7mhnSA9fu3R7VjLhjrIR1oASatBV7WftN0iX/KZm1/k3gceuKMU988cGWWwEvFo
      Xxt76i9h+1OM7znI6YuTrC+vuVjf6E553UJr1WG6QXGTxuOHE13bWmVw+W/weqAyMQ5pG7Hr
      087z6g6xb1YZpx77FEY+QTC4yyVGhTHExe85FCiuuZ02LIF0E0ZqR5MAgYoqpNqQZMbBpUEB
      KUOE1rRPfo9SMaDnp/4b92V9O+9436zRZI0VTHONZHUGnX0Of+8XoDwLJyc7hLPMNbsEBVfz
      tWajsn3DkHtj+NHNRRKWGTn0NMXYUsmHsHwOFk9D754N6A9An/kW6bf+eyhWaVQfo72ySLq+
      RG7wlgZ6IRDCwx74WZorbUo9Y5g0Jr7wKuniFeLYQNcIJd9nV7+r4rZXZuB7/xzfD5BH/ymi
      vQT9+zGTx2D+NPLob7iTZmNI6t33Yg9uoW/no3jlfoS6fVpmtWWaV95DhnkqR34CVRyAsIzK
      VyhMHCGeOU0QSqjNQO8uhB/h7ftJPK9EOPUj7Ik/Qxz+eYa7NlNTPtICKPUMsLfnZnFloDpy
      1/eO9RYY6y1g3vkT7OQbiFIVsfUTCOUh0lZn0rmuJZu0sGkbIZ1QVjvJaCQZOd95XUmBo0bo
      BLyQwvb7ea7aR1fVYl/6PegZQ3ziN26vBFvL8vUZFloFhq6do3eLawqfTMs0rVOEtkKhUXhJ
      C2Fd+2E+cKGGAJCSVpw5ZWbl+malUvhpk/LiMSr+IHbuJKJ6d3+w+qnvk5z+a3qqWwi6dqFM
      jVSVWT3/AiYtukTbGjAp1suhm+uO616o4CgQaoMyDYDwEL6TEbFnv0W+96cpdHcmWbHqKqkf
      wsfV6P14o0ecmtxjP09KQDgwTnv2PCaNifq3wNJFqO4jHN7L4M/+DwilSM5+n/b0GZpRjsIT
      v45eX0B2mJ5xZji1BP7gZ9nVep/1d1/mlBjm9MVFnjn/NRYzj70HG9yqkqjbNVaPfwuMobD/
      mTtOfgBV7GbwM/8M4fkdsa7O67kCwz/9u64anjU6p5yF9SnwC+R2PYldPOUq53cYH7s4rtjx
      NJSqTiSpM4xO0VagOhwcrL6JAOGOfKszko5RXSBBtNacfHekyA3voidnYPkStlSlmRtEJNo1
      rN8yLHC9cg/rB3rYOnFzF5pebaOtU0JD+hgkRicoHWPiNsLPOUZiZ+QDz0mwJE20TpFRCZul
      5KIcIsyRLF4hvMsCsCYjXDhOIGuoQhGvMgR+gWRphsbV92kzSqgybHMJURrCRH3ESzN4xW70
      6lXm19oMT+wGIVlttMmCCsWcR04aWL6AlXWn+X9jl811wciDtz+H3u0EX/lj580QdVNrpbx3
      cY7CC/8COXuK8Uc+RWRWEIe/jBg7ivB8bGsF7+Lfki9G5J79Xbx4AXXtJcgFsO9zTp+/1EVw
      +KfRrSM0/vZfcVz3MdktCfNPc6zZxSeuwC/ewoxWUYneR76EtQYV3V6s27heIQj774zyCeW5
      hXMj/l+fhslXYf4Mtmsb4rH/0rVU3gGJ+vgXQGlwox3NZAkmaaNVDhdkOPtLI0L8nN8pvjh7
      nIpKaFkfbTyEkp2+XInw81Acxl74GpSHSD7xz/jb00twZp7P7K+Su4UOLIBqd4FyYTuFys1G
      lftGS0wfd5RjYy3KJKgwghRIU4S/uanlBt5tEou0FoFEFSqUn/kXnF0Dk2mqf/X79Bx6mvzW
      A5t+F2tdY3n3KGL/FzBeATyf/Gg/h7/02zzYM0z85h+RHv8ewQMPs7a0TCtdZOih++Hd1/l+
      luPZQ3mS1Vmu1EOWRu7lnnvuocvX2Cs/cES2/jtzkG57Fl7oinjAufkGpxcTtvcfYqi9DIP3
      gGhA7y1hXFhCeAEeKaGnobIHVo+4FkNAmpRdXSCDLrAHGfzc7/Cr+X6WUo+u3CHCU7Pct3Wz
      YLAQksL2DzXr3GVYk8HsCbTKs/j2C6xfWGC2dYKue59Dtxvkt+xGeCGt+SlUYvC1dZKPucpd
      UaiPiQ5tsLVZKA5sFEOsNSx87w9pTS2S+r20VIFC6ARlrRAbqAuAkKpTeXUKAUJKZKGrE6NK
      6N2JyP8sFAdQXkBP4XazaQBWrjAw8w5ixzMImWNuvc3kSovqzKvQXMVGJaxOEcY4K6CkATdo
      wtZ04nJHAW6nGryIvFcA6eRScn1bKYgW7WuniGfOUgtz5KrbkeHNuFMoHx74ZdAZxsD1//j7
      yCBH9dP/xFEFrHGCsNEgwdAhQi6gG2t4vWPIrffiLV6keeIFGrEmqtXYPXGYSk6B8LBbHiFb
      X8SXN+6xpXH+TbL6MpVDz941vLD1efb2BEREjE18nnz+K3jFnpt6o0Zjr7zi8qVdn4aLMbTW
      sEuXEQe+iAjLWJ2x+P0/Il2bZ/AnfguVLxMN7yICbmQVX3142x2//+89li5h3/6/yESE12gj
      a2vEs0vML17DtlYZGupCVIaZv3gZrzzA8Gd/ExEU7g7B8jEtADvzDvb4v4WecTjwc4jKCFiL
      yuooP3BcGlyIIk2M1K2NWM5a1wpJUECbFGGd2nQx9FC3UITF+KOAcyJ8YqfbZT6MGtnLL8PU
      265DauvDnL5e48pyC7O46haWTlBB4JJfIRBWIzo69KTNzqcIhPQ6TFW3GG/0MBhr2dEXQfdh
      at7PsPTan2K1ZvD5f7rpOoSfBx9sY5VkZYbmlfdQxR4GPvkr2LRFrnGNYHgLstJHbss+uu77
      rEtyRw4g1v4U//Bu9FvfIr9jkN59RzeAgeUffYPaB69SffbXyY8fxGYJq8e/RVZfIT9xhKD7
      dp6MrS9gX/o9iuVhBtYFy9PnyP30725MfmstSyurhGd/QN62WJYjNFUPZuE8TL8NlRFH/8Bi
      khYmadO+fgGhPKKt99wx7Pj/PCojsPUhwv7dePUF8vF7DD39GbIkpXXpR6hsiv+3vTePjuM8
      zz1/X1VXVe/dWBo7CIAACe47KUqkdkqWJcuyo0iOsziy5SXJzZ7Y4xufe8+ce85Mzs0kuWeS
      c2acm9zEScZJPLmOF9myLWunFlISJYqkKIIbQILY10bvS9U3f3yNBhporAQp3et5zoGO0Kyu
      LlTX+y3v+z7PIyw3gU23YVQ0IryLC6TBzZoBvJVgeJBXjoFjI+74Q0R6kqrWNqxkHHfewiwo
      MYhsTmWDDJcqLtmO8n51JPl8Hkfm0ATk8jbC4ysogWVLPs5JqNqE5i9VZBMb71cV1swEdmyY
      rYEs1YaB+8pV0CtUbcGxVZVXaOAJo6MqpI6dL4gt6Wo9Otvt3LGx8zlO9wyyrq6aTC5PpG0X
      1oVj5detTh558Tl0d4j6h3+f0Zf+Eauqmdj7R7HTCXztRxh7/r+hvfEUkXuenBm5hQsCdbjb
      9tPYtn/eac2qZsyKenR/Ia/vMqk89Cns5BRGqLw8C6ZHPcShJixTJz3UM5NLBxJZhzPnu3Hn
      WtjVWkXqnZfITUlyVXcyeeIZjO4uqup3IpwcNUe+iJ2OM/SjvyCfiNL46NcwwrXlP3cVEKYP
      sfuXAdBTE4jnn8cYOI659wl87XuR6SnQDarmKk8sgpsSAKKilezd/5HJt7+DOzOFLz6B7gky
      5m4hxWXAQZM2Mq/afoVW0IPMJtDyWVyaB5dpYNlSNZ05NiKTJJ9Lgcvk6pUequsa0TWBnYoz
      8P0/A6Dhk18taUUW/lqo24ZMjtP99H9FxEfZ8NBvMkBBgWGabaWbgAOZuOIdoOHkcmBLRD6L
      prtU6lGoWQCpZEsc6fDUu32c7hvnVw+uZ8cnv1q2BcCZGiT1wl8gfFV4Hv86jY/9R5xsmv5v
      /2842STWR36dnLceI58j5zgYc4W4ps8jJePJPF5DmWAEttxBYPNh1T0ZvYoINOBtXrg3Jjve
      T3bsGr6Dvw66gXn5HWQ2RfT0c1Qf/jQAHkOjUsTR7Rh668eoa9qL61t/x8ibT2Nbdei2kngk
      G0drvRsRrCK46RD22CVcnqW7dOVkLzLah2jeX3apIqVDdqxPXWfbbjSzUO2dblzMZ9V3AMUG
      N4Dk1dNMnniaylsfxQjXq+yRyySbd4imbSq8a1AHWDaEoC+hcc27n9Dlf6XR9SPM/Y/zw9E6
      Mrmr+GQaJz6OtHO4PH4E6iF3HAc7b2NoCTQjBG6fmiWcHPl4DiEEWd3N6bEc6+KKBC1cBlZN
      q1rSzK1ACg3q9zI0GeNvxqNsdFXxq+F6ah/4DfSnf4LIxNU6XyrLTmzViy9QEu/SZSrdfaFa
      pRGgZWLqRnqDbG+tJ69NMBpLUeEz6R5PM5HMsaspVNoOrVlMUYEmKnELnXQe8skYVQc+hiMM
      3HUbqP/kVxlJC84MpmmrtKjwzm8qSmQdLo4qf4StdQX7UaHDyFmltSN0CC6cmh579Vuk+95H
      f/gP8DR24gpWY1Y1YlWvIzNyhVjXa4R33s+2vQdxsrtx+RT5RuYy5GPj1D3021g1bTB2TvUo
      6YrXHWxqAXcKYtfA2rToo5H80X/C7j+N9xf/Blf9/MxZsucU1/75ayA0Gh/7D/g7VEZLuIOI
      9Xcg9t+HKKN9mh68RGboEsmeUyR7/gEzso7IPZ+jbyrLUCxHm1wDefSVIOJzYddU4VvXjq9j
      H+fHUgTcFo6uo9koJpEwVGYir9bbtuHDESYumcFOx8lrFi7TwuWyMEK1SGljOpLGukiR3aUZ
      FpF7VSttufWnlJJMzmYqvBG7OYxuWmi2o461/MVinGPnlECW4UbLpxUBw/IgXUoRDrU4mj4r
      IHDZabZku9hz22ZcPi/fPz1INJ2jrdpL5Sz2mStQTdVj/xlhuLE1g2dOXiF5+XU+VjlA4K7f
      VswrbwjyWZz0CPZbTyPX70Y07QMpSV09g9P7BmbLPmr8Gwm6dfKFFhK3oStZds1V9MFaCMGt
      d6qHvlopL5jV62h4VD1sY0f/idjZlzArGghuvRNtus9GaPja99Fwy27MqiYVdNMeCNOzlL9B
      EeQzSRg8jajdumAzXD7cQX5qEule4FqdPEa4DrOyCXfdnMKi4SUz2oedjuNt2VFiEhLe8yDe
      ddvQPQESl95C5nMgodqn5CZDa1EJXgkCMkZA64VbP857I1m+9eZlDrRWU+0zSEQddMsNmhI1
      lbqBk02j2Vl0w0I4Dlo2g2En0WyJ0JWdkuMINB22raspSBgqLLTxktJBnvwm4egEj+76RWrD
      Pug/AbGxIpuIQmelHRsjPXAeT+NmtGCEgYEB6oNJkskkU1kXoYAPb6gKdJW7FppG4uKb9B37
      DoGNt9J4+HEOtlUQz9iE57SECiEU8QNV4Y6EfIynhoh3HcO963HMKvVA1gUMKqPDuCZOIccC
      iKZ92Kkpxn70z7h7foy5/iDrv/BvOFLy4vlRRgev8lBzDl/bgZk6wCLwrd+Db/2Mj25xBgFC
      u+7HqKifl6IUQqBZXqzq5tkvltzjXCKGK9wBr/2Fqqzf9RWEr/weJHDkd3Gy6ZI6y2x42/aw
      7jP/B7p3firTyWUYeenvscvsNzSXibuuA1BLYWGYCE0jYGkEZtWHbl4dYLIHoj3gDmE7YXSh
      JBOTmiK+C2kUiO2KjyizqgdGMy2E5kETulIPKJgiOFIylc4pASlnRqPGTsUQhoW2UAOWY+OX
      MW5pNLG8XhiwsUSWX3js0WJbMIDM58iM9mJFmnFyGZ5/5mmOrMtwOdtB71iGdmucpkMPKoPv
      AiZG+vlmegdWt8nv78tQFyy/GXNySoVNd/vQNeUcPzZQS7K7VdVBsinVcGd5MRt3gP8PoEAE
      0dx+/Hs/CX4Ta9sD6lodm4GxKGPRFMnUqyTefw2Xv5KKw7+0YA/+XEgpyRV8h4UQaKaHZPfb
      OOk4Ffs/XvY9dipGsucknnXbcflUsjPdf57BH/wXfG17iGy4C9LRheUZUTP27E13UXeoUJ8Q
      mobLv8DsIG0Cmw7jZBK4AgsYEgJa33Hk0HvIfZ8r2SfAzQyAqo2qyzHQyLaQQUPYiyPhzYvM
      tP3mUmpzmUsq9p3lZToPL3QDpGqDRr2Koam2CS69gKz9Bez4BAPf/zOsunYi93xu3sZRCA32
      /ArCzuIv9AlJqSN7joNXtWaQmYKJy4iK9bjr1pNPTDL41J+TungFxwnQ4G/AMzlAlZaA1AM4
      ZoDeiQx+S8cfrmXDtltw6RqmUT4ApZ1n5Lm/JTc1Qt3HfheXN4QQgspbHyO850E0083wM1/H
      SU1Re9cvoVetL7qZgKqJhPc9DPseLr429e4zbBi4SmfbfgIVdxP7yZ+iZ0aQW25FRBaQZ5+D
      oXiOvmiWtkqLSq/ScE33X0Da9oIBEOt6jYlj/52KxmZCHbsRnR/F5a/ErG7BqutAtN2xrM+e
      uTkSBk8qauO624sMs2k42RQTb3wPT/MWrJpWps68SFqsp+a+L6lMmZ1T6WorWDorjXSRmehD
      JCZxf2ABoJsQbAbdQENVHruG4xipnLqIfErt6HWXajsrEE5sCbbjqJHJNTOiioKILo6juihB
      CVU5uWJWphxmVz+BAs9VK/JcmeqDyW5FALGCICX5+AS2BBHZgDvYQF12ErHpUQg1kcw6DMRy
      +DI22+t9fOYOlXURAMNnID2pWhFmd2LO7iidvgyXgeYK4+QySEfiGX4TXh7AvvU3EdUdpaNk
      8USO6odybOoSl4jU3oXV0Inr4KNw7S3V6ZqegsHT8zpj55+r9FejooHGx/4DujeEk8sw+vI/
      IjQXVbf/YvEYb+tO8hP9eGNnkJdegKZ9uIJ1NPzcv1/4c5bCnPsyG5nhHqbOPE92YoCae59k
      JgMncTJJkq/+NS49j7XvMyVLLmfPE5zriyJTIbbZTolw8nUywkqv1LEdNF2bn7Kzc3DtdfV3
      Nd2K0A1qAiajCZO0LhRnw/CpAlRRT1MxwTJZG1tKNEPDNccJUWg6eMLQcQ/CsXFNXqDhwN2I
      1juW5ghLiUyMQmU74s4vz0yN4Vb18BeWHC5/BVZ1I9pIEsdXjWvjA9BxBJEcgfEL+Co6aK9y
      4zHmuDQi1TGZqVmpVRXYNfd+HunkFeNpDjTDovYjv4a82IHTe4KhZ/4as2ELkXs+R3bsGvFz
      r5Ksy+PZfC9i4jJMXCbcuY/A5tvR3V7E0Cn0tttg0wOqQnv+J8hzP0SkH4BNDy14O2oDBpVe
      V7HLVAiBWaVII/lklHT/eRVQs2ouZriO6rueQI5fgnRUpZlL9gOyeK5lQQio311QwZgv7GXV
      dVB952cwIy3o3iDBbfdQc+QImsskl4ySGLqKJxTCmvNezfIRDCnVb33OtVxXAMRGrvHdH7zI
      w596nNjARS72DpGVJvfffZi5XQgyHSV59jnyQ8NYuz9J3pbcs7Gal3tdTGVQlc6STY46gekS
      5G1V1ZWOU2h/mOGdynyWfGwMWV2lcjNu36IEjJnrmUQe/TOlNHfHHxazFNLOwuQ18FQW249D
      uz6Ka0SiN+xS1Ec7CxOXVYtysJmIX81MMp9BnvgG8uoxtO2PQcc9aoSe05ZdzGUvAM30wJaH
      kesOIb//Z4AgcektRp7/W+S1Puxnf4okgajbplaImq7W4IkRmLyMyMZgnaqM07BTuVA27F70
      M4VQfgjl4PKGqH/kKwgh5getEIiqjpnf8xkQGhLB2GvfIh+foObeJ0s6OBf/413k4hOkeo/j
      69iPbnlVD1A2gWYFVZ1j1n2aPq8RjFDx0S+jGUo9QqajSM3EyWfRPUHaq8t//nUFgL+6kb27
      diCA5vYtZDMZ+mIGcxlh6AZOdJj8haPYeZPudR/hWM8Em9MFup6cKSap/UCh1Vc66FKiu3Sk
      ncdOTanOTHehwOLYOKkYk+/8iPq2TcgmpfVSLi88jeKsZXigqkM9nLN7ZHpeQXb9GJFNQKfa
      ZHpbdyLC7zJ69i3Cu6oxQjVKex9ZOlLlMzDcBSPnkaPnEZseLDuSLRcuf6XKYLhMcpODmJFW
      LK0Zd0sOUdGmGtXCLTMK1J5KqNujOkALEIF6xK5Pr+rzZXIM2fUTRMutGJVthRcVS01O9SuF
      htkjaj4Nva8q84qaXaQHLmAnojiZ5PIDAJg88TTxrlcRuovApkNw/hlkz6uw7wnEAhwLUDMS
      gBy7iHzr75gcGSeWs6h/5CuYlWUEgrnOANA0TSkhA5fPvslALsQdt2wEIUoYYXY6QSJnYO37
      NOa+X8KwU3R6puioruENUA9/ehLQwBNievS3k1FwbHSXXtz8ll6AjjC9ZNft5qmjr3PpSg9P
      fvJhgsGFNqA5xl75F3LRYWru/zX0A5+ff1DDHlUBbthV8nJurI/4WDdmRQOhnfeVTTMKdxDu
      /RoiMVLiRLgUpn0GyjnLT1eyrUgLjY/+Ee8/+yxGgY8LlAaYps+zQ70uDJ+Dq68jNQ1RCAAp
      HWT/28iXnoe7vzqH3AJM64QaFnUP/S4yn100Q1MOgc2HVS9RU6GrVYjiwLg8COxMiviF4yQc
      PwtuKlgDk7y+0SEmT0vCHrCjg7x9xmb3ts0l675E99uMnX6FwObbqQ7UEeh5gdusKXCpNaYU
      Ql2jy1Wqz+8yi5s8oRvgDZN1wJzNDjO9jHuaeKvrFP1DccbGRwgEZnb6s69j8u2nGf7pX2FG
      WnHS8ZmZpAAppeIq7Hic0XiWUN5WKtCAu6GT6g2H8bbNX7iSGmYAACAASURBVEpIJ69MqUOq
      AQvv8r9wx5FcGEmRsyWbaz1lg2A5kHaeyXd+hGa4CW6/d55z/KrQsFtlzmZnkoSGo3uIDZ/F
      HR3Hmh0ALrdaegkNppdlq4C7rh133SyFhw33K07CAuoWcyEq16Pf/e/xxCUhmcLwL5yGvW6T
      vPsa24q/b1ngOG/zVrJb7yLQeat6oWqjGvHNAIl4nPGuNyA5ihZuQrrD2IlJVWV0mUSjCUJB
      PzgO8akpBqdSNPh1vJ6ZKTVkCW7f3sm/ZkzeGnURiOTpj2Zpq3ITsGbxAXQDX8cBqg5/umyT
      Vj46xPCzf0O0bi8vjZisM5N89D7FUtImLuCLjSFc85vQuPYW8p1vwvq7ENsfXfF9FEgygxdI
      225cTZ3L3jTK+DAMvw9N+8hn0kydeQHNsPB1HFDLR194+RvQctdleqHl1tLXhCCnBxhPhwhe
      OYPVOId7sMjyc9XXoengLl8oK/8GgRaIUNXSBqMXYKofqjvKHnpT0qAufyXVs9JnBJvUD/Dz
      P/8oQ/9yHHH+HcIf/yUm+6+QvHyZmvsfx7d+T4kEx/Pnhvh/Xz3FJzbkuO3AoRK5v77JJFvG
      Je01QRJZm2TOIZN3SgIgtOsjBDYdRvOUH0ny8QmyY9cwPREqchUEE1dxsocUOSYVhYlYwaJn
      zro+2ACVrYiq+bo0S0HTBK1GlL53vkHUF8L3818r6WGa3gsh5mfX5IVn4OpxhMuNq3k/kbs/
      i3CZTJ1+lljX69Te/yVFBl9jmFVNVO/fgWeBRjsZvYa89AKi/R7V+v4BQWz/eZXWrmxd8Jib
      VgdQRPBJemMO2ZErbOjcjO5WZIXIJ/9XnMxXMMK1BCvP4/JVlP3ifJZOXcDAY9rz1oONYS+/
      e69qvHKkpNpn4DXmp00XKrkDaG4fgc2HsXY+xKaJPNWmXaxCinW3IG4/XDaXLsLrELf/wYrv
      yTSsUA2VO+/FFayeV7nNjl5h9MV/ILj9XrUhnP25rYeRLjdEOhFCK4pLpQfOqzrKIkSQ64Fm
      euZdyzRkJga9b6gfX0T18H9AEMGG8u44s3DTAiB68hmGTr3Ey8ZuZCZBtSWp3qSWE7ongG5a
      MPA2puEnnk2RHrhQ0qcCsL+1ii11t+Ez5KJT7bTT5Eox8eb3SV05RbZmC2l3O6OX3iA4fo7A
      1jtV+nOhtb10oMBgzk0OIoTAFapd9vJD6C4qZlV2YWbkz8fGyE4MkB3tnf++ilal3zMH4T0P
      Etx6F1qZOsNaQ0pJ7OxL5CaHqNh1BI5/Xbk97vwU1JfXA/0wYckAiMViSCl5//332bNnjzJl
      XgWEYeJ2CXZ3NEE+S6h5ZoRPZm0u9w2yLt5LfzTPRNd7tEyNzAsALZ8ikOoHV2NpwcWxGbl8
      hqy3lob62vL6QWWQsx3i6Rxhr1KfCO04ghGqJdzaiS8eY+z8D5jyV+BfYLQD1ZDVdfYt/Hac
      usogg0e/Q94M0PLI75UtdC0Xkyd+QLLnXWru/zUaHv2aSr0uE0LTlY9vakp1ld5ASDvP1JkX
      ycdGCbTvwaWbqjjZfAtCN8jbainqNfXr2o/cKCwZACdPnmRycpKxsTFqampoa2tb6i1lEdx6
      N/6OA6xz++fdiMujCd4clAy7N9KvaWSsKSJjZ8jHFbNL2nmV8pzoRo51qcpy9UyfeXa8n66z
      75ENTBKqrC6KHi2FH57u47XLo3zxcAcdNQE8jZvwNKrzBk0Pxr2fUwpwZbi00w1444kUr/XE
      CWf6ebD6HVLN+xi2WqmwDRbRZFsS2dGrZMf7cTIJrMjKUpvSzjP87F+Tmxyi/uN/iKtMFiQz
      3E301HOEdz+AUVEP05KQK4TQXUTufoJ8MopR0w5Vv6n2K4Wl3BtXJukZT3KkxU3QnsSqWb82
      Gao1wpJPSmNjI0NDQ9x2221UVa0snzsbQtPmGUVMo6XSS3JqlPVXniLi3UiqzoM7UYHQdJxM
      givf/y/YnffR1NJG9twrxN87ReV9v0FvLoDtSNor6mhrayMTaFje0sexYbKHWCzNVFqZ35W7
      Xu8Ckt4yn0We/CY4eSp2/Qo7t27HPyow6zsJBraRTGnouo4c6YLEKGLdwRWvxyN3f1Y9VOH5
      PN7lQNd1bGOWpv8cJLpPkrj4Bi5/JenBi1jVzVQe+tSKObxCCKyaVoqdSlppwSuRdZhI2Qwd
      /RcSw6eof+TLN2RjvmxkC7IxIUVVXTIAUqkUtbW1NDc3Y1nlXc9XhcQwTF6ByBYCbh/7azXk
      hQEqK6vg1l8Bx0YzPUg7z1jeYiqax8q7MTKC1MQI+WSMpPRhOxJH02nafuvSn1n8o8Zh+BT3
      19ax1QNtw88iaz+2aAV5Nuz4KHbvSQx/BZrMsa+jATrUZqtOSqpDEpeQyDPfhvgwVLaValsu
      A5rlxXQZykndU1k2gJSHmVKqmD2rilyc6pZmpHcPthXgO+/0EvYa3LlxJvUb2nEvZmUDRqiG
      2NmXp08Ia7xKaany4rUMqgLbkK5ciUPjB4Lxi6rZsXA/lwyAYDDIyZMnGRoa4iMf+QiBwPKK
      ESWQDrL/JCARDbtVoWTqmqLM+WvVBjPcAnf9L0rDpZAGlI6NQLJx937GQxuo9roY2f1poq0P
      0VBdxyZN6QiZKy0euSugciM17jCRa9+A5Dh0HFoWiQRg5OV/IjMQpf7hJ7HmFGeKsoVSQudH
      ITZU3iB6ORjrgvELULsTKuZLisTPvUL01HNU3/WruGtnLU2FhjDcCHeAsWSW492jBD0Gt62f
      efh0TxD/BtU60vDoH6GZbuXEaXhXUHFdGu1VHprDFsma2zgqOtkY09myPEOfG4Nwm3r4C0p5
      SwZAJpOhv78ft9tNNptd6vCykJkY8sy/AVI5obhDyHAr8tKLCE8tIrRONVUFSqf72LlXSZx9
      DiuynZa6NjBCpKWLnBUkZzsEopfUCFi9eWVLDN0FNVtVG8eeX4FMfEHGUjl4W3eB0NEr56/N
      M3mbsUSO2oCFvkQD2tIfFFEFQ3f53UR2YpD81EhBSXkWzEDBpNtFFYInbmvHa+qYLo1kmfMY
      oRplRjfWBXW7ijUaKaXSSYpeVc2Bs5ShpXSQtq1U2TJRGDsPlR3zaJi6JvBoOmPxLFPpPNFU
      eZOLtYS086QHL2JWNs5fdrtD4J4RK1syAPr6+ti0aRPxeJx4PL6qfYCwAmo0RCKsAFnbYWRs
      ivDEEB7eRLTcVvZ9muXFwYCKmRu7vspN1nZwazZEr6gAqFgPmrfsOWbDyWeJvfcSVk0b7voO
      FXThxU01ZkOOXYKJKwQ6D5IevMTY0f+HyD1PlnR3vnV1kvPDCe7sqGJ99RJDnWMjU+OIBZY4
      +GtLZyUnDyNdyMwBhBWk8sAnCGw6pPYJ8SFlZhFuVTNsYTmnAZvqllFF1QseZLNM7DKDF5l4
      /q+ozF/FWH+rkhgsIPbeS0y99xKRez6LpWUUCd/0L8hDbgy7+fj2OvzWjalNzEby6mmGf/J/
      49twkJp7P7fosUsGwL59+xgdHaW7u5uamlVO5UJDtM6kEseTWXrzlWQ3P0Fr3cLEbd/6PQR3
      DWN0Him2K0+PKEgNGvYX6HMelZWxc4pQM9eJsIDMcA/jr/8r7vqN1H38D8iOXEG4TIyK+mWl
      6OT7T8HYJaS3muTEMON5g3AuizUrAJrCHuIZu4QEv+D5rrymzrnlkZL7s+DxU/3I/ndgYCe0
      HkYIMNN9EM2o9uxsXEmau5WC9XAsQyRgLW+JGGqBQENJ02E+MUk2EScXjmA2lCYEcpOD5GMj
      Sri3qVMtnbxzZlEplT+CZiCEIFxG2aL0cKm6cSe6ETs+pchLq4BZ2YinaSveloUFiqexZAB0
      dXVx/PhxamtrGR0dpbl5+V2OcyGlZCyRx3EkDSGTat9G5XK+AITQlGpcucyEEGq0kRJyCSZP
      PA3vfZvgpkNoB784zyQbVEdleO/HcNd3kI+PM/jD/xPN7afx0T9CLKNdV2x8AMYvI2o2MbQn
      wnuDcfxxjc5ZA31LpZcav0k6vzArrQjTC6avhIu86OcHG6B2m/oB5dwydU1RSSObkclxVYGt
      XE9XJsKbVyfZ1Rhid/MyagFCzCsu+tbvxaxsxAjVzEsFVxx8lMDWu1RPldCKy6bZkAPvKt+0
      rZ9Q3IVlQF49phoL2+8p9S5bAYxQDXUf+53555YOiUtvKSXqgrzKkgHgdrtJpVJcuHCBu+66
      q8xJl8/6ydmSK5MZBLCt3rvyzSsFOqGTV7ahQigHwf63YPg9mBpETg2AnS/7l2mGVeS3OrkM
      3rbd6J7APP2giWSW757sZU9zJTubZ9bfomYT1Kg6QVMkzFReJ2A4/MN3v8f6pgYO79uPIyX/
      eKyb3okkv3vvJqr8C49iomG3MtXTrYIcyxLLA82FqNuG8BS6LN1haDyolh5WADJxZQNavZGa
      HV8k4jOpC64+cyc0bcE+es1lYlbUl/23IlLjioyTmlje54HakyXHVpw1Ww7sVJzx1/872Hnc
      DarDdckA8Pv9bNmyhf3791NZWbpcSUZHOXr0LQ4duReZmuCNN09z6Mi9uBd4rnVNMByNowmB
      3jC/FTkfG0X3BMvzX6fR9SNk/7tw4PMqu6IZoJuEDj6OfdsT6P4KxREePTdDbywDzbCI3PWZ
      sv/WN5Hk3WuTCERJAMxGU9hDU9jDtb5eTly4yuhklMP79iNQ7i3RVG7p1mahqYd/8B1FJpnD
      HV4SQitSNwEItygSTmU7I7EUp66N0hS2qA+tnpRzPRBtd0LNluUnGKYTIYE6EokE58+fX/Tw
      3t5e3nnnnQX/3bIstmyZ6VHW3X6qWtaj9R5HTw0DywiA2tpa+vv7+ZM/+RP27dvHI488gmmq
      L8lluqmsrCRvO7jdfiosk5wEqzArzOUMx9I5Xrs0hIbk1hY/Qd9MEGRHrzL41J/jbd1J5J45
      GxepJBERuuLxpsbVtA9qGdR6N5o241DI4DtKhkW3oGLllevOuiCfP9ROU8XCS5NkJk/3WJz2
      SD1feuR+qioKepxC8OieZmxHYhnL2fDJosURjq30tlYIKSVcfkFJDO54HOGyiF4aYTKZYzK5
      uszd9cAp9HK56zegBVZXyEulUksGgNfrXfSY6cF7GkLT8NY0I6cuqHvOMrNAY2NjfPWrXyWR
      SJBMJosBYHr8+ArFMbfHi2XOnM62baQsGFwXEHQbPLStAfH+9/G+8RPkrb9eJKNrhhvdG0b3
      lRlxY/1K7q9mK2LnL8CmBxHegveWEEX7ziLC7erh9y8xRS8AQ9fY1rg4meMnZwd46cIwj+9d
      x20bS6VHXLqGa7kPsuaCpltVgK9A1LUE0lFeubFB2HAEAvXc0lZNeyRA9SJLsBuF6OnnmXzz
      e1Qc+AThPQ+u6hzV1dV86lOfWuMrQ8m7N+4t1maWDIC2tjZaW1sBCIdLCRajfd2cu9jFSDpP
      W72fc5e7iXrDHNyxqYQSOQ1NE9zSVo0cSsPUOMQHi0QHV6iGhkf/fXkhp3y68JMpyJosMaW6
      g+BeiJ4zAykluYkB7HQcd/0GRIGLLLMpRG4KYYUWfCi31IcYiWdorSpYlBYkSoRurbyQtIJs
      h7TzRePBIoRGzGomN56k0gorcQBNUBv8YJY+nsZNZIYuF9fZHzikLFBuJbgrSupNSwbA6dOn
      OXHiBKZp8vDDDxMMzuSUqxvb+LlPzSwx1q1f+g8WQiA23gcDJ5SbyezXjQW+sIo25XJo+khk
      8hy9OMyW+hDrKq+vpCjtHEM/+kuSV8+w7lf/FE9DJ8nLbxN/+7tUtqzDaNxZtBdyMknyiQlc
      hRmqsy5I5+z8es+rShtn9y+WqiSsIfKJSSbf+RHpbW14Gmfda+kQ77tEdnyEYHwCs3KVM8ka
      wV3XTt2Dv/WBXkMJ7Cz0vaFm2da7Swa1JQMgHo+zdetWamtr8XjW6MZWrEeafjD8qhq71Igp
      tKK0yIXhSX783gCDU2meuLW0PSCeyXN5JEZnbXBZ62+hu3D5K3FSMVJXz+Bp6MRORckmprA1
      L0ZAZSKcbIr4+WMMTL1B/SNfxuVVefZYxibkdinl53RU6WAuYMa2GshsXBnVRToRuoUcvYjM
      JHDS8Tl/iEbk3i9gJ6OFzs5Z55BSGQ4a7g9lO/JNgW6oNK205yUZlgyAjo4Ozp07x5UrV4hE
      IqvmA5RCg2snkNdOwN7PICoXts6Rjk1ucghXqAYhBBtrgzy4rYHNZaqbz7zXz8sXR9S6vH3p
      zIMQGpF7Poe7cXOxLyaw5U48TVtxBatn0pKajmZ5MQJ+tMISrS+aZTCWo63SojZgQucDiOYD
      iAV8gVcDef6ncOl5xI7HkA270bu+R6h9B0ZFHdLOF3PzQgjl/lLGASbZ/Q7jx75NxS2fxN++
      b82u7X8oCA1qytM3F83T9fT00NPTQ3d3N93d3eRyq+vjkHaOsVe/xdir30LaOWT/CZw3/w45
      fHaW9VB55PpOM/X3nyHbdwZQDo33b6knmZM8e26EVDqlCi7pKNsaw2xvCNNWvXwiiitQRcW+
      jxUdVISmY4RrS5SINZeJr2M/tQ/8u6LfV4XXRYVHL3KOheZSG6tZRbve8QRff+kC54emln09
      syHqtkH9DqhqVy6HTftJRyfo/7c/ZuLED5Z1Djsdx07HcVKxVV3DSuDkMoy88A0m3vxeiWDx
      hxmLzgCtra20trZy4MB8m82VwMmkSFx+G4DQ7o+iWyFE4y5Ey2FEzeKbVS2fwnRi6HZpoPSM
      J+mPpol2n8c6/y+w7hY27v5lNtauQD1gBRCajnDNzH4ht6uoMb8QuscSnBuaoqnCu6rrEtUb
      SoWgtnwc/UQfLsPGCC5vpglsOqTMLwJLHO/kkYkRhK9m1VxiOzVFsvsddG+I0K6PLGpO92HB
      stKgx48fB+C+++5bVTu05glQ+9HfBKSqvHoCcOdXVcZnzro0k7fREBgFvX/Xur34dz0KkY3K
      tXHkPNR0cnh9JVPpPDW6B+K7kPW7yOYdDL28nVBZSKdoiHG9LcD5ZJTMwEU8TZtJDVzADNdy
      S1uEiN8qZorWAu76DTTc+bn57jcLQGg6RmjpNm954VmlMrHzU4jmW1Z1ba5ANbUP/Q6a6ZnX
      x2M7kmg6j8/UsVwr7wBYDuSV15EDJxE7Pz1TLV8CSwbApUuX2L59O7W1tfh8q/sihRClhgpQ
      9gtMZPL8t1cvEbBc/PLBNlVJ1U1ErZol5KUfI8//BLH1EXwdRwpG2G7Y/yTHuse5emqAj26p
      XTYlktEu1cbbcseiGvbLweRbTxE7+zKBLXcSO/sSVv0GGh75Mpvr156Tu1ClXEpJPjqkzCQM
      N6mcg9vQlseR9lUpM0N3mD/+4z/GthdewoyNjXHs2LFFT/c7v/M7JYPlZDrPhZE01T6XctK8
      AZCDp2DorCJbrVUANDQ08PLLL+NyufjEJz5RkgZda9iOJJbOKZMIOZ+mSO1W1fZbUCqTBYM0
      4bKYTOW5Fs1yLZph8zIDQPYeVwW20DrEKgNAOg7Jq6cwKurxrt9LYNMhnFy6yC1e+v02nPsh
      Mh0tVnFXi+zIFQa+/6d41m2HWz/LlYkMTWGThmX0A4nGfVC/E6EZ/NZvXX8K0+straL7TZ0q
      r4sq740TIhE7fwHah6CyVJ8pevp5Ur1niNz92Xn8gCWvxrIsDEO1s2o3mMzsMXWObG3G7dIw
      ynyWqGxDVCr/L5nPIk/8HeTScOALHGyroNLvpnKJltsShFqQUwMI7yrbvIHs+DWGf/x/Yda0
      0vhzfwRQ0K5fJpwccuCUSqFuenBFRbG50Nx+jFANZkU9wqVhuTTcy11uCFGkhPr9ay+nYrk0
      NkRubH1CuEMlYmnTSPacJN13jtzU6MoDoLu7mz179jAwMMDo6Oh13xwpJbnxPnKxUbzrSo3N
      JOA2XBiaWETOdBoOZJOqQixtQm4P+5oDynA7HVWSeLXbFi6uAay/E9F6eEH+wHJghGrxd95W
      qmW5TNjpOKnes3h2/iKay1DEmOuAK1ClzCk0HRBsr/euNcX3f0hE7vks+alRrJr5DL4lh4e9
      e/cWKZFNTavrz56LkRe+wfBPvk52vL/kdVPX2FzrYWPEU2IrOhvXJlI82zXKZFZH3PJFxG2/
      ibACaoYqeAfIrh8jT/w99L9d/gKkRMYGVWtFmY34SqAZFpG7nyCw+fbia+mcvSzq39SZFxh5
      7m+YuvI+Itx83RtxUbCSEgUZxen78bOOaaXBcrySJesA7733HgMDA1y+fJlEYm2qnIEtd+Df
      dKise7mpa7j0ue4aDjITB+nw9rUoJ3qjXBhJIoULKeaP3qJxDzTuVfr/ZSAnryBf/M9K2qTs
      ARKZTawqly0dh+e7hnjq9OCSQeBt2YGvY39R0vDDCOk4JC6fIDt27cZ/lpRMvv00gz/8C+zM
      4vWhtcKSdYB0Os0jjzzCyMgIyWSSUOj6shpCCIJbVmaeJq+dUNTBrY9wsHUbtQE3m6oMhn/6
      X3GyKWof+HclUufz8udzYQUgUIcow2ICkJNXkW/9rUoHblqgmzE9CdGrigg+28xt4hJV8V6k
      1bpkus+KtFBz5AuLHvNBIzt2leFn/gqrpu36vL+WiWTPu2RGerATE+jW8phyK4G0c2QnBotE
      n0UDIJPJ8O1vf5uqqioMw+Cxxx5b8wtaFuxs4SdHTcCiJmDhZNMkcmlkLjPjLrNMCE8lzLJF
      mgcnrz4vnyl5OfruT0lePU3NvU+iT12BycuKjTVLskQ4eQ5UppD1PhA2diaNbq0ufSwdByeT
      QHP7VixYtVYwwvX4Nx2+aWJWNff/GnZyEqNi7RlhABNvPkX01E+J3PWrwBIBYFkWTz75JEeP
      HsVxyj9ksymRuVwOl2EsufGSjk1m5AqJS2/haehcUIFtGmLdQUUdnGX9o5luah74DXCcBRXn
      Fj6hQIhFuMiV6+HOr6iHexaSvWdUNiE2jl7Zofi8gTnqx9WdSuNItxh5/u/IjvVS97HfW5ZZ
      xMjICGfPni3+nh3rJXHpbQKbDxUruefPn1+0H2vz5s2rFy8og8WYc2sNIQQuf0VZKce1glnV
      iBGuU71eLCMLdPbsWXK5HDU1NcTj8ZI6wNRIL9/7wUs8/PhjjHaf5MK1KL5QLbcf3Lnwfs7O
      ET//OkM/+Tr5qVGCO44sGQBoeokmzTR0y4eTTRHreg13/QbysVGk4+Bp2nx9I6YQZesCNfc8
      SS4+hhVpVRvWyjJ7DKGpJZHjqFRtfnHb1tnI5/Ml+6xsIkkyk0VLJHFp6vXW1tZF92L5fL64
      h8HlLqtr+rMMX8cBfO37irP/knens7OTlpYWXnnlFfbsKVVr9lc1sGen2sBFEzb3HLmXN15+
      DVtKKMMIU3apxzBT1/DUd2DuOEJw690z/y4dJdCkmwV9m6UzGMmedxl94Rt4mreqrJJj0/Do
      127IKKJ7g4v6C8yG0FSnqZPPLFuhub6+nvr6mXZm6djYiahyellBDUZO9SOP/RWiYSds+7ll
      v2/VcGxlmhesL9EVKr0oqSxjTd/Cx9wECCFg1uy/5JX09vbS0dHBzp075ynDaZpeNMmz7RzZ
      XBapCTQBQtdVL3pJRVdxe82qJhp2PKraHGY/5LmUkgLUTQg2Losg7m7YiL/zNvwbDpAZuYp0
      7GU/pDcamule0hJ1MQhNxxVYRW1AOiDzSCd/U+oAsueoUv7b9JCiHBYvw8FOx9DdAURiCPqO
      K1Ha+j2LnO3mYskAiEQifO9730NKOW8TPNrXzbWRQSZyks72Vl4/+gotHVtVPpr5pHh0E5pv
      U19KuYfb8CppPs0o7wpZ7g/wVxK5+wmQDp7qBiUL+AF3IeZsh7wj8SyLFL/2EMFGtYcxlp9F
      yYxeJXb2KKFd92OsVMA2UKecWOZImcTPH2Pize9SefDn8Td3ghVaUObxg8KSAeDz+Vi3bh22
      bSvP31mobmzj/lkmeffdV9D4XOyEi43qQpQVWCqBk1e+T96q0k1qrB/634TweqhbmTNJKpXi
      m99coCZQwLVr1+jp6Vn0mM9//vNIKekaSZHIOuyo9y4ZBNLOM/b6v2InJonc/dnrmjGKEKKs
      ldNiiHe9TuzsSxjhOkI77l3wOOnY2Ok4uidYnL1FdSfc+RXmffPSBsdRM5IVVHqlHzIsSx16
      y5YtnDp1ivHx8UVbIW5K1TE+BINvq+xL4yyegulXI8wqmtpM0ywr+rVaBC0dDYFrgWr2bEgn
      T7rvHHZySqU81yIAVoHQjvswwrX41u9d9LjoyR8XNEE/N9PwJ8T8hx/wdx7C07wN3RtaU8Xp
      tcSSATA0NMTRo0fJZrPXTYxZKWR6CsYvq07J6RHNW6U2yHPTj1ZIEZ5XAV3X6ehYGyK7EILm
      sFX8/yWPd80YSuv+6+sFuh64ApUEt9615HFSTv9naQhNKyYjZC6tWlOqOlYvF38DsGgAdHV1
      cfTo0eLSZ+4SaK0hnTycfwYsP7QehiuvIq8eh56mmYqsyw11ZWTHP0QjzEpmwunc92ogpVQe
      uJ4wwrw5ovvh3Q8Q2HRIjerLgZ1VtNexS8iT/wyNexD7PntjL3IFWDQAOjs7GR4epqGhgb6+
      PiYnJwmHV+f+vSykJpGXX1SGGU37oGEXRE7B9ers/8+K6DXkS38CkY2I226ODIlYqQP8wNsQ
      H4CagqJ144cnAwTLWALt2LGD5557DoD9+8u4pK8hhLcSdv8yGG6EywMBL6Jxr8ov3wA42RS5
      ySHM6nU3xLhtdhbshuyPPCGoWo+o3rj2514reKtV122gTlmnfsiw5Lc+MjLCwMAAHo+HWGzt
      lAVy0SGmzrxQ2vUnNET9DvWFlnlg8vEJps68QD4ZXZNrGD36T/T/2/9OqvfMmpxvLmIZm9OD
      SSZS+RtyfmEF0Q7/Xknu/UOHyg5ovXNFKdmbiSUDYHR0lEAgQFdXlyqzrxEmTzzN2Cv/TLLn
      3WW/Z+q9Fxl75Z+Jn3tt0eOcXIb04CVlr7oIPA2d9BYn5AAABI5JREFUWLXtuOZ48ErHIT3U
      jXOdLbmpnEMy65DIrqxZ7//HzcOSS6ADBw4QCATweDwlZfrrRWDLHQjTjadp87Lf499wACeb
      nmegPRcTb3yHqdPPU333Zwl0LuweGdh8mMDmw/NeT117j6Gn/xJfxwFqjnx+2dcHhY18JoZw
      h4j4DfyWjse4uZ2cTj5LvOt1ZV8aaSFnO2qzvYy07M8aFv1mbNsmn8+zYcOGNWODTcNd1071
      4U8va0Pl5LOkBy7gCkao2v9R9O6fIoffX/jc9RuxatsXNHewM0lGXvwHEpdOlP13I1SDVbeh
      VH9zubjwU+SLf4Ic6UITAp+pL9u5fq2QGbzI2NFvMn78O2Rth7NDSS6MpMoLDfyMY9EZ4PLl
      y7z11lvF3x966KEbqgqxEKbe/SkTb36PioOPEqqpgavHlXthTfnZw7d+z6KzRHa0l/i5V8jH
      xvC1zy/8GKFaGj7x5dVdbNFs7oNrx7Bq2gjuOIKnrg1hZ9GmetEMF0QWlqD8WcWiAbBhwwYM
      w+C73/0upmkuqhWzFpB2jok3n0L3+AluP1LMzFi167HqOrBqWqGmFbH3M/OML6SUTKXzSAkh
      j2vRrIu7rp3IkS9gVq3trAbA+rsRzbcgzLVXVlguNNND1daDMHwaJi+xWe9FaG40Vm4W8j87
      ltwD9PT0sH79enK5HFNTU1RU3Lhmpnxiktj7L6NZPvybDhcpcZ6mzaV7hab56dhM3uaZ0704
      usnHttcRzzh4DI1gGY0gobvwd9yYlK7Q9KKS9QcKoasfK4Cr5XY1I32AbcgfVix5R7Zt24YQ
      gpMnT87zCJuLecYNK72YQBWRI19AM9xoy3BtLHnv2Hka+57Hqd1O3q6jezyDz9TYXn9jvnSZ
      T8PkVahoK2/q8UEj0KBy8Lr5oaqSfxCQjg0Xn1VV6c6PlsjgLLoJllJy+vTpIhk+Gl0o/y4Z
      6OnipRdf5nx334KtItLOIXvfQF57q2yKUggNb/NW3HXtKw4k3TA5WONwqE6gCYlmJ4mYN9Af
      68KzyFf/EgYWSeNKqfwCVshZXhMIoUS2fsYffgDyaey+k9h9787zb1hyeGxvb6enpwfTNBd1
      ie++1E2ksYULZ0/T3tKAtG0cxyntH8qnkV0/VgWvms2gu/jzP/9zhoeHFzxvMpnk2WefXfQa
      v/SlL9HW1oE49NsAnL4wQNelC4QaDeqqFk6DXhfa7lBWO7XldecB5eE79C5UbypPn/wZQj4+
      zvixb+PfcAvelh039bMlGsPjOWQ+S53US3wIFw0AIQQXLlzANE0CgcAi0oiCA7ffSe/VHoTp
      QwiBXsYjTFgBOPRbgCg2b/3+7//+df5589HZUImRr6ep/sZlrIQ7CE1LGE5orkJG6ANcIjk2
      svcNsPyI2uWZVd8IZIa6SVx8ExA3PQAQGponpLRk5zzDy2KEHTt2DK/XS2NjI5ZVXrtybLif
      S1eG2Ll7N4vVW1YrQrsSVPksqjbfHBmPReGvU+3bH2AAyOSYoitaAVhMK+kGw7NuG5H7voS7
      5uZnojTDoua+Lxb/fzb+P+XOwPuBYfLoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Program for International Student Assessment (PISA) Exploration' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5xkV3nn/b0VbuVc1bk6TXdPHmkkoYACEkgIgcFgjA3Yi8Pi8PFi7wK2
      WWz2/cB+bL+2Fwecd71rv/ZiwCQBQihHNEET1dM9nWNVdeWc7q0b3z961JrRBM0IsDCa31+3
      7jnnOc99znnuOc99nvOUYJqmyVVcxesUlteagau4itcSVxXgKl7XeE0UQFM7bGRyr0XXrxod
      qY2i6q+qbbvV+j5z828Nk6cef+pVtfzuM08ha8YVt/te5H0lOEcBfu/T/5U/+9M/4TN/8FlU
      4wdnGvzFH/0+k7MLl6xTXJrk648dPu/+E48/yasVS3VjmROzywB85UtfviI6hx+/n5Nzm0p7
      4JFv8Jnf+wM+/an/RlnSefLxxy7Z9vP/9H8uWW7IFR5/7sQ59x74wj/wW5/57BVw+P3Dy2V8
      8pmHqJgunrr/8/z3P/wTPvWp32VqKcX/+rv/CRj82e9/hj/+4z/ib//5qwAceeoBPvSRT2AC
      o70h/ukL39yi9Vf/4/f43Oc+x59/7m/oXEIvzpb3K+Fs+T38ja9SkS9/ZG1n/xC9ET76sY/z
      D3/5hxw8dISlhVkkxcZ1Ix6eOLaAP9LHR37xvfzZZ/8Mq8PB2N43olZSVItpdt52Hyce+wZV
      SeW+9/4Mq8efIJFvUKmVCQb8uMMj/OrP/yQrsyeYXFgjMp7n4KP3b9F9zx17eezwC0iKjY/8
      ys+iqzJtucPkwcd56Lsv0KxX+cUP/0c+/y9fYHp2hvve8Xa+/MUvYWLjv/zmx/nWF/+R9bUk
      d9/3Dh567ElQm7z3Q7/K8tGnWE3n6Nl2DeSmOLhUoPUTP4VpmGCo/PlnP0tDkrn7Xe+nlTjN
      CyspquUyn/x/Ps3X/+nvyBUrXHP7fTgECwgCAC9MnuYd7/lprt89Rj65wr984fOcnlvhjtv2
      YTr6CQtlUrKInJrh6FyCTC6L2q7wp5/7azTN5Bd/7b/w5f/9pxg2N57YKNtjKv9y/2HkTosf
      e8vtAEyvZBlyCpTaKpnpA3zn2ZNEevq4aaJ76/on3norf/33/4yJjV//yC/xt3/1t4h2G+//
      pf/E/f/wF2gWkXvf/QEe+de/RxPstFQT0VR5w90/iVid48hsgq6+Ue68Zph//NrDoDZ557vf
      syXjD/z8L9PlE3n8wAv85//6SR7/wgne96FfoUdd5p8fex6tXgOjQ6rQ4Hc+83EiAS8Azz0/
      xVv3x5lJlNk9cS2lL38Hg/dgATqmyMd+4zcAWDl9lNNZDaO8zBvufCv/+8//AqdHZNct9xI4
      I+9vfPGfmE+k6RnazV3XDG7Nkd1Dfk7Nr+AM9rCjiy35OQUd3TT5p7/7c9LlJrtuvJthd3Nr
      Dv3qRz/JQNSzNefPWQGyG8v86Z/8D9arFqI2ibWixK/98s/yxJFZPvU7n8DRTPDkM88wfv3d
      /PIH3kUyXWZ9/hS7b3s7t+wdZ3xinLDfweEjp0ls1Pj1j30Un9fLxz72WzSzCQBGd17Hvr27
      +bmffu85dBP50lZ/Z6NWLnDnOz7Ij919A4WWkxtvvImP/PpHmH3uIeIT++jymRw+fpojhw7z
      i7/xcYJCm/233cmH3/djrKZSjI5tw+MPMnnsOHfdfiv3vOPd3H7zfjYSG6RmTxAYu45Pfep3
      eezBByik1/nAh/8TN451U+vobBvfRjAS5tiRQ+fw9PO//KtMffdh/vNHfxNroJ9bbryeX//I
      r9Cpl6jWW8j1KqVajQPHZ/nEb36MPdsGOH74GRyhQbbHu3j4qedRTC8f/fhvIdcK3HbHm3jD
      bXdvTf5mboViQyUQcvP0s0dJJ9awuAPccesbz7l+9uFvbsnguQPPk85VuPaW2+nxW1ldTzO+
      az+jA92ogpff/K3fwO0K8hsf/iALC2s89NQh3nD99Rx97gDtRnVLZht1dUvGXT7xzJtRRLRs
      Kv+//P3f8Nm/+1fuetONZ2aQi1/+jx/gb/7sj/iLv/88htJgPVsmEvTz5FOb2ya/24Vy5m0v
      1wr85V/9FX/9P/8vI3uuZ/rpr7Ja0emPuvFGevnE736KyQNPb1Y2FaaXM3ziE58kuXCKVqO6
      NUcGR0bweDzMnH7hHPkV0ila5RQZJcwnf+d3OXX4sXPm0Ea2fs5YnqMAPf3b+NjHf4vP/Lff
      xi7AjTfuxyKAqcm0ZYVKo0005Gd6ZpITL0xuNrKHuWHfBIXFE0xlVH787XefYV5AeHkHL8PZ
      dEWrsNXfyyEgYLFuLlam2qTckHB5PFgEkbvueTs7R/uJj+yiJ+zfrC+AzSoABl/88gN88Kfe
      i8/nwQRK5Sq6vrlEenxe8pkcrVoZweY4p63ezvPAM9O8990/jsd+Lj9ra0ne96EPc8e+fhbX
      8zTqDSRFxSJYaHdksoXC5mDLLeSOTKXexONxowsC199+F2+8fgeb0gHBagWgWi1t8fXM009y
      3U03M7LzWqaOPMvuW97Cz733Xv7yL/7qnGv3WTLYvm2MT/7Ob5Ocepbnji3x67/1SSzVde5/
      /CCCKZw32BabSax3gA9+6P1YzpHZSzJ+cResqhovboh/5pd+jd//f/+AfeNxAAylQVV18Nuf
      +K+kVhc4dfgZxvbux9c9SnJ+ChNoKxr2M507fBF+4ed/gQ/9zE+gtmo0NZHc2iqaAZqmUy1m
      UYQzGxPBitxuoKgKbUlB4KU5+Y//9wt88IMfpCfoPU9+VoeHRiWLIrVQdOG8OXQ2rJ/+9Kc/
      ffZUG4zHt365fEGiQT/bBnr4/Be+xP7b7uWm667DY1XJF3K0BR/X7xtnYDCOOxBm/oXDbJQl
      9u7dTV9PhIHBOAIC8cFBsFqIxwe2aMcHB8+hu2ukf6u/FyF6/HRHggQiXfg9DnyhKNsHo3zt
      q1/nznf+NGvTh1lYT7Fv37W4XSLxwfgW35GQH4c7gM+hc+DoNHuv2ceea69l8vCztDUbw8P9
      jO3ej5xf4tFnjvAzH/oP+NxOuvvjOKwWogNjtFILTK9usG/fXuID/YS6evC5RQrpVb75rQdx
      dU3w1jddT8Dj5Gtff4g3330Pzz76IIbdw969+9g+FOOr33iIid17uf32t5Bfmeb49AK79uwj
      6Hdv8isIxIfHKCxPslpsMzE6SKFU521vu5vhoWEwNBwWlQcefJwbb70Lr1Xeur77nrs5ffwA
      C+spdu/cziMPfRvV5uPet9zGY9/+JtmGxjvvu3dTNvE4CFYGhwawOty8+abr+M4jj2CKXnZN
      jJ4lMz97tg3wta9+nZFd1+JxWMktn4LgEF1BD+HufjwO69bLIh4f5MhzT/HMc4f4sff8JKam
      cec9b2NidBifHYJhP4eOz/CmW2/aVKZmiacPHGZqahaPx8nNd93H3m1dNFSTb3/lK+RrLf7D
      h34Wn9dFqKuXiYEwX/rK13jrO9/DQE9sa464TJWHnjrArr37mNix5yX5jYzQNzxG2CrxtQcf
      5T3v+1liId85c8jvEV+a8VfqCGsWUvyfL96Poet84EO/QE8kcCXNr+LfIZRWhf/1+W/ykV/5
      +Stu+80v/H/svvOdjPVFLl3RkLj/W0/xnne//dUx+SpxxQpwFVfxo4SrjrCreF3jqgJcxesa
      VxXgKl7XuKoAV/G6xlUFuIrXNbY8A0tLS68lH69rdHV1oWnaa83G6xJXV4CreF3jqgJcxesa
      5yuAqfPEI49y+OipV2yc3sheWW+GzMpymmYhwWNPPsniUuq8KmsLm2HS+XSWS3noqutLFwx7
      PfzcU0xOz160nSZVqEg/vNsNVW4xOzPLRjZ/wfJmKU/jAnHEK8uLzC8uo3faNFsyM6dOkUol
      yRbKP2iW/11jyxP8og2QnTlCNbiD1MwLxHqDuG02ajWZTLHEaF+AimQh4BcRBBuCadCqlqkr
      Fvq6wmTTG/QPDjI0NkFyaZbERpGoR2Qjl2Fsxx4SG2s4HXHGfGXaPbtZOHaYeE+EfFPHZTZI
      1TS2xTzY7S5MMYRoVdhIJOkdHmVheZmBgSEKyQUmrrkRT32Fg8k2Q90xbG4Plk6H8biHowmB
      264Z5PHHH0JwBBiJRVFFK3KhyEYuw3A8wEw1yIBVxmJT8ffsRJXy7N295zUbhLNtgNmZ0wzE
      46i6ST6dwub0oMp1NFMkFnSSXEsSGBhBqZfx+QNUmhLX7N7B0soSEacFSfCgdVQSiSRWGwz0
      dVNvSURDAdaTObq7IzTqDQLBAK1GDbcvSL1eIxgMUqts0my2ZHbs3I71AoGJP2o4bwUQ3R6q
      xTJqQ0JoNJieTZFILuMwNbKVJrfecgOlZJpKvkY+n2FuYQFFUygXNzDkOg8//gJOq8DywgLJ
      1XkU1cZ1I92cXl7mxv17sWKCAN997GFCvf0spzZYnV/BIToYGIjS7jSZnl6lVmyQz3V401tv
      ZePEMQLdA+QyVXwBP4nUBqYJ197wBqrlFskXjtFQQbA5aDaKNJp1RENEkJvkS2kSydQWH2Kg
      i6H4EB3TyY1vvIPJQ1/EsIZeC9lfEHaLBdUQyOZT5DJ5OpKMzenGKdopV5sM9HaTz2SxCCbl
      YoWxiQkEQNc1ao0WdquOaXHS09tDLNaFxZBRDYFmo0qsd4hqKYtgahSKTSZ2jrG2vEzf4BCV
      XA6LYKIoBnKzRrPzw7tKfj9x3goAsHD6BcRwH0NdQVKFBmEHzK6m2D42hM8fpFYpgjOAoDTp
      SC1yVZltvREUmwelVSPWFWNlaQ7VsNPf3Y1o09EsNk6fnmVsfBceq4rp8lMt5qiXcuCM0hv1
      YFisWAwduxXyDQOfRyTgdVErVvnO4w/TO7SHsEulb2iMgFPg+OQM193wBh785td550/8FHYL
      rK0soltcWPU2giuI0KlTVQxGe/oQbTqmw8PszGlGRrYR8Dr5yr8+wE++/z28li+7c74CmQap
      ZBJfOIomtTAtIh73mVBtUydbKNHb20smnSEWi+F0u7EKUMhlsDo8hPwuOgqYhgYCuJwOkokE
      kVgXFquIFZWNbJFYNIrbLSJ3NEqFLNFYD9lsllg0TKFcZWgw/prK5N8KF1SA1xNM00QQXtuh
      vvoZ9LXD6/4r0Gs9+a/itcXrXgGu4vWNqwpwFa9rXFWAq3hd46oCXMXrGhfwBJsYhnHm0sQ0
      DLQzp+1fPHUPJj+Ik5SmoZMvFC9ZR1M6aK+QtMs0dPSz6siyDIBhmHQ6HRRZ5nLyfsmyfFn9
      nd3HizA0BeVVZEQzz8hf6XQu6Ql/tbjYuBm6iqq/Mr+qql6yzDRN1I5Msy1RqVS+Jz4vd4qZ
      hv6KWeQURbng/a2sEOXypsu8lZvjS09OktlIUEkXOXXiAKlig5HBHv7wj/+EW269DaNdJlcx
      SK8v4guFMbUOs3NLxLpidFo1VhI5PC4HpmHQUVTqjQamYaLrGo1amVy1jd0ChqZjsdmplvNk
      C3WOH3gG1ROiO+Dm9MwCqeVZmjhwi1Y0TcOCwXe/8a+4hnexvjBLKOBndW0F1RT47qGn6evq
      ZWl1nezKHIK/B9pVkoUK86fWicZ8bGSzLJ5K0C5mcHbFWJxbINYVo12vsJrM4nE6mFtYJBqL
      sbw0z8zKKp5qmqavF6NZI7WRRHB4yaXW0BHB0JA7MoZhMHV8imjUx3IiTTjg4/izD1JxxWlk
      VrE7PaTWFnF6g9ht1vMGwePxbL108tkMpyZP0ag1MEwDl9tLIZfB4XIhtZqouk6xVMXn9SDL
      MqqiYBFAUVTyxQoOu41WW0JTOzTbHVxOB9VykWarTbMt0Ww0sVotmLqOpqmUKnU8Lgdr81NI
      thB+l5VMJoPD6SKXzeL2uCgWCpgWG4rcZGZhkbDfS7Xewmq1IEkSDoeDUiHHWnoDq65z+vRp
      BLXFcqaJ32VFNYRNWckKxULxHJqddgNFh2qpgMPtoZjLILrcqK0ajY5Bo15BsDqwmDqFYgFZ
      ljBMC616Bc0QWJ6dQbRpLC7n8fo9iDYLmXQah9tDvVJCVg0spsbJyRkGBvrOk/15foB2do6v
      HEmyrTeMo2Pi9pqspkuM9bp57sgC229+M28cd3H4eJ2F+WPcfe/bMeQ0x44dZMebP0hz/gB1
      zUFAdDHo1ZgpqhAKQakIdsgkVtGsHvqDEQSHlbvueTOPP/QYCBYwXdx8x7VkF2c5tZAnHnMz
      uP86MqdPIrmctCsl4k47s2Udp02jUSwydsubqW4so5k6IVFkvdrhHW+5HZfDwbOPPoZm9yO3
      SsiCwEAggqaKhJwakiiwspznXT95H7Mnj3Lw8CTbJ3oZ6QownRUY3T5EtZBizG1w/5E17hjv
      Qe4Zp56aoqOGMQwJpwgnJqe5fv8+PFYPyfQ69VaLnt4Bdg+7ObWmMbpzhPTcQZbTNiJdXt77
      jnvOG4SX+wGWF5awouOL+FlbSiBhI+C2UqrJ+Bwmmqwyuv9mioll5GYBRfBhmjJCR8XiCRLr
      ipFem0MxHNx5xxuZOnUKTdMRnS4MzaQn6mZ6NU/AptOUO/iiUfr9Iop7gE5xnWDIzfxcCrvH
      icMGgj2M3SajtFWsThvNchlZMQhFPHT1juJFItOyoHWqiFiQJZmeiIsSAdLz0zi9XkAh4vdQ
      bRtn0WwjtQ26fTZWii38DqjVZXbtuwZLs0iqLOGJddGplun22anb3JSzedweO1q7RV0xCTlF
      hoe6WEpJ2K0y48NxTk7NYnd70SUFp1NEN1UEwcqe3bvOk/15mYIsops7br2NkYiLual52u0i
      umFQN3x8+Fc+zMnjJ8ASxOt3MjzSQ71RQpBbePwhPDYL3oEhNibXiPSLnFhcpW/0OrZfu5Pk
      zFHqegBR0BFcQfYMBnn46AYWwOUwKHdgW38XHo+bYCSKz5Eg2j/C3OwCVk0mk6oz3h1jPrHC
      6J79FFIbXDMxQbS/D6cpkVqcw9sXx5qbw2rf9Jz29HWxlMwRH9lOrbiGxx/AxIrHquP2Oimk
      EjRkDUlqEwuEiPXG6e0LUrW1WDs9Q6y7B7vLwq037qeeTjLe30fOqLMyM4e3O47YLPPO++5l
      LVelN+BjROynWleIhkRmZpIM772BjZV5dLubnoiFHePjF1yGXw6X24UFCIXCNGISdUmmOxYm
      HLMhqA0a7Q5e0Yot4qfsDVApZOnr6qHR7iDaPQwO9KK2KmBzARAJRzAAAVBUHamj0RcNYLNa
      cGsGbpedfKlMd8CCOxQgnUniD0cRrAaxkBfDEkDX61TkAqoqEOuKoepWPD4nPdEgSttCK72O
      y+3B5XTgcrvxBRwYhg+1K4I3EMFmg4DbgZIpnkXTjt4poduc+L0GsWAA0dWg1WwTcjjxei2E
      w0EauoxNtBIKhLFpOlh0Ss02Xo8Hl9NCs60Si0bQ9QYdScLm8uBxu3H6A4BBu1Gj2r7wFug1
      8wTPTZ+gZ2wfQef52bp+VCDXixw8PsXOvdfSG714vNEPkye4XimRyuYZHZvAaT9/u/ajhitS
      AFmWcTqd31cGFFnG5nCekxKxI8s4LqsfE1lWcDodW3eq5QIuXxjHFQ6eJMm4XFfwbKZBR9Vx
      iPaLVzFNQOCVnM2XUoArCdX4twrreDX9KIqCKIqvXPEVUK9VcfsC2C6UQ/Nl0FUFrHasl6h7
      nhFsGjrTp2cIRyLMz84SjEQ59fx3aeJg/vgxFMGK12FhOZHG5RCxWaCjmbRrBVLZGk7RwtLy
      En6vl8XZBYKRMI1qhY6qM7+wRncsdIZ+lLXVZVJzSxSkBoFAiEriBEcSEuWFk1RUC2Gfk9OL
      63RHw3TadZYT6bMM1ShLs9OsLK8SH4wzNTmNx+vmy19/gF2799KuFqk2FYq5DXQcSI0CmVyF
      XL6Iy2FjeXEdv8+NxWaj05E4fPAQhtbB4fGTWl3A6vKjyW2KpQo+nwepLSOY2iY/kQAzp0+w
      ulyhuzeKonSolvK0VZPE0iJuj4cnH30Oq8XAEQgyPzVNOBphY30NWTfxul3nDMLZRrAitylW
      6ohWgXKtSaPeQECn2e6AoVEsVvB6XGRzBWwWqNVbuM/QW1pcwed1U8jncbo9GLpCrlDG7bST
      yRZxOewU8gXkjgwWO41qCdNix26zUi4WEKx2crnsZh5TAzRVodWo0ZIU1hbmcXg8qEqHUqGM
      1+chnc7g8TjJZgt4fd7NLVZHJl8oIsstrHYHhWwWh9tDcnUdi2CiGgJSs4ZqCDhEO7nMBnan
      G13T0HWNhdOncXi81CplTIuNdqO2ZUTXalUmT04TiYZptSSsFgFJkpBajS0j34pBtd7CIVqZ
      n5rEFurBbb/41/7zjeBihieeP4q13Saj2Hjb2+4jP32MnmuuY+qZZ3EFHBTyNeqtFt193Tit
      Vq6//S6WJ5/n4Nwi1/XHGBwf58lvH+fWd93Jytpp1k5nGRzsYtdEF6tpqNbXUVNpum+/F0di
      leCeCUqJBOP9TmblPqTlQ1h9UVqFDLosc83bf5oTj36beqtFX2+Y8d4gTyebvGX/NeTWVnDb
      bbj7hpibXUCQBe5++6088tij3HrDLp4/mcYwJKyKgqQK+LpdWOs6Q0MODk63edd772Th8AHq
      HYn0eoJrr9tNphNBaGywvp7huj1DlFsq3dv2sHLsKXRZRvd3c/MbdrNyaoHwrhspLcxRbxW4
      ef8uDp08heH2IUoCvX4Hsl2ga2CIpflp1KaVUMjkljvefM4gnL0CLC3M0FQEBENjZGSY9dUU
      jXoWxXDQFfJhs1lomxbiPT0szM6gqAa333k7FmBxcRm7qeGLBCg3TEStQb4m4XVZ6Ar7mF8r
      MDzURblqYtWrZAo1PF4/+3cMsJSRoFOlJz5Abn0FX/8uOuU0rXYLm1NEUDVGx4c4dGyGgUgY
      UKi3JVodDYfNwf4brtuMxl2YR3QI1E0vRrNMW5axu/14bSbJZBqn14soaER6hwjadUqmi3Yl
      h8PmxhQ0dFlmdHyI+eUsFlOmmCttGdE7d+0lsZrCRMUmCCho9PSOUkgntoz8ZrWErBjEogF8
      oog7Pk7EdfHdwHkrQC69TkVSCQeCuF0WHO4QAxEn0ytp4t29+P0O3G4XTqePN915C08/O8kt
      b9jL6vwcqkUkIBps5EqE/X4ypTwjQ8MM9o7idassrKUJBd0opkl3T4xcNoffH2HbzjG0doOu
      nl5OTS8yNtiLKxAk5HWh2Z2MD49gdJo4nT76+7uJ93fTURykUmv4QxH6+4K8MDlN//Aofp+X
      3t4IG8vL4PBTTC/hiUQZ6OrFHwrjD7ppFnNki0327Bhi6vQ0vmAEl0vE6fKi46KykSQYizI0
      OMY1113DE08+zL13vQmt00azOxnoDrO+niAY7mHx9BTegB9Dq6FKMjXDTlc0gtqu4HGF6R4M
      cfrUNL3xOF2hHjxeC5LcwR94Kafq2SuAoWvUqw18Xicd1US023A5RfzBEH6vF4/HtfnZsVTF
      7/Pg8QYAE4/bjSxJiHaRaFeETkfD43bQajbw+vyUKnXCoRCxrjBWqwu7bdMJFOvuJhjwk0mn
      8XhclCtVguEIhUwa0eki4PfhcDmxCCaCxU4gGMFpt+DxeVA0k2gkgql1aLbbOD1+DFUhFPRi
      cQbQ6mU0uxOvx4vbIWKxCkSi3ThEG4pmEouFSG9s4PEFaNVLGNjxuO0IFiupVIZQOIJDtBKJ
      dhMKBYlFI6iqDrqCbEA0EqWvuwtd1XB7PLgcDhwOO25PAJfLTrVWJ9Ldi8N2BSvAlSCfXEZx
      hBjoCm/dy6TW6R0YopjM4O/vRfwh9DWnExn6Bnsvq26jWiRTlJgYi79y5VeJHyYj+NWiLUm4
      Xa5Xrng5MFXKNYnwWZnCf1B43Z8H+GHAj4IC/HvFBd/Pjz/wZdK1ztbvS4U9FGZOkG1pTE4e
      5dlnn6WQTvMP//KvYKjc/6Uvc+Dg8wA8f/AgX/nS/awuzHP/V+5ncW2dL3/5fg4dntyiZSg1
      VtfrL+tBZ/rY8fN4WEmunvP75YfopVKWbz74HTK5DI9+5xEeffL5c+pf7JlWVl+iWy7mkbTz
      wz7WlpIYZ2i8WGKaJtPHjlxYSGfTX0pesrycS7G4tnFJmc/NLl7yGc6FwepK4sxh+c45JS+2
      L+bzZJKrSLp5Sbqb4Qnnl5lqi1LlpT8CrFUq58jmReTzeVZX1rZonE9rk/7lPt/Z5VcSOnE2
      zv8Ib6poop+ZY0c4nF1lZHyM5UKVaCBAWHTQcVopLC4jAQO9ETbm5rllaB9mW9r8fBmKsn9b
      L1Jpnd5r7qKTWTvDoMJd+/t4cGaFn3vfu/j6332WG97/UTJTBzGUGp/73Be47y3XcGRepZTz
      M+gxWFEFmsUKWinN1Mo6AwM9JOfX6R4IkS7mEK6t8I1npvnQB3+K5HqBtbUkjXqRUN8e2vkl
      fD4f1arEtvEBUsU2aqvA/Q8eZdtggHRZIhL14rKEsVEluZ5AAlAVrHaRZ77zTYaHduGJBkis
      L2G3i+RqMh98//uYnnyBtqmyMHkEHD4CToFiqUZ3XxdPPvwIt7zlHg488RT1Yo69b7yJb3zh
      C9z15rtJtBXkjSyi580M9MYuOCD5fB6L28uhg0fwRYO0CiU0dFxeH91BL5OLSYZ6ekisLpHL
      5XC6/DQkhZtuup7M+hKTi0kmBnpoN2vYfFFMo4PF5gazQzFbZTJfIRjyMtITYnY9i91qoV4q
      0dUVprgwCx2VpqIQCflIpfLcePPNJFYWcHoCNMpZFER6u6MYcgcdHUluo6oaLdmO32fg9ESw
      6Qrzc7PYXV6kepGhib1E/C7mZucI+ANMnTiC3R+hUasSifbhtkhs1BREU0LpmIhON8vz0xQK
      NRxeH4oON16/j8WFBcq5DKGuXhRZptZs4PcHsDvctCs5NJuTm67ff0UKcN4KsDh5EsHlp1ot
      Mzi0m219UWwWK5puMLs0zVoyQ1f3CKMDXTTbGuaZ2BZ3IIImV5hfSDJ5apqNms7qiSdod5qs
      rKzRbsg8cXSFnd1hvv3th+nbeytHHn2UVseGoVsY6PeSr+uYqoRUL3L42FFabfCmFe4AACAA
      SURBVBXDakHXdbK5Ag6nm4nt1xL2u+mNdmGIfrpcMqvpIh1Vp6OJ3PnWO9CbbYYGu+jIMmvJ
      Fb76jUfwe31gGqjodDoadquBosHc9FGS2dzWM/V3daGoCnv3XUPM70XRJErlBvGBUSz1HIlM
      k3i8l3ZbQTBMDNPE1DUEQUDVdTqNNrKiIasqWAVeOHGSwViARtvCW+96E109EXT14q8qn89P
      T3cXjWYTu9VGpLuX7u4+/H4v2VwRp90OgoDW6SApBh5fAKVZodnRXiq3iUxsi9OSOlisL34B
      MdF1nf7+YRyiFdM0sFqt2GwOvF4XFsHKtontGIpMs9HCZrMzOLINr0vE0A2sVguGKWxmAqlX
      SSQzGIbA9p0TuNxerBYBh8vH2HAcXddpNpoIFhuRSIRUKoPT7cXjErGITsZHBuh0VFrNNna7
      DcOAXbt2gm5iYoIgoCgdVNMgFA7TqORRDbChEYrFSKaLmKqEoYNVdLJzYpR2q4UgXLnj7rJs
      AF3XsFpt6LqO1XpWJ6aJbmwK8pzrF9tpGharleT6OoNDQ2i6gc22Gdhms9nQNA2rzXYmq8Em
      bV3XsQgCBmC1WM65fzZt0zAwBQHzZX2ey7d+XplhGAgWC/oZHi74TKaJ1WI5j87ZdXVdP+Pg
      siAIJoZhnkPn1Kkl9uwZRRDAMMBqtZwhb2CaApaznDMXsgEMw0AQLOc40TbvCVtOKEPXsZzF
      18vLLyaDl5e9vK8X6Z4tk82A2E3FFQBTELCc1Y9hGFjOkplpGCAImOaLtIUt2b/YytANLNaz
      2pgGhsmW7DfLBXT9QmNsohsvjZNpGpicy9Pl4KoR/EOAq0bwa4fztkCaVKNUll66YWoUypWt
      jG1no5Be47HHHiWZK/Doww8xP7/B1LFnSOSazE2f5OFHHqWjm6zOn+KpJx8jl94gmaryxGOP
      cmpmgU49x8EX5r//T3WG57NRSa9y/NSl/5wbQ2ZlaZ10vvT95+nfANn8S5n6SuXLf4ZsPkul
      VrtoebOUp6Fc+dmGl2N5YZamdOGgtBeRy1xetsFapUK1mGPtktkJDZKJ9CXpnB8NajEo5nM8
      /cQcA8OD7Bz18tCDRxjqdjC3OE9vfDu5zCoT195MX7SPHUMS8888TP+t7ya3dJSxoTBra01u
      2L+b0urDNDo6lXKVW96wl6ceeozg6E2kcxK33D7M84eeQ1EFYDsbq0scO73M+HAvmXKbnoCN
      hmLDYzFYy5UY7gvRUm3QqSMGutAqSZK5Knabk137xliZX6W7Z4BirYDfbWd2Ps/7f+a9nDp5
      kI1cDZ9pENmxh2pqkWdPrdMfDZMulrjx+t0cP3yciV07WEut4RRj9GgqDzz3HLGBPpAa1BST
      e+95y2UNzPeKVGKNpmyAJm0mxLLbQBCQGg0Mu4jZkbCLIo22Qn9PlFyxRCQcppAvYdgEerp6
      AChXK5RyWRoduP7a3cydnsbpctNoS4SjUVrVMg5PELlRotyWGR7oZ71SoFpp0BcfIJ8v4AtG
      GOzrRpXaLKfniYUC1CsFXG4/TtFGuVolHA6jKTLNtkLA78VhFWjJKo1Wm6DfQ7tjEIsGCfo8
      bBSKWGwiq802LreHVqOKVbQR6+qnUsjjDUfpNJpUKqexOT3ocoNAtJeugINKR0RtlikVcuBw
      Ewn4yKXWCcS6mZyaIhCOUEqlCEbDSFILTbcSioRoVKqYgEXQGYif78s5bwUw9Q75TJXewWux
      dNr4QzG2xeP4AkFuv36Mg9MzuHx+mqUyiZVZ1qsy1924n2a5hCyphIJhVFXlyKGnie3ZT9hp
      RZEanFrIcNsd12Ni45633soD3/4W2XSacmaFjWqHhbUExZV1rG4PuVwWm8tFcm2dhbXNrHSI
      DpJr67j8PlLpDeyig9F4N+M9vcxNzuL1u1hbzHPTHXdi0xW2xePYLQLtcpMhnx2HJ8a2kWHk
      aoFrbr2d9TPZ7k6+cJpWfpXppTOZ60ydSrFKT88EDkOi2GqiN6s0Go0f9NwHoNVW2D4xdCYr
      XIdGrUKzJZPNZWhLMoJVZHCgD6ugsbK6jGoI5JPrBPviiDYrkvTS6i3YnPg9Z5JqWUWCTivN
      jk6rlKPckMgXs2iGFb/XTbPdQjEgHg2RzBQIhoK0my3abQnThJGxCTr1PFbRT0duUylmaTda
      5EpV8pksitTBUCQS+QrlQhZD7VBqdNg+MYrb5cJqd9Db20utUkAwNUqNDvFomN6RUTKJdRqd
      DsVSBdC3MuJZrFZKpQqmoVBvNKlW6jhdXkTRQqvRIhCI4ndYiPQO0apW8AYiOK0wPBInGOpD
      kVqYFhv1SpaWdOGTbOfZAKauUGspCFYRi6biC3iYOXWSnvgIAY9IW7cye/I4e264kXY5w/J6
      msFtE5RTq/SP7ya1NEVLsRML2imUG+y+9gboNPD6g+hKi6ZqZWXuFP3DYzhsFvw+D9WGgtoq
      kMq3GRyIsp7KMtQbJpVvMz4QYXY1xVB/hI18m6BHQBPErb9nFUwrdped48em2LVjO96QD6lZ
      J7G6wtjua2lVciQLDbb19eD0+9BbNUyXH61eZnY1xUi8i2Qyy8TO7Zw+PcPY+A5smAhYwaIw
      9fwRVnI1xrePcOMNN/xAJv3ZNoDUlnC5XZQK+c2scC4rWF10WlU6uoDf40YUrSRSGwwMxMlu
      pIh091EuZPAGwthsFrxuD21JQtgMRsXlcp2h62QjmSQQjlIu5AlEo2jtJio2Aj4PADaLgCRL
      TE1NEwqGifQPEXbZwO5AU2Qatc2Vw4aOw+WiLavY0CjXWvT3xqg2ZFx2gVypSiwSxuWwsp7M
      Mzw8gCRJ2CywkS0SjUZwWC1gt6PKMvlikUgkhs0q0G42MC0iWqeJ0xsk6HOTWE8SjEQ2T9QJ
      ApgmAuBwOUknE4RivQiGjsUCNrsNVQXTUDFNgfm5KXbuuwHnBYLirhrBPwS4agT/YHGp8O3L
      jtQpVgoXTUn+cpSLFQyuLH36yuLK+TdN9QoMUpPnnn6M509MX3afCyvLW9eFUuGy210MpeKr
      PwR+UZgajVb7osWvbAiei0wmc9GyfCbLhUzdSvniBvL3inargXYRt0i7WePU1BQbmQ0y+fPT
      vGdyF3+Ws3GpswvnGcG11CKH5teQ6w364xOg17HYXMwuTnFNT5SFuQTb4v0U1pcJ9gxSzm0g
      yW3sbh97tsWZXEljrbcY2bcbU2mRSc3jDHSzNj/PDbfeQcRr59nDRxkaGGTm1DSxgT7kRo1M
      XmZ0fJSnH32E/m07SSxNsuOa62iVWnzn8FF6R0fILp/GEekjYO/gDPSQXt3k4Q3794ChkEpm
      uO8nbuP488/gDPaTSS4gOAK4tDpuf4x0vsTQ+A5Gwi6eOTGN0+mgVsghCCIzM6d529vuZXpu
      lqHBcVS5gdUBhunAkCXy+QKh3girc0luvf12lEqa2VSKrlCAlUye7mgX81NL/Pj7fpyg79UH
      hWU3EptnEAIheuIDbCzNkyo2iffEaLebhCJRyuUKLpudqqxgSk26BwY4NXkKTyC0GVrs9qKo
      nU1DMByiVSvj9AaQmjXaHYPe3l5OT00iKxo2p4eBWJBkpoDP5QJrhnyucE6a9EazQateplKt
      MjCxB6WaIV+s4fT66Y96yBbbSO06Pq+XQq1JwO/DbbPQPRBnZW4GTzBMqZjD5Q7g8TrAsCC3
      alTrbRyigc3XjdooINqdRPqGaFfLDMT7cXsDCHYr/d1hnj14kmarD2QJwy6yfWwbzVaLhdlp
      FFMk6HNTq1aIREK0ZZXmWUb4jonRi8r7vBVAqhTYd/MdDPV2Y7arrC0nWFtdZGhonHDQzy23
      3UG7nmA5UUDqtHA7uukZitPnF1lbXmQjnSAUjjE8FCefz1AqK4wODeDzOllZSbCxNE9H7ZBI
      rJwxNFsIgklfdHNP73a7WZ+fwrB2E/G7yK0ukm5qSM0aPd3duD02SmWF4V7/Fg/NRgMEK3fe
      fQ8Pf+fbm30O9mylSLeJTvqdJk3dRrvWJL2yzO5912MVVNaWE6wnVhgbGqGVT57hbZ14WOSR
      p2c4/sQDGIZKTe2wur6B220nmdigVmxw0x13kjl5gPE9NyDVKsQHB/F7vrcTc5VqncH+KKl0
      lla7hWpaiUViKKrOYH8XK0uLqIZAtVggvm2CaDhK1G/HGeql02rg8gTwOGxbhmCnUSBbrCK3
      62Bz4XFtGsVOhwe/P4BbtFMoFKiV8nQMtlKvn50mvVZrIKkGY4NdNCWNTCaNYGqINjhwYgld
      rmJaLFQKmzzZdZl0qYZVAFnVCfvEM8Zzi3qjTrFYwDAsdIW9OD1+orEYNqeb8YkJTj//DKIv
      gCSdG7fUOzAEmr71MeBFKLqAxVRpt2uYmsSp+TSVlxnhl8J5NoDSrGG6fKitBoYpsLI0T0//
      MBajTbtj0js4REdqUthIIPpj+L1uBEws6FRLJUqSxu5tcWYX0gzFI6gdiXJToVHOMjx+DX6n
      ycnpWSZGR7FaHGBRKOSydEwnO8aHmTv1Av6eOHI9jzfUjcvmYGN9kWBfHK9ow7BYUNsNyk0V
      i9pE9MfwOm2EQiGmXzhJqHcQp6BQbqrYzQ6CK0jEK+L1B5g8eYKBoe1EQi6OHznK4LbtbKwv
      0dM/jCbXsTrdpDbSTIyOEQj5yecKGAJ0R4IcOX6KsW1DrMwvsvO6N2DtdBD9HqRmneXFBYa2
      76OSWSPUNULQf2VH/862AdSOxEauxEBvjI1Mjmg0Rr1SpFyp4w+GGOjvIZVIEAiGcXl96IqM
      w+Uiu5HEF4phFUwswtmGoEazUcXq8KBJDbC76YqGNr8WnTGS1U6bWlMmHA7jFK0kU5lz0qRL
      rTaCIOCwW1CwYTUUNrJF4vEBGvUqAb+PRCJFNBpDdLkpphbpiBGGeyPUKiU0rOidFg5PEFVq
      oJpWgn4vFkHAZreRzhaIhoOIVjg+Pc+N+/fSlBS8bhetdhuPy4nUUTePoUotOrpAdyyCJEnI
      7SYaNgIeB7pgR+tI2G3WLSPc7b70anzVCP4hwI+aEfzqzyZvRnT+W2bsvqgRnM8WLmgQXQiF
      TA4wKF7kf60uBE3T6NSq1DqbRnWtWka+gDX08nrnwiSdvrghlMtuZpnL587lS9e0rdDZcqH0
      PU++l9NXWxWKrYtnULsc1JvNretqrQpsxu68POS3fpYH97xyU6Nab3I5eLGPi0HXXhynS9eD
      V57Aun6+vNdWFlH0zZgiQ5WR5Et7jL9fOO9IpFQt8d1DR8nnOvi8Bs16m0OHDqMJVpyCSrrU
      otUoceLIUURfkNkTh1hKJBkf38a3v/p5NDGA2pZptOr4/V4OPvM4pZZKo5JnOZnBZqhMzy/w
      5MPP0tsXQbfYOP78c4h2L4bW5siBY7hCfiaffx5Z1XnwG4/S2xdBEywcfvYA7oCPE4cO0VQ0
      uqIhjh87Rj6ToqnodCSVRrNCYnmJdLFGZr3M0EgPT3zzW5QVBbfLTaPS4OiBxylpNvpjEYr5
      PPd/634GR8apFUu06wVk7KSWV5maegFvMMihA4cJRHupZNaYWUxgU2VOL64hNcssJzPUsmVM
      XeLE6UUCbhvfffIhrF3b6fJd3lbo7COR1UqFTDaPzW6hViqwka9Qr+YpFCoU80kqskk06Gd5
      aYF6Q6JZqyMYKmupDKXcOmXZJBr0sjA3h8VuYXpqDpsoUinmqLc66JpCuVzF0FTq9Qr5UpVQ
      MMD09ElaHR1daZPKFrBg0K7XwCrQ7hicnjwOdufm0VdTQO20yBbLhINBkusrVBsSUqtKKpkm
      VyjgdNhZXFpFtNkw7Q6atSqJtVVassb81CQOXwA7OnMLiwgCLC0micd7OHj4AKFgEFXVWFld
      o1AooWg6jUqJakMi4Pf9YBWgWcuTyeZpSiovzE+jtdpEYiFquQ2eODCPKSdYP7mEHo3Tyc6h
      hncQscn0DsRRZI16qc1GeZ16pc7IyBCFbI5mVUbptEgtL9Oo1rjpttuRJIOYWOGJ51e44567
      qSwtUyg1uPZNb+T44adRrG6KhTq9vQPExAqPHl7m7re/lVNHDuFx94Gcpzc+yOr8CRZTDUTR
      Tj6XpFZusLS8im6xIApOhkZ6qNc7tLUmOgLZtTIRn5vRfXtxWAROvbBGXyzM+MQ2kgunmEkX
      mXrsGRwD/YhWhcRSAcWiEY50IddzFIpNco06d7zxJpbm5kgtLxMIRFhaWwFDJZWpcceNE5SN
      AN2vQgFWl5eJj4ySy2eR2jJWwYJVFOlyOajpVoZHhhEtApViBUXrYBUs1Fst+oNO0jWNsfFt
      iIJJJpfFIYqIrgCq3KDTEVC1Nq1mg/TaKjVNwCdaaEoasWiYltwB3aTVlAk4DFLFBm2pwcLM
      MkNj21AUheHBOLKsoKFRSOdROirdfT3ksxkK1QqiYEOwWun2OJhOlbl+zwgnjxwn0DdIKZtC
      EBxomozP62dgoI+VpWXGd+0gmdggEAzSFYuiaCo9YQ/ZTBmHO4ZgdtAUldxGEtUi0NPV9YNV
      AE3pkM6W6Bsa54YdAzi9QdIbWXbtuxGnU8PnDnLLPXeysbpA3+geKsl5bIEo/T1dzM2cIjIQ
      x9dp4N+2j1jAxdOPfof4zj0IuoTF5WXH9t0EQ35y2SXc3m7Gdo9y8uABYn1D6O0yU3OL7L9m
      P7lkip6efgSquL3djO8c5fhzzzK+dx8hnx9f0I3PH8Bi9yAaCsFYNxGHwcCuG3AYHZwOL33x
      HoIBL5nEAlZnCI+gslEsc/0NO3nh1ByDA31gBUOtg+hmeDhOtdyhuy/GcHeIbKZI78AAUqtG
      b28cU5OpNBXG+iPMLCVxWDUsLi8jw0NEQ14aDYXt23o4ObnM2PZxPOLlxaefrQBWqw2fz4MA
      mx7tbJ5tw0O4XC78Pj+ZbJ5IKMDK4jz+cBfBgA+nw06u2mTH6BCpdI5I0Ee1Wsfl8eL1eHC7
      XBhaG1H0EvI56R0Zx2Juen01BCKhIALgdrlw2KDaNtkx2o8muAgGPMTCIWymRrHWwu/z4Ha7
      8bgdGNiIRsM0qmXsDhfRSBiXy4Xb7cLvc7G+lmbbxDgbyXUCoQh+rxuXx4XNatJRIRr1s7iw
      zMDQEE67HZfbRbveAJuI0+nG5XbhdNhxu1yIThHR4SYUDFxSlleKH4gRnFhPMjgUB0ya9Tpe
      /+UxLdWaiH7v6+LvOc/GxYzgSrEAdiehwPnLviRJuL5fh9Bfx7gMT/DmYY8rweBQHLnTwTTB
      LjouUfNc2q7AuZP/5SnHXw1y+Rywmbr7xb7OTv9uGAamaaIom+nIdU1Fu4w04d8P3l4JoWjs
      gpMfuOABkYudob1YavDLxcXSj9eqVVS1Q6N5cU/1i9BU9YLp3l/k7WLnjX/QOG8LpHZkDIsV
      RZZZWVjAF/CSzBRplAvIuokhNUjkSkRCAbIb6zRkHZ/HTSG7QVuFjbVFnL4gxw/NoBkdFicP
      o1jcuJwi9XqVcj5NR7fw3OGn/n/23is4jjRL1PsyKyvLew9vCAIk6Ml2ZNuZ7unpMbs7s0a6
      q9DGNe96UIRe9LRPetGDHiTdCN24uqG7e2dm3czs9Nj27Gl6giRAgPDelve+KjP1UEQRIEDb
      7CZniC+CQVRVZv6ZVef8/3/Of8758bk9bMSypKIr6Ex2stEw0VQel9NGNhHjww8/pjXoYTWc
      YeLGKILBQCmbaLa5OD+DoDcTXl1E1Rn47NOPCba0o6PO6PgcRi3Jzz6Z4MSBVr44f5Ebk1Nk
      1paYWwvT1dHB7NWLDM0sYhErvP/JZaLLG1wfHmJ6fJ6DhwZYX1qgpMLnZz/D7fZhNBmoVKpE
      Vpe4cX0Ym8VAtlRDKedYDScYHR/CZLITj6wh6Bt7+z4Md9cFisQSiChk8yVEVOKJJPlcDtlg
      IBaLIhvNWyqtaUxNjGOSJUo1KOTS1DWolYtkC2XMJiOT07dA0KMTVJKZPJIoEIvFKRVzyKZG
      SXJJr0cTBCrlCqqqkk2nUNChKTUKmQjRlIpRBp0I6xsRJF2da8OTxKPr2JxuMskkZquVeCRM
      NLxGUdGh02rkixX0osbozWEcgTaqhQz5UhVREFCUOkuLS1RrNfSaQknTk443Ksml4lEK6QjL
      8TI+l41EPAqCRCGfQRUkkrEweqOZarlIpVYjFk9iNRvY2FKl7mHYEQqRmLiOuu9F5sfOMzMW
      wWx1EF/ZIJ7I43ItkipWcRh09HV3MDU1w9xqin//Nz/kytBNzrx0gsnpBUZnwvhtXpaXZhA1
      laWpKRamh2jpPkZkeZq1/CgBpx2DLLA2ep2qr5fF5fPkMip2u4nuzha+GLqM3+NgbnaOC5Mz
      HAr1YbdbGb4yervNv+DSpUv0HzrE1UsjePwenEYTsl7HF2d/T1+vl5tzFbqD+xAkEx6bkXgy
      y8vvvcONS5cAMPlb0M9NM3l9iLe+/Vcsj3yBy9FK9babbujyEG29hzAIMstj4xhefYnxs78k
      aenAaZD49a8/AbOFoNmE1WFAlXRYzWY+++i3DJw4w7GB+69C7sbM9CT+lk7mF+cRNYG6JKKv
      azjsBiYn0jiCAWbmZjEKMHzjJkarFbPJgCypbCTTpHM5TPoklXIVoyzjdTup11Vi0SgRpY5Z
      D8ur4DWJYHewMnSVEhK28Ab1ap2SzojbUEeV7KBEyBcyHNzfw/j4dZxnTlMtJtlYXyZb9ODx
      +RAoU4gvE8vVGb81zsHjx6nX69hMBkaGL1NVDfhcdqxWKwDzc3NIZgcSoAkqmlLHINWZX1xE
      05lJ5XMIE+P4+g7jUOu3K31rTE9O0trRRiav4DMnKRpcxGamSEaS2O1mlHqJaCRGrVbDFwxy
      n2qI29gxAkCVs1dv4jAZsVqMSHoJs8GM2+3HYhWhXmZpOczho0eYGh/DINvpH+hlcX4KQScQ
      SRbxOT043XZMRpFKKU++JtLT2c7AQB+TI6OYPT6cehGdyYoOA5HlBZw+L35/CJfVjDfgYWVu
      gWSpigGVmigzuK+VlXCOXCp8u82eRi8l6NFTpbf/AEohidntQ6jnmF5cZ/DQADrZhttS49bM
      Iiarm1xqg9m5VfLlGhajjng8QXvvICOXLmHzt5FLxikh09fTSTadoKKoSGoRg8XE5MwMdref
      2FoUncWM02KgrbWToC+AzW7AbjITyZUwSwJ1TaBeKeNyOR/4I2wdAWqVAolsET0qZRU8LhcW
      owmX00q+UCZdyOF2upElXbPSml5QEfR6dDoDZosZWdKhVEtkCxVaW0MoioJRNiCikC/Xcbvd
      uG0WjE4XKCqCKBAKtZPNZmjz2rC4W8in4shmKz6vF4/Dik5nQkVFrZRRBQGrzX67HLqM2+mk
      WKnREvKSSqUbCTqpPDZTo6KdXqeRyRUItrSi1auUqhVETSGdL+GwmUmlM3gcdjSjDUGr0RIK
      kc2kcblcxJMZgn43lXIFTdRRK+UxWx2kE3EsNgderxenw4xCIxpAqZZAp0NvMD1UAd1HNoJH
      r1ylIhk5deLwQx3/rJLLprHZHyycXwcPuxJcyqTRzPb7FnvdZGFuGtFoo7P14SrgPW02Vpfx
      hNqRv2YPyF4oxDPAH1soxB8Sz2Dlzj32+PrYU4A9nmv2FGCP55o9BdjjuWZPAfZ4rtmxDqDW
      S7z/018gyBY8bseusd2LsyvY3Q4EGpXkUjkNk1Hadmw1u8ZG2cDUjQla2vzNzzbft++yO+Td
      iRR3XiuMDd0gHY5i9AeQRaH52dVLY7S0+kAQdqz+KdU8f/eTDzCpNUanJjGJ8MGnn1JSJVr8
      nodK3Nh+jMr6WhSrzXLP8z751a8ZnlyglC1QK+e4cv0GeqONiaufk5fceB3mHedsXQfY4+tl
      hxSujlzlyDvfp02f5R9/+mv8XhehtiDZaJFMKkosHMPosFDU6kxe+YLBF46RiuuYnB0n1B5g
      duQqP/wf/j3VyDRXYxEMqRg//i+3ePWdF/mnv/sR33rvNDNZF3/x1nH+4//1f/LOd77P6LVr
      DPZ1MLoWx+twsDw+QktHF9l0HFugF0EpYzQY8Urw+aef4bBozMwmCXW0YdYM/OKn/wgGGz6X
      k8npeQb6+3jlzMt8evYcnaF2ChRRKiUmxuZ453s/YPTiBVZnqtyY2cDjtbF4a55Au49vvv0W
      P/vRf0Xn7EBJr9PT18vEYgSvQ8bZup9qNgb1El98kcbq8tPisiGJNdaXVjEGu3jjzAmK+SJl
      RSNuMhD02qhVa5hMejI1icLECAPt39jtd9jjKbFjCuTv7WPogw+ZnF1E0EQUtcbcxCiz88uY
      bF5OHNxPqDVEsVino3OQfW1+KpU6iWgUm8lMZ1sbwyPTBFq6UEpFnN4gJw72MTTUKBNu93ei
      lBrBU33dHYyOj1Orq9Rr1dtl2BUOHzmKQ9aRzKuoqoKqEzfTVxF0IGhioz2jCXQ0y5TXC3EO
      9LQyvhJBBDxOOxNTw+hFE4JWR9PDJx/8hqrOTK2u3C6RrjRKrt+O3a/VaugEgY7OQXqCPsKR
      GI5AP7c+/4Cu/UepV8toikpdrbG+Os/Y1BSdvR2MDt8AINDayb/5679ELwmIsojZJPP7j39B
      saYnnMrsGhC2x9Nj14WwzTLbjTLZEqraKJe9ddC/u+y2oiiIom7bsVuP0TS1WSZ8Wyl0Udcs
      oa2qjTLsd7ex9TqbZbg3z22UH1cAcVvJ8bvZvMZmaXZg29+3j2J67BZ9g0eapcLvlBDXmtdX
      FAVBFNFUFVHUAeq2Euhbubts+G7sLYQ9PfZWgp8B9hTg6bGzOG69RDJV2nHgl62cVslE+Pzy
      dYavniORKdzzuK3V2h6Wzb28HomHqDo3dfMGKxtRUskYNQ3mph/93vZ4ttkZDr0+w2/Opxjc
      pyearhJymKjrLCzNjnLq9KuMXb/OqTOvk4qGm5XTKqkYq/E0nb1djF27SW9vF5FojDe+9W0W
      R2+wvLaBV1ZRvT1M37pJXZW4FEvS0t5JOp1FUsoosgW7vs7w3DL7e3pZhLXe+wAAIABJREFU
      mptiZH6dTruJtcgGr7/3p4RnxpiaX+XoyROM37iKq7WHXCxJT0eIbKbA9Ow0fp+X5XCKd9/9
      BtOTYwiCRDEVJ1sVMZPD4WtndmaZM6++SD6W5FeXLhNsbSO1sY5qtPPu26/w8ce/RTA4yKyt
      8vJb7Yxduoipa4D1kSGml+Zpc3tYjCR47713kJ6z7LU/NnaMAC5vgPb2VpbHZ1CqCrLBwMry
      Mi2BVtpaAs0Kb1srpymV2u2qaxk62/tZW57DadaRKlQJZ3Mc7vVQNVjpPzBAX38PayuLOM06
      ppcyvPr6K8wvL1Itl8hlSvR2tgI0q8xVaxInugNkqyq3xsdxmnXcGL5JuRinWINcLMzycpzJ
      hRlMNjvx2SmOnnkNg04ksbJOKpphcnqaar2KJBsZ6OtsVHdbWiKyMIO9Y5B8IYnREsRtlAGl
      WVGuva2XloCXkNdLW0cHofY+gjYDM7dLthdre67LP3R2sQE0Rq6P0d4RYGktQdBpJF3VaPPa
      iWTyZOONCm9uh7FZOS3o992uutaHQSchy3VujM1y6uRxSpkk00thDu1rQzPZqRUzyJLIjbFZ
      +vbvx+WwEl5aIFsHl0lgNVLgxPFBVhfnSJTq9La0IksKmtGOUM1xY2yW/p52ZpeW6WrrYG55
      lUN9+zBYjFy/cpX+gX6MDjcGnUAmFQejg2omQiRdpqvFi8ViYejyVQ6cOIlWqbOyOIW/o6/h
      tVEFbA4Li3PTCCYnbosJm8OGqlQZvTVFb2c3iHWEusLEwionTxx96Myj+7FnAzw99ozgZ4A9
      BXh6fOWhEFt/2Pj6ChcvXmRmdpJovGEIRxOPvh9XLLrTIH/wdVRiG1E0Td2R9B4Ob7+epioo
      qrYnlM8BO+sClfOcPXcBo9HAlUtDGCSZoes3cNmtfHHuAharhStXr2E0yQxdGsZgFLl8aYjl
      1SUE2cjw5cvIVuvt6m0VPvjk17SEurCYTRjMVuamoxzu9/Ljn3yB3WlBpynMT42RKwtY9TVS
      ZZXFhRXUapmJiVEKVY2VmVvkygIel4Xfn/2CpZUYhXSYRL7C+vwkubKATlUIL80ysbCGUkhz
      beQmVpuJixeGCARdXDx3gWQ2i5k0P//1FC6bwtDILTo7O/ni83OsrkVx2iXOnx9Czc/xyUSa
      sc+/wBXwc/PaVVSdieWpMTDYyERWuTY2iUWCS8MTCJUsc4sRKvkEE/MrKIUUs4sRcskIy5EU
      oYD3vj/CXijE02OHAiTWV0kXS0RnpinrZWQ9FHIZxsaX6ejwsbK6iqZUERRjo7ReTOOlI26q
      7n7m3v8vVAMH0IpJJJ0XynGcoTb6e3oBEEWR1aUone026rpWSpl1Cpk8tWoVRZBoaw/wT//f
      fyMvCpRzSYq5CsnwOpJORhEkpOwiUvsxdIUEc7emEAwmqNVRBIlsLEm0WMQu1MgXNPZ7RD69
      PE170MwnF2b5zvffIbOxSldPOyXVSyyxzLFWC4s1O2q+QqulwLlrc7QFzNRVE4HeQYyI9PgV
      Lk0XEIQiiWiYY8eOMr+yyOLEPJaAh1Qqg0EnkymU2JiepKyImGQj6UIJQaxTril0PCAtcU8B
      nh47pkAGk5FqpUKgqweDCCajFUGQePmVY8RjaTpC7QiChGzSIelFuvpCGKxe/DYDR7/9Awy1
      FA5PiLZ2P8GOThyijoWFOVbCjd1TOnqDCJKV9k4bXZ1ttHa0oJM0DAYJQTRw+MQxTvSG6Dv8
      AoJOxd/e0fzc03uEpZEv0NvddB3swWp3Nj9r7WjBplW4NjpFW0cblkA7p88cJ5lT+earRzn7
      6edYAx2IRjfF9DRdQS/XFjP0+y047BorRZm33zhJMqfS0tNHdOomfr+OaNFGq61OwOnj2LHj
      ABgFEYfLjVWWkQXQ60GvF+k9chCDxYosN14b9XokYS/g9lnmj8oIXl2YRTA7aX3AlONZY88I
      fnrct3tSa4WmsbrJ3T9UvV7fEeBVjEcp7OIjv9eP3Hxf06jXFeLhyI5jUtEoD3K7t3Xvu6/w
      h2Pby5jPjN0knS832tdqRKOPvsfXnuD+YbPDBgivr4NSZj1RIJ9Y4v33r2N3WlhdnCSaLvDh
      p7+iJdRFtZjm0oVhxq6Posoyaq1KOV+gkI3x2W9+hd4XYuTKNSwmmWvXrlJTNH754fu4LC6u
      jU7S3dnG7NQ4cysbXBn6DKPRiU7N8JOffYhSiDI1v4rdZuPC+Yt4WtsJj0+jsxo5d+ELdHUR
      nVFifjVGrVxgYnSYQl3HxuIsVUFPJRvnwrUxzLLA0IUhLE4vV65eIp5M09Ua5OzZj1HQc/Hi
      JQ4MHuLnP/4proCDj9//GJ3NxPrCDIl8Bb/XyfmzZzFYLFz74hJFRSOyush6PEMxvcHiSpiP
      fn0Wh8PO1PIysqqRKRXIRNa4cmOElYUZLI5WyuUCRkkhmqxhteysGL1nAzw9diiAUIzxo19c
      QisvU6oaCLQdppRZo1rMsJpJ09XZTX9PL5lognAkhmQJ8MILB5kcniSfDbMYy3KyN8TFGzO0
      B8yM34xw+r23CE9P4m5pxaIXiSQzdHd3MX+7vHhr334ODxzAYJSoFSSMRo3j/UH+7oMRDvb4
      SeWqSOUSt9Y2ePsbrzN64wKffnYRnaaSTUSYWo4h60XWwzlePDnIZ2c/xq0XGJmv8d57x/np
      //OPvPZnf0o+G0OKLmPuP8369HVCvg56ejvI5BQODbZTqZnRyuvMjM0jGEx0dYSYm55AbzCi
      qjZSxRjzM/MookghU+aV0y+RLygYygmcnfuILk6SLBYpZ9L02A24D51geXyZslbEZxUYnarS
      3mbd8SPsKcDTY4cCyFYXilrAZnZy9PggksGA22YgkYphdfpxSQJl9Oi1GolUmgODbczMhhHJ
      kSmrdAX9jC5ucOrUUVbXk/T29uD1OdHpBDLhMJLFQTGXp7u7i1hkFdFkZX9LgLmNBEFfgIXZ
      mwQ7e3A4XQQCftaXV+nr6cNqNtDe5uP87y9w6NRrmGQ9IaeZvpMvo2RjOH0BOjvacDqs2Awy
      G5lco22PHbfXzdiNa/h9bXQO7Gf44ue09RzC7bRhd9gol2LkCuByOrA7rQiyiMHqoSXoYnU1
      jN3t4tr5ixw4dASnRcZosOJ2SGwkcqCksVjbaOsMEYuHiaeL9HV3YXM4kS12DJKETa9y9dot
      2rr95Es1sukEDru9+SPsKcDT44/KCP7K0BTy2QrWXdIZnwR7RvDTY89H9zAIuq9M+Pd4uuwp
      wB7PNXsKsMdzzZ4C7PFcs6cAezzX7CnAHs81zZzgvR0Hnx47N7zb4+uiuQ6wsrLCysrK076f
      PZ5zTCYT7e3teL1fT0BjcwQYHh7+WhrcY48HUSqVvn4FOHbsGMXig/d73WOPrxqPx/O1tdWc
      Au2xx/PInhdoj+eaPQXY47lmTwH2eK7ZU4A9nmv2FGCP55o9BdjjuWaHAqzOTvHpp7+nep8M
      vUR89zKEQ1cv8sWFK0/s5vbY46tmx/4AEwuLvPPOu4xdu8LyRoyOA4c42GplZiHFrYlZ/D4b
      c1OznDhxhKVUlhaPA70ocfjIIdaW1nnpjTe5NnQZRTBRzUQoagYcMkgWM7H1BIHONtYW5jjx
      8qu0+N1P45n32KPJjhFALdXIZLKspnIc6nIyNrdOOhEjEU/T2nEEnaSjs6cHakXOvPYa5USC
      lUijuOzLZ17h048+IB7PcOhAHwVVRCdUqWkGDnY4WU6VyOeyWEwyy4tLX/vD7rHH3exYCa4U
      s4yMz9O/r5355QgD3S1MzMzTu68PQWcApUoyto7R6Mbb4mX0wkdYu07S1+pmfmYCTW/BYzex
      FsviNIpU0ONxOXDYbUyN3cQRbCW8NEfnvkO49vJs93jK7IVC7PFcs+cF2uO5ZocRXKlUnsZ9
      7LHHU2GHAgAYDIav+z6eaer1OucuXWFa8yPqdv3KEAQBTdOop8Mc9eh4+cVTpFJ3iu1qmtY8
      Zutr4faO3Fvf35ohptfr0TSNarWKIAi4XK7mOV8HS0tL5PIF+vf3MTU9w6HBg19b218He1Og
      B1CtVvnRrz8j4PNSK2S3faZUy82/NU2jGFsln07i9PgoFApsNa/uFlpRFHcI/+ZxmqahaRqi
      KFKpVKhUKgiCgNFo/FqEX9M0VFUlk8nwwUefEAj4iUSjBPw+Nnap3H33MwBEIhEWlpaZmZtn
      bGLqK7/nx2X37myPJnMLi5TsbczH8uxziCwrCoIgUi8XqIbnMHcfbR5r8rRwssNFyOukWq02
      398UjocR3q3HKoqCIAiIoogkSZjNX63XrFqtcvnqEKlMllAwiFHWky2WWVxcYmppDbPFwvED
      +3e955ujoxw9cqT5XiAQIBwOczNewmgwkM5kcDocX+n9Pw57CvAA5sIpdHofK+U6wXqUXmOG
      qqIRy5YQQ73bjjWX4xw9dpBqtbpjqrPZq29ltxFiNyXRNA2LxfJY91+r1VAUBVVVMRgMzemV
      qqqI4vYJQLFYJBZPkM0XOXZ4EFWDF44eYjUcoauzg5OD/bsWTxAEYZvwb7IRS2B3B0lsrGK1
      tD3W/X/V7CnAPZibX0DQScTSeQRfAMlsY72gMbc4jTnQQU2pYzbeKXWuKnVe6PZiMplQFKVZ
      7PbuaY4oituUQRCEZmXorUK5eZ5Op8NgMOwQ1vuhKAqaplGr1ahWq817KZVKOJ3O5j3cjdPp
      5KVTJ0hnsiQSCUKhEFa7Hb3BwIvHDiFJjyYuy2sbJLOz6I0mPjkb5923v/lI538d7CnAXWwK
      RmdHO8lUilaXmflyEcloRrbYqYoCgmzGYHYCUErHEAWBw26Bfd3HEUURnU6Hoijbrrm1Z9/6
      +u7PYKfSyPLOTTXuRz6fbyqVJEnN+5FluTkC3KsUS2trK62trc3XwUDgvm2VSiU2wmF6urt3
      XsvvIZ0rMnDiFeLrK6TTaex2+yMp81fNzpXgSuW59gL96rMLVBWNb58+jtlsJp3J8NHnF9gQ
      3ZicXigkEUtp6q5OdHqZ9NQVXupv57XTr6CqKqVSiUqlssPrAzsFe/PvuxVg63t6vR6r1fpI
      QpPP55vTMFEUsVobI5UkSTu8T0+C3Z5hk+Fbk6RUI6VCDn0lg1Kt8O13np2R4NlRxafIRjjC
      lZvjALw4uI+1vMK/fnGD89dGyOaL2LwBzO4A+cgKaiaCIsqouTgA9n0n0VscVCoVstlsU/g3
      /93t+tzsmbdOiXYbATbPN5lMjyysWxVMVVWKxWJT+L8K7nd/xwYHGAxa8ZkEKoIRwd3G/DMU
      B/bcK0CxWOTW9BwLC4sNoRMEDrc4yFQUstksP7swzqtH+nFVYhwO2aiho2Z0one3NC6gqbgt
      BorFYlO4N3vYrYbtg4zczWO22gaiKO6qIA/CYrEgyzKiKDanPdVq9bGv92Xx+7w4LSb0sh6L
      qCAKwrY1kqfJc60AlUqFhaVlFlIVdDYPgiBQKZfp7whwJGjh5GA/brHI+PwSpw+0098RwGc1
      UggvUslnUJU6g/oEfb092Gw2BEFozq03hezurY928wbd7fvfen6pVNpmTzwMm3aIqqpNG6BU
      Kj3Wd/SkCAb8fOPkQXxWGYfdhuMZcYk+t0bw5ZFxbixE+MHpQb510o7D1nAzLiwt8/qZ04SC
      QTRN4/VTRzCbTCSyBdRqhRg2LB4zWjGNkFrixR++1xRgnU63bauje/XsW1FVtfn53YaypmmP
      vXWSJEnbFs/0ev1jXeduNlelH2Qn1uv15rRrbX2dttZWxqdniSsmFq4N8+2333oi9/NleS4V
      YHl1jWvrRUqFArVqlc62NqbmFqiUy5w8dpSNaIxcNoekl/jo+gx2mwWvXmUmlkPv70GtVRDN
      doppgWQqRcDvb/a0WwV2a8++2btvtQu2CvxudsDm4tfjeE30ej0Wi6V53Ud1Ye6GpmlcHR5l
      I13gT958+b5Tqc32BEHA4XCQzWZZT2RxdQTJpb188vsLWGx2jh7Yh8lofKz72W0t41F5Lr1A
      //Cbz8jki7TZJRaqVg632NA0KJQrHGjz8buPPqFib8XldPCdU/sZmZhlMlXn7f0ezObG/Dpf
      KFLXNA7s62leV1EUyuVyc+W2VCpRq9Wan9/tFbrf+5sKYzAYHnsR7ElRLBY5e+EKBocXVafH
      a4Djg/0PPK9Wq3H1xk3ikQ00o43Q/iPoJP025Y/NjPDtN8888Fr5fJ755VVkSUdvd9cTG9Ge
      SwXQNI2pmVlGZpZJW9vQlDrW/DoFezsdYoagw8zIcpy8pueN/iCSoPHJXAa3UKTFbWc6VkAQ
      RN492kVHa+i+7WQymW1z+N3WAzZ7sq2jxaYtIUnSI7tBnyS5XI5zw5M4Qp2Qi9HfGcLj3j2V
      NRwOE7w9dRyfnmUtVcDsDjYU2bR7GMf4pbP8j3/+vQfew89/+Wv6Xn6bhbHr6HQ6jvS04HK7
      Cfj9X8qofy4VYJO1jTATc0uMzC7j9Lfgs5no9phpCQbIFopEEhlW42kEYC1TxuBpQScb0VQF
      QdRx0l7i+KED922jUqmQz+eBncJ/L7YeJ8syRqPxiUxhHodffvgp7p5BSK5y5sWT9z22VCph
      MBh4/ze/wz9waofQb7WHNE1DUeroc5GHGk0Wl1e5tRJHqxTQqVUG9vcxPLPE/hYPgwcGHvv5
      njsb4NKNUaYiOfr8NkI+N68cP4TV2vD4bB1W3S4nTquZEwf3MTM7y9svtBKJJ4hn89jNRjSl
      TH/fvge2J8vyrgtdd7PbAtXmNOjLCP+XmSeXy2UKNZX61Ajff/cbDzzeZDI1pnwm567CL4pi
      M8BPVepU1mcoVCvA/RWgXC4T8Hlw2CxUazUCfj8AnW0tX3pkfO7coLmKQs3ewnjJykfTKTLZ
      LC8fO4ReryebzfLB+SE0TeP9zy7xn376AVdujnMuquNnn1/DbLYwtxalXquxEknw2dVRVjd2
      Dw/eyqYAb53ibLJ1zWC3ofxRwyDu5ssIyLmLlzBYHJw41L9DCWOxRiGEzWdJJpNcGR7j0s1J
      7F7/jms1evzGVLBSLpGcH2N6fomaonJl+BbXb44BkEqluHLjJuvr681zjUYj1WoVvV7PuWtj
      bEQiX/rZNnnuRoBwpgQ2J6qqkFmd4Z8jC5wZ7MZtt3JpYoFSPsviSoB8uYoj1EFdhXqlxLHO
      IJ+PzlMsV7gUqVMrSwixGJFYnL/502/ds73Nnu9uN+hWn//W97e+NplMT23qUyqVKAom9JUM
      nZ0vbPusXC7zi99+xHfeeYtMOkN3dxdfnLtA28k3eZiA7fmx6wRaOzj62hFKhTw6m518Ns3F
      66MUCzms7QPciiQoV5fo6eoEwOForLb77QaU2uO5hnfjuVKAVCpFRpUxAvr4HJaWXiSjmesZ
      jfLsPGIli9sfwm61UJYs6Cwe1pducKy3j8N9XVxZGUUr5DGFrFSLBfxWPTHRwZWb47x45N6Z
      UnfPfTff22r8bnWNPgn33pdlcXEJh7+VoLRzAW1+YZGjb32Plegq0dVFbk1O4fL5yUVXsfl3
      D3ve6unqP/FKU+HNNjsAFrsT7E42xzub000sNk93Z0fz2Os3hqnbQpwfm6X46WccPnaCYwf3
      f6lO4pmcAl0fm9zmPtyNYrG4LenkYXA6nfTaVGqpMC/sb0NNbzR6aEmPOdQDjhYSRQWX08l7
      R9qxlSJYXT6yxUYYQa2QQXC1Uk5FMXuC5Jw9GO0eLt+a4+L1m/dsd3NlFrZPeXYLS95qC9xr
      EexxY3oeZUU5kclSKuSoqdvbUlWVeLGGAKwuLyFYXGB2Ye8cZHZ8lHIx/8B7fhivjU7SU1fh
      wpVrDI2McvbCZeLpHHaPn879gwT7j5HFxM1b4zuufz8WV1a3vX4mRwBRvPcXpGka4zNzRAoK
      mUQUm05lcGA/Ho/nvvPlTWF6+6VjKIqCJElcnVqhlolQl4zobW6MLj/1Solb03McHujjvw8G
      +H9/c4FKVeFNTaPbqWe1LmF0eBs9mqqAIGLqPMzl+Xki0U94761Xd3jRDAZDMyll0wi82/e/
      9W9RFDEajfdVgEdx/Wmaxscff8LY5CRmi43XXz3Ngf199z3nxRPH+O0nZxlZqdLV1tKMKE0k
      k9R0ZgRRxGyxYnAH0bLpxoglQP0BHdfDIooiqtWHUq9h9IawuBWs3I6QNRjxt3UBkMtIfHFt
      jEJNRdYJnNjfcd/Ms0g0Tlf7nVHqD84N+tnlG8jedqTbwl6vValVKxQzKayShiSKdAXdhILB
      Zi96+cYoi0tLtHf14jQ0wgP69vUydPMWN1bSqDoDksPXbKMYW+N0l53WgI/Pb86Tkd18q8uI
      z+vl2q1prtyaJdTWTi68jD64D6weqsUcoqSnQ43xnW+8tu2eq9UqhUKhmea4yb3CoDenQA6H
      40tvoTo8PMLI6CgFwYDF6SGbzWJUSrz6wnEODOzuPrxbwc5dvIxOFDg40I9Op+Pc+DK+1g4W
      r5+j/chL6KSG92xtYQarw4nT4//KIk/vh6ZpiMllQj43DoeD5ZVVsrkcgt6IXifQGgzg827f
      f+yZVIBUKo3L5dz2XrFYZGpmjozBjcliu+/5Vy+epyXgxylrjCyEqWsCzq6DaJUipXQUo6cV
      UzlJhxVWYmmKrh5ESUJLriJqKvl8jn/33df5h7M36PXbGJmcIxQK0R9yEfS5+cV4gm5jGa9R
      AJ3MtbiGZGn0Os7sIn/x7Te33c9mTM/WleF7rQpvYrPZvpQHqF6v8+mnn3FzbolaXeXQK28S
      i0Wp6m04ainMJjM+p5WBzhBul2vbvf7s1x/yvXfeJJFIEAwGCUcijC/HEAxmTLUsigamlj4i
      E0OUVQG7L4Q70Hqfu/n6CC/PY3d5KeYyKPUaWmYD38GX0Okk8ukkci3HK8cGm8c/k1Ogm8sx
      DqoKvi27BS4sr1CwBjHJD1ZOnWwkqfeQUDVsXXe22xSMFizBRuZSTQ4xq6qYzRonXXWoFxgr
      xBAtTv789ePYbDa8Bo1CNo0z1Ela03F+Jkx/MolkbEWsJjl5+jVuTc3B+lXqbUeQTFZqejOZ
      TGZbtKMgCNRqNer1+j3zg6HhLpVl+ZFTIHfj5s2bnP39F7TtH6SjZx9z05PI3nZqpTydBwcx
      GBt5BmNrUdozOTraW/nNJ59zdPAAxw72cfbqCNl0CrNzHXQyVocLq8MFBFmbHsUsCFg8AXSV
      GuHF2W0KsHnv93rOr5JgRyM0ZdO4rlZa0N0uZWN1uoHtq9jPpAJYvSFubSQIxGL0dHdjMBgY
      HOhnZHyKeMl4+4d4MPebJyu1CqIkk1INXF5MoIkSOvToPb38ajJF/foiequf/Noszt5eZECU
      JNYKGUS3jryuEZ6wmshw6sgg0/E8RawUTH5+fHGGdwf89HR1NNvbTJTZvK/NKNBNdDoddrv9
      icXquz0ePKE23nj3+wiiSKlaJ29xY9BcrCzO09beidFixeLysVbIod8IU63VSCfjhMs6vN0H
      uddOva37Dzeeo1JANjmxOj0o9Tq6296Yu0PAnyay4f6Bds+kFygZ3cDqdHNxZIJzo3OkMxky
      mQyZTJrk1PUvde38+hzG6ATm2BTlxDoGuxujrwOjO4TqagdAb7Zh8rYhGS04e++UPZEsTmqC
      TD2+xEv9jWPfe/UUwUCAwm2FqGXi6Mx2fnltlkLhzr7Ld8/lNxNTNv9tjdyEhhDdGLlJsVhk
      YWGBsYnJh35GTdM4NzRM98Bh8rlM45l0AmgamqJgkGXi68ukliaJrS5SyaVZXFvHYnOyVhTw
      tHTc9/q1aoWLv/knijUFhy9ER/+hpvA/6yh3ORaeybvOrc0hqTUOn/4mC8MX0HpbODc8jrur
      H5/zy801DU4f+twSql5GMjVsiU0hNNjuPbJomkZqfgyrUMFn0dMWbBh6I7cmWdqIURdcoNQJ
      WXXohRyGVicWy51lIVmWm/P/rUam2WxuZm9tZX5+gS8uDzE0MY+jpRuj2YJzfZ22lpYHPuNG
      OEy+qnL88DHi4TUEQcAra2QLCbB6KWTLHBg8gpZYor+7g8m5ReruHuyqisG4s+zJ3ehlA698
      568eeNyzSCYZg8479uUzOQL84LvvcrKvjczyFKcODeBw2DnQ1YqSiVKOrVKtlB98kXsgmaxE
      JS85ZzeSuaEAuyWr7JbWaA924LTbSbr6uTx8i0qlwtB8hKreSr2QoVbIElHNuMwGzhzdHiSn
      1+u39frQmPMbjcZd5/vBYAC3w07XiddwBduoFjKYHjCcQ2PkuHprBrurkeHmC7VRzqXp7e4i
      X224YOuKiqZp5Mt13v/dR8QyeSS9/FDC/4dKqZDn+tnfEjJtt0meSQUQBAG73c7bZ16gWCxw
      4+YYvd2dDLT5sBj1aI+YIrj92iImTwhRkhEApVa9nay+0z251YirrNzih8dacFpNdBtKpDMZ
      SuUy3zjcyV++eYJDQQuS0UIttsRsLLejgJROp2tOgzave78VTKvVyukXT2LKb2AvR/mTVw7j
      8dx/R51arcZP/vmnrIWj2ExGNE0jl06iK2f5zY1ZTO4AmqZRrjfm6PbWXnzdB/D3Hvra84Q3
      FwK/LkwWK8ff+DYC2xXgmZwCbZ0iHBocpFqtUqvVuDa7jjPUi/CEvrh6tYISnacum0iuLhA6
      8VazfdiS0VXK8b3TR/H7fLz3lpfR8QnMZhexaIzZcIqVeI4DXa2IC8uM1ascb7Xv2p7JZCKX
      yzWfzfiATKie7m56dpbb2ZViscjf/egntBw9jVwq0tbdjSAIyKUEyAZEd6O+jyiKKJKRYj7L
      zfOf8vK7f/ZwDTxhHnUx72FQlIaXLbmxgqYJ+No6m5+V8jl0pTSyYbst9kwqwN1fjCzLJJMp
      dAbTDuFXVYXwwgwmmwOL3Yn8CMN4ORWh1yYSQ8Z48hv3LF3Y79DovL16KAgCR25XSI5Eo8xM
      RLFIfuZGlvnusQ7OnDpGOpPZtT29Xt+0Be4OhntcarUaer2ecDh6N3WhAAAedklEQVSMZnHh
      9AXJpRJkUgn0hRz7An5iyTRUNRAEyvkMzlIUUQ0QDAbIZ1IP7VV70jzIW/QoSlJIxQkZFW5M
      zGAzSDj3HWt+lt5Y4mCrm1D/ztyNZ1IBNtns+S0WCwvLywiFMpl6FUew4YHJp5OkV+cRTFZy
      K1O42tspZWXUbJRsXcPo8CHfZ9HM4m9nQ1URdDo0RWnE5rB9ClQvF+nr9u16vt/nwyTNAKBa
      vZwbX+L1QyKLK2s47PZd0/asVuu20olfBk3TuHr1KqdPn95WcS2fTuJubcFqd3JrbpxcLEwp
      V6WltQ19JUPJZKacz9B55OV7lkl8FniQ8NcqZTRAVRQ6nDJdbS3IsszoYoT02gJeW6NM5UsD
      vc1Qjrt5phVAluXmauiJo0cQBIGh4Zuk1hco11Xq9TqdfgfBYIi21heb5716tJ/ffvI51298
      jLP3KJZQz+4NCAKCTocAZOeHqaHD3X0IUa+/U+NHFFkJxwmFdqY+xuMJ6nprM4IxUxNJZbIM
      R2vURqc4feLQrs1utQceB03TSKfTXLx4iXffbYRiWywWzFYblUyC9NIkpdgaVqebLr+TN773
      Xf7rT/6FWxslbNU0Z975bvNaCxMjtPb0o7/HAqMois+UX7+ciuKSatRqNaxGI4l4HNFgxuwI
      Ui6XmYvlEJQKRwd6aNnlN7ubZ1oBNtkc5gFOHm0swnx88TqFco7JtSinTm5P1ZMkie+/+01y
      6QS3Ri/Q5gygN907sVwD7PtO3KnFE1lCsnuRjGZ0spGh9QwdoQiBwPb8U5/PS0BeZLPEk2rx
      8NlKBZ3Ny8j6Gq8cf/LzXGhsWvGjf/opPQcOk0gmGyORycQbR/spVyoUPC48PYcoZNOg1onH
      E3jcTqJrYYzu7bEwwY5elFrtngrwJIV/68j6OBTScQ63uXE5t4TJ3M7Ky+Vy/H54Ck97Lwa1
      /FDCD8+oF+hutk4XisUiH//+HDJ1ju7v4bvvvXvP8956/XVErU5y6ipK7cGh05vemUql3Mj9
      vf1DyU4/PxvZ4MefXCWbyzWPn5+fx2Xe7sPX3RYkVW8m+RVVP/N4POhFgYqm2xa31dHexsRq
      HKPBQLmYp5SOMTAwwMziMmlFT0dvHzoRCrk7NorRbMFo2X168KTZ0Rk8giKUCzn6PKbtwr+F
      qYVlPO2NcvXF8sOHyf9BKMCmS/HW+DgffvwxolLjjdMv0dISwuW6twEXCgX5wQ9+iFkpUM2n
      H6otURSxt/XB1h9LEJBtTkpmPz++MM3PPx9iIxxBkGTmc3eKW21dMzDYXLx/bY6p2YXHf/Bd
      0DSNy1eHMJgtmG12Jhe2x7cv3LrBpStXUdJhXn3hOOsbYdZWVmgNhQg6zLx5ZB+1jdkHfgf3
      aju2Mkf80k+Inv/7Oyme9xgldsty2ySxtkR07d41QrceWykViE5dx+tx3zO+qFxvvFfMZ9nX
      HiSVSrGxsXHvh9xs51mMBr2bTDbLyPAIg4MHcTgcj5QBtLq2xujENCPLCbwDpx76vPjUNWSt
      huPAK8DOYXufEKOKxKrQmFJsrfC2OW8up+No2Qh/9vpJ2luCD932/RifmOCziTV63cbGyrKz
      hTO9PmRZ5uLlq0xGC1RFA0ohg84RRNGbqZWLGKppvn2il5ZggHK5zJWJRdoHdm5qAbtHqs5e
      /pDe3Dk6LQVsBkiXNIYSThwuN2X3QdyDD06a37y2qijM3zhH+6EXt8Xq5LMZpicmCLWECLV3
      bjtvZvgKer0Om06lr7eb7q6ubZ9fvTmO5mhBjS3w0slju5af2Y1n0gbIZDKkUimy2SwdHR1U
      KhVee+3Vx5pPt7W2UioWCXhcDOVqiNLDFVRSalUsVgOlTByj3bPj86n1FCd6QywX7/R+qlIH
      BDbfMTq94PQyu7LxxBSgWChid7kxyjWymgGfy8viRozlxUWuzqzRcuwNjEAhsUFdb0EnGzHI
      JqRsBY/L2cykE+plcukENudd8fG3A/VSsQ2cngCiToemaZiTIxwKFJrHOU0Cb7dlgAyRxAJz
      8YM4vPd+xsTGKhaHC6VeZ2N+ktC+QzsC1S5fvMSlmQwoM/yHP3+d4BY/ft+xhpNj/Oo5WneZ
      4pgkgWh4kTdOHXkkOXkmFcBsNmM0Gum6S8sfl76+PuKJBB/8/GNc3YeQ7mMQb+I/8CLxqWsY
      pGRTAdR6FVFq+HzEwD4ub6Qw2LVmIVqlXGy4TislNFVFL4m06PLIjvvnLzwKBw4M0K9q5PI5
      Jn/3MQ6jxFQ0zNhiFKOjEb+pVCuUsmnq5TUsoX1IRjM1rVFq0WAwYDQaefXUUa6NTpAol/EE
      G/FVgiBQzKbJjv6Gg/UhVms+NHsrNVXEYrx3bkLAChvX/yMJ237E9hdxte2nVq2Si66iiRJ2
      XxC/voKSW2MlpyCbrZjtjalrvV5DrdeR9DKTCxHACDoDI6NT2xQAGtlmdj2UazsjAWqVMsf3
      d+/qXbufQvxBTIGeFOeHxzl7/jIGd2j7gto9jDENjXqpgM5gxtV1gMLaDAZPC5JxdwVS6zUq
      y2P0d4YQqgXefP11/vX31yhVFc4caKe36/5Rlo9CMpWiWChweXgMxdtNuVwmvLyI7OlAkCTS
      GysAmCmDTk+/38orJw41p2hNj1e5zI3xGVoOnkIQBBKX/4HD9Ss4H69cJ+sFmQ8yBzl24kX6
      e7spFovEE0mCAT+yLFMul5FlmYm5RSqqDrtRJB4J87PzsyRrBhAav4tZV+d4f4jX33yjaV+V
      iwUyi+OowPfeuVNcV1VV0uk07ntUrLsfz+QI8FVx5thBktEwBVWie/DYg0+4TTK6wcbCLXqs
      Evs7LXwym0S27fyyo2MXcXQdIByP8zc/eI9isUilVKJUh6GRsSeqADarld99fgEh0IvJ6kC2
      OqhVyizO3MJgsWNzOEBVCVmtGEwmLLErrF2fpWbupGP/0aYdpdTrVJU7VSkUeweVxA2qSg35
      EZcq8hWNSKbKJ/Mi0eok+7o6MZvNdJjNTZvCaGx41wb7GmszmqZRLJQ4NdDOuYkIxdude1GR
      uDC2Tir5C4x6He/96Z+g5JP43E462+9EBG/uh/Y4wg+g+9u//du/3frGZsL4HyuZbA5n16OV
      0jNZbAioyA4f07eGWZ+6iSxoiFYXgihSK+XJrs/j97oQgEJVYW5ilKXFRf67P3mXgx0Bgj43
      tnusRj4OOp2Owf37mJqeRmdt/PirU2OYTUbaWvxEZ8cIGFSMJjNiZIRv9Vbxm6pEEhlc7Yea
      FeuWV9cwBXuQ9I0pjmTxEC3IVFreorpxA7OkspbT7Toi3B0x+5NpJ/9tbQBVZyCSrXGkzbwj
      tXW3YgCJRJKPh2aoqiI1bcvILOiIZqq8eKQbi1HmSKePRCKBLOtxOBzEYjGKxSJ2++6xVw/D
      H6+k3wvx8VZgfW3d5FIJZL2eQydfwippTKUi1Is5PDYjTo8dp8uJqZZjerVCT98+Tt6ueWk2
      m5/oHr/FYiPRxmg0YpYlajQEyeXz47ObwWTn1aMDJBIJTEqeA74yl6YzhFwGUvE07aqCxWJB
      0zQsVjsV5U4lh0oqwqtvvcuVH/8tPS6Vm8IL9L37Z8xd/DsC1SlkSUB/W0a3CvIH8zIfJbpQ
      dbc1RRD5P/75PIMdk/zNn7yB2WxqujA3lWZpeYX//P5FIkUdqrDTxtA0lXeOeNg/cAA3eVxO
      J4vhFAVFx9LSEn19fbQ8RH7E/XjuFKBcV3lcC0ep1/AGQujcrQx9/iEmk4kDBw7jCrahKAqO
      UoTBAy/xUrn82DXvH4Smafz9v/4Wi78DUYBisYSSHGcwYKZ/fyvlYp7FZJKK1Uu33cb0jYtc
      r1dos6vYpQruUDeBQLAxPauUGRzoI5VKMzM/S6aiUKypVKs1XAe+ycbcvyL7rZRKZdwv/DXh
      eILC/HmOcJ3VopmErgWDPYCISkKZuSP8tykJFoZWytR//hktXjtOq5Ej/d0oisLU4jo3ZtbZ
      KMmwm42qKrRbFXpbfLi0HAN9vSwsLLKwFiNZFvjzN4/i8+0eo/UoPFdGMMCl4VsInvZt7yU2
      VvGEHryRs6ZpVIoFBFGglE3jvJ0InomFqSVW6e/pZF9v7wOu8uX5599+Slmy4GlrxErbihFe
      OXoASZL4l1/8iu9/+x3O37hFJJ2nzSKQuP4JGclApVpHQeTwQA8hQw6TpJHV+dF0BuqZNfK2
      A5isDlpCQWxWK9lshnh4jUBrJ5VKBaPRSDaTZmXol0itp2hr72BldY2LY4tcmc9SFx7sYpbU
      CqIoUmXnsTa5IYqSoPKXr/bxxpmXtuVVzM8vcHNylu+/+40vXS6meT9P5Cp/QARcNhZzGcy2
      O1UbHkb4oTF/3QwbMNx2pc7eHGJfyMtL7zzcQtD90LTG9kPxeByfz7drWZRarYYi6NDfrr5c
      SMY42Gojnc7g9XoY6NuHIAi0eWyszU9x8MV3+Xx5ivjSCj0HjnLMHqbNWyGZA6dFxic2wiIi
      FZX16DLtHa9jtVgwmUyUy2VcvhCKomAymajX6xhNZjpf+gHVapVSqcx/+s0IOUWGhxB+gLq4
      e+faYq7yP/2bd0jnyrT4HCyubOyoZDe1uE4R4xMTfvgDCYV4knR3diDkE0/sepIk0d32ZBa5
      BEHAYDDQ2tpK9R4V1vR6PW0OE7JSQcxscNBnwO/3I8uN6tbR658zO3GLbKnKW2+8jsft5sXX
      v0XfwCAgcHW5zlRUIVsRmEkIjG5oTKZtRMROnL4WDAYD5XKZfD6PoijNPcbK5TK1Wg1BaGwE
      2OiZNU52Ox4Y3PYwwW8bBR3/+V8+wiw3sgH//qMRfn91jHq9Tq1W4x/e/4jzS2UOtN+rVsXj
      8dyNAABH+7r4YmyGQNf9ywPej4Yx11iBvDv98Ulgvc+2SGdefoFkMtmsN1Qqle78PX4Zse8g
      p166U52urb0DUSexurrCvjfewOl0Uig0VnU3/9fpdM1EHWjkYmzNXS6Xy5hMJnQ6HXq9nkKh
      gMlk4i/eewO/6xr/dHkDxN3F6WFWZjVE3jg1wKHBg6ytrWFV05j1Gv/yyw+4PjqB0dtBj89K
      V/uTLcD13NkAm8TjcS4OXUetlXH2ncJosT5SBpKqKOhzYY4d2I8kPbkheTfy+XxT+FRVJZPJ
      oGlas9iWydTwsFTKZSb/7/8Vpe8FTv/Vv8NkMiGKIsVisbln8NZAtw8/+B1yKYfVH6Jn4CCa
      plEqlTBv8dtvfh/VarU5JSuXy81pSLlcJpPJ8r/96HOq4pfzdHXaVf73/+XfotPpiMVifPDx
      Z4QzZd58+ST9vR1fyt15L57LEQDA6/VyZF8HC5/9iNriZ4hGI1Jug1zrS9he+WtgZ/x6fG0J
      STZgdbgpJjb41ku7B5M9abZmM9XrdVRVRVUbCUFb84qNJhP6V39IS9c+KpUKtVoNWZYpFosI
      gkA6ncZkMjVrj87fvI6/mmbg5f+5uUJ7rwyxzQWnSqVhxOr1emq1WnP7pn0BK7PRElXBcM+O
      5EEdTPT/b+9MY+M4zzv+29mZnd2d3SV3uVxSPCRSsayLtmWJjixZSew2PlS7RV3ERwKjRVvU
      RVM0AVygQNNvLQqk/ZYiQIF8aBMgqZM0jgrYSW3Hri2fkiVL1mVL1kHK4iGRIpd7zrU70w+r
      99XylEUt6bri/5Oknd15NfM87/M8//c5sgUGBgZZt+4WMpkMd227E00L8YW1PTf2ABfATasA
      nuexavVaziV7qJbzbLbeRUv4lLOvcfb5ExRbNpPY+Q3Gzx5nbVsKx4PbO5NkMq1cGB7hSLG0
      bNZyeHj4itD7xGIGlmWhaZr0z4XA+r7Puq3b0TRNTmQR7pGAEGTf9/niri+TSKbkzi7azTc1
      NVEsFqcVwwQCAWzblkoiehypqoqqqnzzyQfI5vL85ysHOXEhjxLw8VDYtjbF1NQUp7MKBBa2
      lLYSo1p3z67OjnlLGRuFm9YFEhg4fYpPDr5EMp2h5/xzkpIuV+CX3McTjz8565i9Wq2y5zdv
      sGXd6mWhPR3HoVKpUCqVZD1xKBQiGAxO6zWqKIoU0nqIa+or66DWgLdYLM7qgqFpGoEAqGrN
      11cURSqHUC5hXerbPHqeh+u6jI2NkZ2aItPaSjKZRFEUvv/si3w4tnB12e4t7fzZE78DwKVL
      lzAMY8kV4Ka1AAK969bjW1NcHM8y1HwX3VMHAIiqsKv8DonE07O+EwwG2bq+h2Rzcknae8xE
      KBTCtm0p+JqmYZqm3H3rXbVgMIhlWXITm1ncUn+tcGEsy5r2ueu67Nv7Kl3tzeTzeXbe/+i0
      XqaTk5Oz5hnA1VrndDpNLBaTClUoFLkwlgdi8t7Tn5lPV8yjpy3BmbPnyLSmaWtra+gznA+f
      Sxp0YmIC01x8d7iZWHvbdnpu3cQtv/tthvS6HT2anjbgbnJyEsuyalMLr1CP1zN1ZbEQ8wXq
      d2pN09A0TcYEQqA8z5P+ueM4OI4j11ipVOS/OY5DNpuVFqHejQK4bWs/leJlOtZtoVgsomma
      VLhUKiVjD2F96t0lwzBobm6W6depVJJHv7SRuF9gdUphXXsItWqi+BW6YxUe37GGf3rmKcrl
      Ml2dHUsS7M6Hz60LNDAwQKls0rd5/tlci8HxF3/EmqEXACi4Csoj36W9u5fTJz7A+59/hq/8
      NetvrxXhe54n/XHTNIlEIg2bYF6ParVK7kqvIfG6KpUKwWAQRVGwLEu6QPVjWcW7FFy6EOJ6
      CMZHBMoClUqFarVKKBSaswqvWq3OOaZKVVUMw0BVVam4ruvy8ZF3qKpxxgs2BS1Bf3eKw0eO
      8dTXH/tM56F9bhUAahy2sQBfvhjYts25vT8jPPAa6WCRMT9JKb6GickssbZebnv4T6ftfpVK
      BUVRME2TUCjEyOgomqrR0bGqYa6R7/uMj49Ps0aVSkW6P4IREson7uu6rrxG/Ln+c6hZl0wm
      w9TUFI7jTLMmuq4Ti8XmHdRRKpWwLEu6OqqqEo/Hpwl0uVxmdHQE7dQPGTYTVLUmxuikb3Mf
      IU2jZ3XntGuFZVsufK4VYCmRz+cYPv4u/uQggeIYo8EONu56WB56Nc/TnWApYNs2k5OTUoiF
      gGmaJndgQU0Kl0QohCx8MU3JGgmInT8ej6PrOqZZmwgpTqQjkciCSuw4DoVCAd/30XUdwzBm
      7ebicO3Ei//C5pYCTsVjX/lOymqK37v/3mnXFgqFOX9jKXHTB8HzIZFoIrHzIaDmDqy2bWzb
      plQqEY/HZzEq9bttoyEENRgMSrfE931pAYULVBXd7Wbw+MJdqocY2CfiBdu2iUajsn2jKOxf
      6P8jmKhqtSrdsZn3EM/Iia7m0IXjVNp2sXrtGn7x1jF2z3iGQqFFrLEc+FwGwcsN4demUimU
      qsuZ99+SL87zPPY9/3Ne+sWz5HI5TNPEcRwsy2pYUyld12ltbSUcDhMKhSgWi+RyOYLBIKZp
      SoHXdR1N09B1XZ4SC2sgUiZEIFwul6UCCJpTVVVc16VQKOC67qfaiYVVmStBbZorFGim75G/
      IdXWzSvvHaWnIzNN+IViV6vVZSEW5BqX7U7/T5DKtFMp5xgcGKBUKrH3hT14r/yYtkxGBob5
      fJ5SqUQ+n29I303RLl7XdVkM09zcTCAQIJlMTqM94ao1cl0Xy7JkDbCqqnieJ92oehcpEokw
      NTUlzwU+7Q4sZpq5rrugwo8PHsP3fXp7e9nY08k3dn9l1jVincKiLQdWYoBFQjy23/z9X9Ey
      OUAumsbr6aP1jh10rat1IS4Wi9K/Fvz9jcDzPAqFAtlslkQigWVZJBIJ+c5s28Y0TRRFQVGU
      WUFvLpcjFosRvNLqxDTNaSSCmGXc3Nx83TJQn0pRD9M0KZdLFPNZ3nz5eR596s9nERejnwzw
      8dH97Nr9GIFAQOYjLcfMgpUYYJGQReRaTVCaypfxT7xGIZZgKBzj0rEDFEcG2f7UNyUnX5ya
      ZONtd1zjl+eHmB0cDoen7d6xWC2RTzQTdl2XarUqD7iEwMfjcSqVCrZtEwwGUVVV0p3CBYlE
      IosazzrfrINgMMjrP/xXuvu20Bca4cLBF+na9iCmaZJKpTj7wdvse+GnBJIdVCoVdF2vTaO/
      UhOx1FhRgBvA0cOHCF88I0v6BqsRyucG6E51Etz3PLFoEydf/2+mPj6K5lpous76zd+7YZZj
      rt05EAhI4Rfcu2Bx6ulREbRGo1FM05TMkaZpRKPRazI/14tQKMSqHb/F+Rf+gxwBtKljdG17
      kNGhC7zy83+jeeIoxqUSbiDG5bFLmKZFsVSiUMgTYBMt6fSSWoKbrivEYiEYFgFRHeX0buHo
      oUNksJj0Q/SWhuHj99EDHnrFRBs6SdzMYtgFTpd9BoeGqTg2qfbOhlY2CYgkNQHhDsHVrm+O
      4xCPx6f12YxEIrMmVTYKHR2dDJsVwkdeZ9hUuH3XfeRzefK/+jGRfAnN8+h46AmOHDrEgQP7
      +eKOnRw7dqw2oHvvy1iOQ65YJmoYDT8jWFGAT4mZu3apVGJoaIjTL+1BGz7HoKuTU3Q6FBtl
      Hhlq8h2iYwNUj73NwcOHmRg4jelWSHd2z/2FRSAYDJLP5+XfhbUQgi0YoWg0iuM42LaNYRjE
      443rXjcTiqKQTLdyMVckNfgBB89doHfzHVhBHdMLMGxW2Pnkn3Boz0/YtHUbSjROuVQiOz6G
      0ZLmyP59ZF/fw+DLe6hkumlOt8pEQM/zbigfayUIXiSOvLePQ//+PZrMWnHKVCjKmpCDEbg+
      6tNFwbllK9v+8NskF9ncaSaKxSLj4+PSn69/xaqqzqIZ4/H4spy+WpbFe//1LGMFk3sffZxY
      rDZbuVgsYhgGv97zHEXL5tGvPYZhGNi2zfnz5xkZGSZcmGDihR+ReuJbbLizX8Y71WoVXddl
      IuD1YmWrXyT6tt3FyIGtmAdeI6fofCFkoweun7rT8NDOHGTk7CmSqR0NWZthGDKF2jRNPM+T
      fYDEyXEoFJJzF5aLcgyHw3z5yT/m8Dtvsv+XP2Hy8mUumi4b+u+mbdUq0qs66UkkOHPmNJqq
      Eb3CFm3e3EdY1/npvrdJ+rW1i6IeEbDXJ+RdT4y1YgFuAJcuXuTVv30a3XOZ0iJEVEit6qRq
      maQKC/emr09LttrWsv2Z78oX3gjkcjkp4OLwKxwOS6alVCrJNoUiw/OzgOd5ZLOTFAtFPj75
      EanWVgK+z9b+u2Ttg2CGFEVhfHyMlpZaYbxo1VLv/lzvifyKBbgBtLW3k77nAYpv/ZpkxWIi
      EOe+p7/D6IlDjL36HIn8xXlfhNh3cqE4/U//XUOFf+YQCUVRZD2xsADCFRKf1X9XCNZyQFEU
      WlrStLSkWdPTIwXd930+PHmKfSfO0NnVRUsItvdv5ezQJcazeTbdesuczQiu15VbOQm+Qdz2
      0O9TidQCyFAkgqqqrLnzbrZ86x+53LPtGt+G6IZ+0m2NaasiIE5lRQtCz/Pk2YFhGDJBTRAe
      9bUA5XJZJsV9FlAUhQ9OfMSv3jzAwKRJz5adEM/gWLUT8JJT5dyEOe8oWoGZNQrz3q8hq76J
      saqri9/+h+8T3f5VvHD0aqZmKMSGR75Otu3WBb+v6o3faUXBi0hyc11Xpjk4jkM0GpUKoqqq
      LDvM5/PYtv2ZsoBv7j/ImUkHvX0tkbbafABNDzOpt/L6uwcwPQW9ZRXnPhle8Hfqm/YKiPyo
      eqwoQAPQkm7lob94hu7+TTiOLXfXRDJFuGf2cGYBH0ht2dnw9USjUZl6oes6qqqSSCQIhULS
      Pw4EAsTjceLx+CyBrz8JXq4A2XVdTpw8xVSwiaa22b1/ok0tuC296C21ZrjDBZfLE3M3OKtv
      wluPuQqCVmKABqItZXD+7ClCoQhqSKezezVWpYKCgs5sc1zOrGV73+JTI+aDoiiywxtcHXWq
      aZpMqxbpy0JIRMBZf3I8nyA1EoVCgXePfES+qhLPdBJOfDoqM5zu5K0Pz/PAtsicnbdFH6Nr
      rX1FARqIoH2Z/JH36bw8SFXROPOlP2Lr7j/guJFAeeNnaFeUIN++jsyuh7llQ9+SnAZDbRcX
      LVHEabCoYRC5QXMVttcX3MzlRjQap88PQWsvTYu4j5HpZu/7x3nwnv5p1Kco6Pk0WFGABsH3
      fUzLIXxxiLDmgW8TeeMHfDh0mtb+rzK4VyUTcCiv38H9f/mdJa96qt/dy+WyFH5RSC9qHARE
      yvVSKeR8mLg0it+RIrCY+wYCBFt7eOPd97j3nrsXdf+VGKBBuHhxFCuXJx28moujAMGRU3z0
      3A+IUDt9jbZ1LkvJnxBk27aJxWIYhkEwGMRxHBRFmTPdWBTHLCc2btiAa1+bdZpvXQFFwdcW
      35t1RQEahMLUBNXLE+hKza0wrxhXLz+OMTFKPFBlxGinb/fXlm1NIq9f8OqiAa5Ie/6/gK7O
      Dvzi5DWvWygWuRGl/V/Ll0ms38Y1IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Results by Country Map' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Results by Country Map B' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3BcWZbn93smvUcmvLckCHpvy/uutmO7Z1YzMZJGodXubMisQiF9kdkN
      xe7GbIS+aDWK1vTszI7pad9dXe3Ks1isYpEskqCB9x4JIJE+8zl9SL5kAkjQgiRI5C8CASDz
      5Xv3vbz/e88995x7hUgkYlgsFkqU2EooioLf7xdki8WC0+l83OUpUeKRkkwmARAfczlKlHis
      lARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1J
      ACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQ
      YktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2
      NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktT
      EkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUB
      lNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJ
      LU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjS
      lARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1JACW2NCUBlNjSlARQYktTEkCJLU1J
      AHeBYRgYhvG4i1HiISA/7gJsZgzDQFVVNE1D13VEUcRqtSIIAoIgPO7ildgASgIogq7rAGSz
      WVKpVP5/wzCwWCy4XC5kufTongaeum/RMAx0Xc9XXkmSgFyldrvdSJK0bgtuGAbpdBpVVVdU
      +sJjNU0jm83mz1vqCZ5snjoB6LpOIpHg43MXGIko6IKImkogewLYtSRt5R7aW1uorale81lV
      VVEUBVVV8za/IAj5v00xmCJxOp2lnuAJ56n69jRNI53J8Nn5LxhIWHBUNwFg41ZF7smm6f+0
      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
      7FTHHYXOv/YFYjMkSzAsD1wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='School' width='192'>
      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
      lqO2qYPG2or7Uo9Hjbt+G6K44LSmbkAlEm+MHhtlI79Zb71uvebty7gZGPh2vvl3XsbGkSSJ
      U6dOEYlEVowe6WyextpKyjzlJIMRhsd997z8R5V7sg5w6cJZZMHM7p0rU3QuZWzgKv6kikMP
      kXSaA3v3rnn+4LljSHVbmR26iCYrSGYT9c3d1FYU3xqTSyX47Mxlar020poeIRtfu16aTN/l
      y4TCEQwWM+kM6HUiBw4+tWrPMDczQ+/AdexGAU9NI7OTY7i8tWzu3LRqGZfPnSGZkZEMunWV
      cSckEglEUWTbtm1omrbM36elbRPDY5Nsaa6irbGWUGjtsCZPEvdEAPRGK/p1vE5PVQ2zV/pI
      G8pwrmNDRl19NVOKgtNdyezIAJ2draQyqwdZMlhseN02qmvq6e29gqus7Lb1iiaytNTXItos
      nDs/RmuDd809CMlkgra2dix6gaHrgzjdlWjy6nXSNHCWeQgOjdDVtmVdZSxlvWlSBUHg8OHD
      hEKhommSKsu9pLILPkQOu4V4PE4qlQKg3aXRbF99zqGXtEI9dLLKvuq15yc6OU08nl3Xta2G
      fOHa96MeqVxmzfwA90QAaqvLyQvF41UuRa+T8NbUUVPuJhS/faiNcEbCKGWxOow0v/wqM5OT
      bGqtX/X8TCqOyWgkK8vUNbXgsurXrJemanjLy7CU1xCen+OV53cyE4itGRza7nAQTmQxSTo2
      tfcgpyO4KurWvI9cXmXfocP4fb51lbGsvA0ksJidnWVkZIRDhw6t2+PTbrez0RwZng0sNWzk
      2vejHvH42h3gXWeIKfHwcPToUaLRKK+99tq6zKClDDElX6DHirq6Ompqakob4jfAI+MOvdZA
      pWkqqiKTl1dPcXQvLC+rRWR7WFAUhf7+/tJWxw3wyIwAP//hd/G07Kamqox0JMzI2BiHXnkd
      i5Dhr3/wj+zqrGI85MJokal3m9B0JsYnZjn87C6+9/2f0r2zA+JRZmM5urZ0Mj4T4IX92/nF
      u7+gtXsLw6N+Opu8yDo7elEhnUxgEFUGR/y0ttYTTalkAvPUtbfS1FD7oB9HUXw+HxMTE6UE
      GRvg0RAATWEmlCKuDXDl6DUcDZsRlRRjM/N0VRqxl1XhdTs5cXmKvBbG0t5IJB5mZj5FXv8c
      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
    </thumbnail>
    <thumbnail height='192' name='Teacher-Directed Instruction vs Percentile' width='192'>
      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
      q+QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Homework Study Time vs Score' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wealth and Home Life' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
