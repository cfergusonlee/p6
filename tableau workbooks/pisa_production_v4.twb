<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.1003.0840                               -->
<workbook source-build='10.3.4 (10300.17.1003.0840)' source-platform='mac' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='PISAVisualizationsVersion3' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Viridis 20' type='regular'>
      <color>#440154</color>
      <color>#481567</color>
      <color>#482677</color>
      <color>#453781</color>
      <color>#404788</color>
      <color>#39568c</color>
      <color>#33638d</color>
      <color>#2d708e</color>
      <color>#287d8e</color>
      <color>#238a8d</color>
      <color>#1f968b</color>
      <color>#20a387</color>
      <color>#29af7f</color>
      <color>#3cbb75</color>
      <color>#55c667</color>
      <color>#73d055</color>
      <color>#95d840</color>
      <color>#b8de29</color>
      <color>#dce319</color>
      <color>#fde725</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
        <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
        <aliases>
          <alias key='&quot;Combined Math Score&quot;' value='Math' />
          <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
          <alias key='&quot;Combined Science Score&quot;' value='Science' />
        </aliases>
        <members>
          <member alias='Math' value='&quot;Combined Math Score&quot;' />
          <member alias='Science' value='&quot;Combined Science Score&quot;' />
          <member alias='Reading' value='&quot;Combined Reading Score&quot;' />
        </members>
      </column>
      <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
        <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
        <aliases>
          <alias key='&quot;Combined Math Score&quot;' value='Math' />
          <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
          <alias key='&quot;Combined Science Score&quot;' value='Science' />
        </aliases>
        <members>
          <member alias='Math' value='&quot;Combined Math Score&quot;' />
          <member alias='Science' value='&quot;Combined Science Score&quot;' />
          <member alias='Reading' value='&quot;Combined Reading Score&quot;' />
        </members>
      </column>
      <column alias='Encourages Critical Thinking' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Encourages Thinking and Reasoning&quot;'>
        <calculation class='tableau' formula='&quot;Encourages Thinking and Reasoning&quot;' />
        <aliases>
          <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
          <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Critical Thinking' />
          <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
          <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
          <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
        </aliases>
        <members>
          <member alias='Checks Understanding' value='&quot;Checks Understanding&quot;' />
          <member alias='Encourages Critical Thinking' value='&quot;Encourages Thinking and Reasoning&quot;' />
          <member alias='Informs about Learning Goals' value='&quot;Informs about Learning Goals&quot;' />
          <member alias='Sets Clear Goals' value='&quot;Sets Clear Goals&quot;' />
          <member alias='Summarizes Previous Lessons' value='&quot;Summarizes Previous Lessons&quot;' />
        </members>
      </column>
      <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
        <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
        <aliases>
          <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
          <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
          <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
        </aliases>
        <members>
          <member alias='Language class time per week' value='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' />
          <member alias='Science class time per week' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
          <member alias='Math class time per week' value='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' />
        </members>
      </column>
      <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
        <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
        <aliases>
          <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
          <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
          <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
          <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
          <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
          <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
        </aliases>
        <members>
          <member alias='Number of Books' value='&quot;Number of Books at Home&quot;' />
          <member alias='Number of Computers' value='&quot;Number of Computers at Home&quot;' />
          <member alias='Number of Cars' value='&quot;Number of cars&quot;' />
          <member alias='Number of Cell Phones' value='&quot;Number of cell phones&quot;' />
          <member alias='Number of Bathrooms' value='&quot;Number of bathrooms at home&quot;' />
          <member alias='Number of Televisions' value='&quot;Number of televisions at home&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='pisa_reduced' inline='true' name='federated.00tz8gs1u7anib1gro8020fd2p3x' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pisa_reduced' name='textscan.1t3sibp1k49p5c15jm0ea03rdu53'>
            <connection class='textscan' directory='/Users/courtneyfergusonlee/p6/data' filename='pisa_reduced.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1t3sibp1k49p5c15jm0ea03rdu53' name='pisa_reduced.csv' table='[pisa_reduced#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country code 3-character' ordinal='1' />
            <column datatype='string' name='Gender' ordinal='2' />
            <column datatype='string' name='Mother Current Job Status' ordinal='3' />
            <column datatype='string' name='Possessions - Internet' ordinal='4' />
            <column datatype='string' name='Time of computer use (mins)' ordinal='5' />
            <column datatype='string' name='How many - cellular phones' ordinal='6' />
            <column datatype='string' name='How many - televisions' ordinal='7' />
            <column datatype='string' name='How many - computers' ordinal='8' />
            <column datatype='string' name='How many - cars' ordinal='9' />
            <column datatype='string' name='How many - rooms bath or shower' ordinal='10' />
            <column datatype='string' name='How many books at home' ordinal='11' />
            <column datatype='real' name='Out-of-School Study Time - Homework' ordinal='12' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;test lang&gt;' ordinal='13' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;Maths&gt;' ordinal='14' />
            <column datatype='real' name='Min in &lt;class period&gt; - &lt;Science&gt;' ordinal='15' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;test lang&gt;' ordinal='16' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;Maths&gt;' ordinal='17' />
            <column datatype='real' name='No of &lt;class period&gt; p/wk - &lt;Science&gt;' ordinal='18' />
            <column datatype='real' name='No of ALL &lt;class period&gt; a week' ordinal='19' />
            <column datatype='real' name='Class Size - No of Students in &lt;Test Language&gt; Class' ordinal='20' />
            <column datatype='string' name='Teacher-Directed Instruction - Sets Clear Goals' ordinal='21' />
            <column datatype='string' name='Teacher-Directed Instruction - Encourages Thinking and Reasoning' ordinal='22' />
            <column datatype='string' name='Teacher-Directed Instruction - Checks Understanding' ordinal='23' />
            <column datatype='string' name='Teacher-Directed Instruction - Summarizes Previous Lessons' ordinal='24' />
            <column datatype='string' name='Teacher-Directed Instruction - Informs about Learning Goals' ordinal='25' />
            <column datatype='real' name='Highest parental education in years' ordinal='26' />
            <column datatype='real' name='Learning time (minutes per week)  - &lt;test language&gt;' ordinal='27' />
            <column datatype='real' name='Learning time (minutes per week)- &lt;Mathematics&gt;' ordinal='28' />
            <column datatype='real' name='Learning time (minutes per week) - &lt;Science&gt;' ordinal='29' />
            <column datatype='real' name='Plausible value 1 in mathematics' ordinal='30' />
            <column datatype='real' name='Plausible value 2 in mathematics' ordinal='31' />
            <column datatype='real' name='Plausible value 3 in mathematics' ordinal='32' />
            <column datatype='real' name='Plausible value 4 in mathematics' ordinal='33' />
            <column datatype='real' name='Plausible value 5 in mathematics' ordinal='34' />
            <column datatype='real' name='Plausible value 1 in reading' ordinal='35' />
            <column datatype='real' name='Plausible value 2 in reading' ordinal='36' />
            <column datatype='real' name='Plausible value 3 in reading' ordinal='37' />
            <column datatype='real' name='Plausible value 4 in reading' ordinal='38' />
            <column datatype='real' name='Plausible value 5 in reading' ordinal='39' />
            <column datatype='real' name='Plausible value 1 in science' ordinal='40' />
            <column datatype='real' name='Plausible value 2 in science' ordinal='41' />
            <column datatype='real' name='Plausible value 3 in science' ordinal='42' />
            <column datatype='real' name='Plausible value 4 in science' ordinal='43' />
            <column datatype='real' name='Plausible value 5 in science' ordinal='44' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code 3-character</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code 3-character]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Country code 3-character</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mother Current Job Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mother Current Job Status]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Mother Current Job Status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Possessions - Internet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Possessions - Internet]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Possessions - Internet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time of computer use (mins)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time of computer use (mins)]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Time of computer use (mins)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - cellular phones</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - cellular phones]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - cellular phones</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - televisions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - televisions]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - televisions</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - computers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - computers]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - computers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - cars</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - cars]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - cars</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many - rooms bath or shower</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many - rooms bath or shower]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many - rooms bath or shower</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How many books at home</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How many books at home]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>How many books at home</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Out-of-School Study Time - Homework</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Out-of-School Study Time - Homework]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Out-of-School Study Time - Homework</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;test lang&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;Maths&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min in &lt;class period&gt; - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Min in &lt;class period&gt; - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Min in &lt;class period&gt; - &lt;Science&gt;</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;test lang&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;Maths&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of &lt;class period&gt; p/wk - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of ALL &lt;class period&gt; a week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of ALL &lt;class period&gt; a week]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>No of ALL &lt;class period&gt; a week</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Sets Clear Goals</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Sets Clear Goals]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Sets Clear Goals</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Encourages Thinking and Reasoning]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Checks Understanding</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Checks Understanding]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Checks Understanding</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Summarizes Previous Lessons]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher-Directed Instruction - Informs about Learning Goals</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher-Directed Instruction - Informs about Learning Goals]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Teacher-Directed Instruction - Informs about Learning Goals</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest parental education in years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highest parental education in years]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Highest parental education in years</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week)  - &lt;test language&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week)  - &lt;test language&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week)  - &lt;test language&gt;</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week)- &lt;Mathematics&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Learning time (minutes per week) - &lt;Science&gt;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Learning time (minutes per week) - &lt;Science&gt;]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Learning time (minutes per week) - &lt;Science&gt;</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in mathematics</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in mathematics</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in mathematics</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in mathematics</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in mathematics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in mathematics]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in mathematics</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in reading</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in reading</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in reading</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in reading</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in reading</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in reading]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in reading</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 1 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 1 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 1 in science</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 2 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 2 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 2 in science</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 3 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 3 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 3 in science</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 4 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 4 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 4 in science</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plausible value 5 in science</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Plausible value 5 in science]</local-name>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias>Plausible value 5 in science</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pisa_reduced.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;' value='Math' />
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;' value='Reading' />
          <alias key='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;' value='Science' />
        </aliases>
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_3366018570462093316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Combined Score (copy)]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Jitter' datatype='integer' name='[Calculation_3366018571185197067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
      </column>
      <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
      </column>
      <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Class Size - No of Students in &lt;Test Language&gt; Class]' peg='0' size='3' />
      </column>
      <column datatype='real' name='[Class Size - No of Students in &lt;Test Language&gt; Class]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Class time per week (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Student Variable (copy)]' peg='0' size='30' />
      </column>
      <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
      </column>
      <column datatype='real' name='[Combined Reading Score (copy 2)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
      </column>
      <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Combined Score Type (copy 2)]' peg='0' size='20' />
      </column>
      <column caption='Combined Score Rank Percentile' datatype='real' name='[Combined Score (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_PERCENTILE(AVG([Combined Score Type (copy 2)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score Type (bin) (copy) (copy)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Combined Score Type (copy)]' peg='0' size='100' />
      </column>
      <column aggregation='None' caption='Combined Score Type (bin)1' datatype='integer' name='[Combined Score Type (bin) (copy)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[Combined Score Type (copy)]' peg='0' size='100' />
      </column>
      <column aggregation='None' datatype='integer' name='[Combined Score Type (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Combined Score Type (copy)]' peg='0' size='11.3' />
      </column>
      <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
      </column>
      <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
      </column>
      <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Highest parental education in years (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Highest parental education in years]' peg='0' size='1.55' />
      </column>
      <column datatype='real' name='[Highest parental education in years]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Learning time (minutes per week)  - &lt;test language&gt; (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Learning time (minutes per week)  - &lt;test language&gt;]' peg='0' size='92' />
      </column>
      <column datatype='real' name='[Learning time (minutes per week)  - &lt;test language&gt;]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Out-of-School Study Time - Homework (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Out-of-School Study Time - Homework]' peg='0' size='2.85' />
      </column>
      <column datatype='real' name='[Out-of-School Study Time - Homework]' role='measure' type='quantitative' />
      <column caption='Possessions - Internet1' datatype='string' name='[Possessions - Internet]' role='dimension' type='nominal' />
      <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
      </column>
      <column caption='Class time per week' datatype='real' name='[Student Variable (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Student Variable (copy)]&#10;WHEN &quot;Learning time (minutes per week) - &lt;test lang&gt;&quot; THEN [Learning time (minutes per week)  - &lt;test language&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Science&gt;&quot; THEN [Learning time (minutes per week) - &lt;Science&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot; THEN [Learning time (minutes per week)- &lt;Mathematics&gt;]&#10;END' />
      </column>
      <column caption='Teacher-Directed Instruction' datatype='string' name='[Survey Question (copy 3)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Number of Possessions (copy)]&#10;WHEN &quot;Checks Understanding&quot; THEN [Teacher-Directed Instruction - Checks Understanding]&#10;WHEN &quot;Encourages Thinking and Reasoning&quot; THEN [Teacher-Directed Instruction - Encourages Thinking and Reasoning]&#10;WHEN &quot;Informs about Learning Goals&quot; THEN [Teacher-Directed Instruction - Informs about Learning Goals]&#10;WHEN &quot;Sets Clear Goals&quot; THEN [Teacher-Directed Instruction - Sets Clear Goals]&#10;WHEN &quot;Summarizes Previous Lessons&quot; THEN [Teacher-Directed Instruction - Summarizes Previous Lessons]&#10;END' />
      </column>
      <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
      </column>
      <column-instance column='[Combined Score Type (bin) (copy)]' derivation='None' name='[none:Combined Score Type (bin) (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Possessions - Internet]' derivation='None' name='[none:Possessions - Internet:nk]' pivot='key' type='nominal' />
      <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Survey Question (copy 3)]' derivation='None' name='[none:Survey Question (copy 3):nk]' pivot='key' type='nominal' />
      <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Combined Math Score (copy)]' derivation='Avg' name='[rank:avg:Combined Math Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Combined Reading Score (copy)]' derivation='Avg' name='[rank:avg:Combined Reading Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Combined Science Score (copy)]' derivation='Avg' name='[rank:avg:Combined Science Score (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <group caption='Action (Country code 3-character)' hidden='true' name='[Action (Country code 3-character)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code 3-character]' />
        </groupfilter>
      </group>
      <group caption='Action (Country code 3-character,Gender)' hidden='true' name='[Action (Country code 3-character,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country code 3-character]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Attitude Toward School,Country code 3-character,Score Percentiles)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Attributions to Failure (copy):nk]' />
          <groupfilter function='level-members' level='[none:Country code 3-character:nk]' />
          <groupfilter function='level-members' level='[none:Score Percentiles (copy):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country code 3-character,OECD country)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country code 3-character:nk]' />
          <groupfilter function='level-members' level='[none:OECD country:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Score Percentiles,Student-Teacher Relation - Teachers Listen to Students)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Score Percentiles (copy):nk]' />
          <groupfilter function='level-members' level='[none:Student-Teacher Relation - Teachers Listen to Students:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/courtneyfergusonlee/p6/data/pisa_updated.tde' schema='Extract' tablename='Extract' update-time='10/24/2017 07:48:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]' formula='SYS_NUMBIN([Class Size - No of Students in &lt;Test Language&gt; Class],3)' />
            <calculation column='[Combined Math Score (copy)]' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            <calculation column='[Combined Reading Score (copy 2)]' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            <calculation column='[Combined Reading Score (copy)]' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            <calculation column='[Combined Science Score (copy)]' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            <calculation column='[Combined Score (bin)]' formula='SYS_NUMBIN([Combined Score Type (copy 2)],20)' />
            <calculation column='[Combined Score Type (copy 2)]' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            <calculation column='[Highest parental education in years (bin)]' formula='SYS_NUMBIN([Highest parental education in years],1.55)' />
            <calculation column='[Learning time (minutes per week)  - &lt;test language&gt; (bin)]' formula='SYS_NUMBIN([Learning time (minutes per week)  - &lt;test language&gt;],92)' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Out-of-School Study Time - Homework (bin)]' formula='SYS_NUMBIN([Out-of-School Study Time - Homework],2.85)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='485490' timestamp-start='2017-10-24 19:48:37.359' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class</remote-alias>
              <ordinal>0</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.0</statistic>
                <statistic aggregation='Count' datatype='integer'>294163</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Math Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Math Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Math Score (copy)</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45421</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>228010977.52398321</statistic>
                <statistic aggregation='Avg' datatype='real'>469.65123385442172</statistic>
                <statistic aggregation='Min' datatype='real'>54.767080000000007</statistic>
                <statistic aggregation='Max' datatype='real'>903.10796000000005</statistic>
                <statistic aggregation='Stdev' datatype='real'>100.78660995613453</statistic>
                <statistic aggregation='StdevP' datatype='real'>100.78650615722842</statistic>
                <statistic aggregation='Var' datatype='real'>10157.940746449995</statistic>
                <statistic aggregation='VarP' datatype='real'>10157.91982338104</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112017205421.5448</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Reading Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Reading Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Reading Score (copy)</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72051</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229154660.99598223</statistic>
                <statistic aggregation='Avg' datatype='real'>472.00696408985198</statistic>
                <statistic aggregation='Min' datatype='real'>6.4454000000000011</statistic>
                <statistic aggregation='Max' datatype='real'>849.35973999999987</statistic>
                <statistic aggregation='Stdev' datatype='real'>98.863309987048879</statistic>
                <statistic aggregation='StdevP' datatype='real'>98.863208168926064</statistic>
                <statistic aggregation='Var' datatype='real'>9773.9540615953192</statistic>
                <statistic aggregation='VarP' datatype='real'>9773.9339294524088</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112907743027.16263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Science Score (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Science Score (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Science Score (copy)</remote-alias>
              <ordinal>3</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38897</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>231000071.57064065</statistic>
                <statistic aggregation='Avg' datatype='real'>475.80809403003286</statistic>
                <statistic aggregation='Min' datatype='real'>25.158540000000002</statistic>
                <statistic aggregation='Max' datatype='real'>857.8329</statistic>
                <statistic aggregation='Stdev' datatype='real'>97.998469592891183</statistic>
                <statistic aggregation='StdevP' datatype='real'>97.998368665456994</statistic>
                <statistic aggregation='Var' datatype='real'>9603.7000425488186</statistic>
                <statistic aggregation='VarP' datatype='real'>9603.6802610908235</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>114574194504.7847</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Score Type (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Score Type (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Score Type (copy 2)</remote-alias>
              <ordinal>4</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>484179</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>688165710.09059441</statistic>
                <statistic aggregation='Avg' datatype='real'>1417.4662919742825</statistic>
                <statistic aggregation='Min' datatype='real'>231.34377999999998</statistic>
                <statistic aggregation='Max' datatype='real'>2479.7760800000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>288.10881318910867</statistic>
                <statistic aggregation='StdevP' datatype='real'>288.10851646933941</statistic>
                <statistic aggregation='Var' datatype='real'>83006.688237236711</statistic>
                <statistic aggregation='VarP' datatype='real'>83006.517262163616</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1015750531411.5718</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code 3-character</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code 3-character]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code 3-character</remote-alias>
              <ordinal>5</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Albania&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vietnam&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>6</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>485490</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>117850027305.0</statistic>
                <statistic aggregation='Avg' datatype='real'>242744.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>485489</statistic>
                <statistic aggregation='Stdev' datatype='real'>140149.03543079295</statistic>
                <statistic aggregation='StdevP' datatype='real'>140148.89109300266</statistic>
                <statistic aggregation='Var' datatype='real'>19641752132.18166</statistic>
                <statistic aggregation='VarP' datatype='real'>19641711674.598324</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38143300554039312.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Female&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest parental education in years</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Highest parental education in years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest parental education in years</remote-alias>
              <ordinal>8</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>18.0</statistic>
                <statistic aggregation='Count' datatype='integer'>473091</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - cars</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - cars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - cars</remote-alias>
              <ordinal>9</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>472499</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - cellular phones</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - cellular phones]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - cellular phones</remote-alias>
              <ordinal>10</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>477079</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - computers</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - computers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - computers</remote-alias>
              <ordinal>11</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473459</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - rooms bath or shower</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - rooms bath or shower]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - rooms bath or shower</remote-alias>
              <ordinal>12</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>469643</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many - televisions</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many - televisions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many - televisions</remote-alias>
              <ordinal>13</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>476548</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>How many books at home</remote-name>
              <remote-type>129</remote-type>
              <local-name>[How many books at home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>How many books at home</remote-alias>
              <ordinal>14</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0-10 books&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;More than 500 books&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473765</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)  - &lt;test language&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week)  - &lt;test language&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)  - &lt;test language&gt;</remote-alias>
              <ordinal>15</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>426</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2400.0</statistic>
                <statistic aggregation='Count' datatype='integer'>282866</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week) - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week) - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week) - &lt;Science&gt;</remote-alias>
              <ordinal>16</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>463</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2975.0</statistic>
                <statistic aggregation='Count' datatype='integer'>270914</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Learning time (minutes per week)- &lt;Mathematics&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)- &lt;Mathematics&gt;</remote-alias>
              <ordinal>17</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>398</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>283303</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;Maths&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;Maths&gt;</remote-alias>
              <ordinal>18</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>298601</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;Science&gt;</remote-alias>
              <ordinal>19</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>291943</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Min in &lt;class period&gt; - &lt;test lang&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Min in &lt;class period&gt; - &lt;test lang&gt;</remote-alias>
              <ordinal>20</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.0</statistic>
                <statistic aggregation='Max' datatype='real'>180.0</statistic>
                <statistic aggregation='Count' datatype='integer'>299618</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mother Current Job Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Mother Current Job Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mother Current Job Status</remote-alias>
              <ordinal>21</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Not working, but looking for a job &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Working part-time &lt;for pay&gt;&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>467751</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;Maths&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;Maths&gt;</remote-alias>
              <ordinal>22</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>298339</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;Science&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;Science&gt;</remote-alias>
              <ordinal>23</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>289068</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of &lt;class period&gt; p/wk - &lt;test lang&gt;]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of &lt;class period&gt; p/wk - &lt;test lang&gt;</remote-alias>
              <ordinal>24</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Count' datatype='integer'>296878</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No of ALL &lt;class period&gt; a week</remote-name>
              <remote-type>4</remote-type>
              <local-name>[No of ALL &lt;class period&gt; a week]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No of ALL &lt;class period&gt; a week</remote-alias>
              <ordinal>25</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>200.0</statistic>
                <statistic aggregation='Count' datatype='integer'>255665</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>26</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Out-of-School Study Time - Homework</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Out-of-School Study Time - Homework]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Out-of-School Study Time - Homework</remote-alias>
              <ordinal>27</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>30.0</statistic>
                <statistic aggregation='Count' datatype='integer'>301367</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in mathematics</remote-alias>
              <ordinal>28</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7063</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>19.7928</statistic>
                <statistic aggregation='Max' datatype='real'>962.22929999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in reading</remote-alias>
              <ordinal>29</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11556</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.083400000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>904.80259999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 1 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 1 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 1 in science</remote-alias>
              <ordinal>30</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6153</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.6482999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>903.3383</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in mathematics</remote-alias>
              <ordinal>31</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7044</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.4729999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>957.0104</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in reading</remote-alias>
              <ordinal>32</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11570</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.70350000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>881.23919999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 2 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 2 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 2 in science</remote-alias>
              <ordinal>33</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6162</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.8348</statistic>
                <statistic aggregation='Max' datatype='real'>900.54079999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in mathematics</remote-alias>
              <ordinal>34</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7093</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.226199999999999</statistic>
                <statistic aggregation='Max' datatype='real'>935.74540000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in reading</remote-alias>
              <ordinal>35</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11540</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.70350000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>884.447</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 3 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 3 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 3 in science</remote-alias>
              <ordinal>36</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6143</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11.879899999999999</statistic>
                <statistic aggregation='Max' datatype='real'>867.62400000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in mathematics</remote-alias>
              <ordinal>37</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7091</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>24.622199999999999</statistic>
                <statistic aggregation='Max' datatype='real'>943.45690000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in reading</remote-alias>
              <ordinal>38</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11542</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.1344000000000003</statistic>
                <statistic aggregation='Max' datatype='real'>881.15899999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 4 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 4 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 4 in science</remote-alias>
              <ordinal>39</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6172</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>8.4297000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>926.55730000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in mathematics</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in mathematics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in mathematics</remote-alias>
              <ordinal>40</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7102</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.0852</statistic>
                <statistic aggregation='Max' datatype='real'>907.62580000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in reading</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in reading</remote-alias>
              <ordinal>41</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11598</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2.3073999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>901.60860000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plausible value 5 in science</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Plausible value 5 in science]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Plausible value 5 in science</remote-alias>
              <ordinal>42</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6153</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>17.7546</statistic>
                <statistic aggregation='Max' datatype='real'>880.95860000000005</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Possessions - Internet</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Possessions - Internet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Possessions - Internet</remote-alias>
              <ordinal>43</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;No&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yes&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>473182</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Checks Understanding</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Checks Understanding]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Checks Understanding</remote-alias>
              <ordinal>44</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>313875</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Encourages Thinking and Reasoning]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Encourages Thinking and Reasoning</remote-alias>
              <ordinal>45</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314328</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Informs about Learning Goals</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Informs about Learning Goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Informs about Learning Goals</remote-alias>
              <ordinal>46</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>313846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Sets Clear Goals</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Sets Clear Goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Sets Clear Goals</remote-alias>
              <ordinal>47</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314909</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Teacher-Directed Instruction - Summarizes Previous Lessons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teacher-Directed Instruction - Summarizes Previous Lessons</remote-alias>
              <ordinal>48</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Every Lesson&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Some Lessons&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>314201</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time of computer use (mins)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time of computer use (mins)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time of computer use (mins)</remote-alias>
              <ordinal>49</ordinal>
              <family>pisa_reduced.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>58</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0.0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>297074</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Class Size - No of Students in &lt;Test Language&gt; Class (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Class Size - No of Students in &lt;Test Language&gt; Class (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Class Size - No of Students in &lt;Test Language&gt; Class (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>66</statistic>
                <statistic aggregation='Count' datatype='integer'>294163</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Reading Score (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Combined Reading Score (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Reading Score (copy 2)</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72051</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>229154660.99597874</statistic>
                <statistic aggregation='Avg' datatype='real'>472.00696408984476</statistic>
                <statistic aggregation='Min' datatype='real'>6.4454000000000011</statistic>
                <statistic aggregation='Max' datatype='real'>849.35973999999987</statistic>
                <statistic aggregation='Stdev' datatype='real'>98.863309987137811</statistic>
                <statistic aggregation='StdevP' datatype='real'>98.863208169014982</statistic>
                <statistic aggregation='Var' datatype='real'>9773.9540616129016</statistic>
                <statistic aggregation='VarP' datatype='real'>9773.9339294699894</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>112907743027.16788</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined Score (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Combined Score (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined Score (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>34165690.0</statistic>
                <statistic aggregation='Avg' datatype='real'>70.373622525695694</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>123</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.408320359618877</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.408305520664646</statistic>
                <statistic aggregation='Var' datatype='real'>207.59969558540783</statistic>
                <statistic aggregation='VarP' datatype='real'>207.5992679768153</statistic>
                <statistic aggregation='Count' datatype='integer'>485490</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2505150740.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highest parental education in years (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Highest parental education in years (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highest parental education in years (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>473091</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Learning time (minutes per week)  - &lt;test language&gt; (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Learning time (minutes per week)  - &lt;test language&gt; (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Learning time (minutes per week)  - &lt;test language&gt; (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>26</statistic>
                <statistic aggregation='Count' datatype='integer'>282866</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Out-of-School Study Time - Homework (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Out-of-School Study Time - Homework (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Out-of-School Study Time - Homework (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>301367</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.618375' measure-ordering='alphabetic' measure-percentage='0.257951' parameter-percentage='0.123675' rowDisplayCount='10' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Combined Score Type (bin) (copy):ok]' palette='Viridis 20' type='palette'>
            <map to='#287d8e'>
              <bucket>8</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>9</bucket>
            </map>
            <map to='#2d708e'>
              <bucket>7</bucket>
            </map>
            <map to='#33638d'>
              <bucket>6</bucket>
            </map>
            <map to='#39568c'>
              <bucket>5</bucket>
            </map>
            <map to='#404788'>
              <bucket>4</bucket>
            </map>
            <map to='#440154'>
              <bucket>0</bucket>
            </map>
            <map to='#453781'>
              <bucket>3</bucket>
            </map>
            <map to='#481567'>
              <bucket>1</bucket>
            </map>
            <map to='#482677'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Score Percentiles (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;80 - 100th Percentile&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;60 - 80th Percentile&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;40 - 60th Percentile&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;0 - 20th Percentile&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;20 - 40th Percentile&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Survey Question (copy 3):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Every Lesson&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Most Lessons&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Never or Hardly Ever&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Some Lessons&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Possessions - Internet:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Survey Question (copy):nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;More than 500 books&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;Three or more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;201-500 books&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;101-200 books&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Two&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;0-10 books&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;11-25 books&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;26-100 books&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;One&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
          <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
          <aliases>
            <alias key='&quot;Combined Math Score&quot;' value='Math' />
            <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
            <alias key='&quot;Combined Science Score&quot;' value='Science' />
          </aliases>
        </column>
        <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
          <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
          <aliases>
            <alias key='&quot;Combined Math Score&quot;' value='Math' />
            <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
            <alias key='&quot;Combined Science Score&quot;' value='Science' />
          </aliases>
        </column>
        <column alias='Encourages Critical Thinking' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Encourages Thinking and Reasoning&quot;'>
          <calculation class='tableau' formula='&quot;Encourages Thinking and Reasoning&quot;' />
          <aliases>
            <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
            <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Critical Thinking' />
            <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
            <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
            <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
          </aliases>
        </column>
        <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
          <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
          <aliases>
            <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
            <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
            <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
          </aliases>
        </column>
        <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
          <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
          <aliases>
            <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
            <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
            <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
            <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
            <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
            <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Wikepedia for &lt;[Country code 3-character]&gt;' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Map, Rankings and Wiki' type='sheet' />
      <link caption='' expression='https://en.wikipedia.org/wiki/Education_in_&lt;[Country code 3-character]&gt;' />
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Map, Rankings and Wiki' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map, Rankings and Wiki' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Gender Dashboard' type='sheet'>
        <exclude-sheet name='Total Homework Study Time vs Score' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Total Homework Study Time vs Score' />
        <param name='special-fields' value='all' />
        <param name='target' value='Gender Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
    </datasources>
    <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
      <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Average Class Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column datatype='real' name='[Class Size - No of Students in &lt;Test Language&gt; Class]' role='measure' type='quantitative' />
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Class Size - No of Students in &lt;Test Language&gt; Class]' derivation='Avg' name='[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' value='Average Class Size'>
              <formatted-text>
                <run fontalignment='1'>Average Class Size</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Class Time vs Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
            <column alias='Science class time per week' caption='Class time per week' datatype='string' name='[Student Variable (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;'>
              <calculation class='tableau' formula='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' />
              <aliases>
                <alias key='&quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot;' value='Math class time per week' />
                <alias key='&quot;Learning time (minutes per week) - &lt;Science&gt;&quot;' value='Science class time per week' />
                <alias key='&quot;Learning time (minutes per week) - &lt;test lang&gt;&quot;' value='Language class time per week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Learning time (minutes per week)  - &lt;test language&gt;]' role='measure' type='quantitative' />
            <column datatype='real' name='[Learning time (minutes per week) - &lt;Science&gt;]' role='measure' type='quantitative' />
            <column datatype='real' name='[Learning time (minutes per week)- &lt;Mathematics&gt;]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Class time per week' datatype='real' name='[Student Variable (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Student Variable (copy)]&#10;WHEN &quot;Learning time (minutes per week) - &lt;test lang&gt;&quot; THEN [Learning time (minutes per week)  - &lt;test language&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Science&gt;&quot; THEN [Learning time (minutes per week) - &lt;Science&gt;]&#10;WHEN &quot;Learning time (minutes per week) - &lt;Mathematics&gt;&quot; THEN [Learning time (minutes per week)- &lt;Mathematics&gt;]&#10;END' />
            </column>
            <column-instance column='[Combined Score Type (copy)]' derivation='Avg' name='[avg:Combined Score Type (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Student Variable (copy)]' derivation='Avg' name='[avg:Student Variable (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Combined Score Type (copy)]' value='Score Subject' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Student Variable (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Country Rankings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Combined Math Score (copy)]' derivation='Avg' name='[rank:avg:Combined Math Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Combined Reading Score (copy)]' derivation='Avg' name='[rank:avg:Combined Reading Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Combined Science Score (copy)]' derivation='Avg' name='[rank:avg:Combined Science Score (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Science Score (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Reading Score (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character)]'>
            <groupfilter function='level-members' level='[Country code 3-character]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' direction='DESC' using='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Female vs Male Percent Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[pcdf:usr:Calculation_451978482695856131:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Female&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' scope='rows' value='Female vs Male Percent Difference' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8d2</color>
                <color>#dfb7cb</color>
                <color>#e3a5c4</color>
                <color>#e692bd</color>
                <color>#ea7fb5</color>
                <color>#ed6cad</color>
                <color>#f157a4</color>
                <color>#f4429c</color>
                <color>#f82d92</color>
                <color>#fb1689</color>
                <color>#ff0080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:1])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gender Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[pcdf:usr:Calculation_451978482695856131:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='15716696.704056442' min='-23749445.418619603' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='19331290.042340405' min='-12315788.167977065' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#1616fb</color>
                <color>#2d2df8</color>
                <color>#4242f4</color>
                <color>#5757f1</color>
                <color>#6c6ced</color>
                <color>#7f7fea</color>
                <color>#9292e6</color>
                <color>#a5a5e3</color>
                <color>#b7b7df</color>
                <color>#c8c8dc</color>
                <color>#d9d9d9</color>
                <color>#dcc8d2</color>
                <color>#dfb7cb</color>
                <color>#e3a5c4</color>
                <color>#e692bd</color>
                <color>#ea7fb5</color>
                <color>#ed6cad</color>
                <color>#f157a4</color>
                <color>#f4429c</color>
                <color>#f82d92</color>
                <color>#fb1689</color>
                <color>#ff0080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' value='Female vs Male Perc. Diff'>
              <formatted-text>
                <run>Female vs Male Perc. Diff</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Internet Access'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
          </datasources>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Possessions - Internet1' datatype='string' name='[Possessions - Internet]' role='dimension' type='nominal' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column-instance column='[Possessions - Internet]' derivation='None' name='[none:Possessions - Internet:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Possessions - Internet:nk]' />
              <groupfilter function='member' level='[none:Possessions - Internet:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' direction='DESC' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='121' />
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:2]' value='p0%' />
            <format attr='font-size' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:2]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' />
              <wedge-size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' />
              <text column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Possessions vs Percentile'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
              <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
              <aliases>
                <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
                <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
                <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
                <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
                <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
                <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[How many - cars]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - cellular phones]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - computers]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - rooms bath or shower]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - televisions]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many books at home]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
            </column>
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]'>
            <groupfilter function='level-members' level='[none:Country code 3-character:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;More than 500 books&quot;</bucket>
              <bucket>&quot;201-500 books&quot;</bucket>
              <bucket>&quot;101-200 books&quot;</bucket>
              <bucket>&quot;26-100 books&quot;</bucket>
              <bucket>&quot;11-25 books&quot;</bucket>
              <bucket>&quot;0-10 books&quot;</bucket>
              <bucket>&quot;Three or more&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;None&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Percentile vs Highest Parental Education Level'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Number of Books' caption='Number of Possessions' datatype='string' name='[Survey Question (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Number of Books at Home&quot;'>
              <calculation class='tableau' formula='&quot;Number of Books at Home&quot;' />
              <aliases>
                <alias key='&quot;Number of bathrooms at home&quot;' value='Number of Bathrooms' />
                <alias key='&quot;Number of Books at Home&quot;' value='Number of Books' />
                <alias key='&quot;Number of cars&quot;' value='Number of Cars' />
                <alias key='&quot;Number of cell phones&quot;' value='Number of Cell Phones' />
                <alias key='&quot;Number of Computers at Home&quot;' value='Number of Computers' />
                <alias key='&quot;Number of televisions at home&quot;' value='Number of Televisions' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Jitter' datatype='integer' name='[Calculation_3366018571185197067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Highest parental education in years]' role='measure' type='quantitative' />
            <column datatype='string' name='[How many - cars]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - cellular phones]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - computers]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - rooms bath or shower]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many - televisions]' role='dimension' type='nominal' />
            <column datatype='string' name='[How many books at home]' role='dimension' type='nominal' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Number of Possessions' datatype='string' name='[Survey Question (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Survey Question (copy 2)]&#10;&#10;WHEN &quot;Number of Books at Home&quot; THEN [How many books at home]&#10;WHEN &quot;Number of Computers at Home&quot; THEN [How many - computers]&#10;WHEN &quot;Number of cars&quot; THEN [How many - cars]&#10;WHEN &quot;Number of cell phones&quot; THEN [How many - cellular phones]&#10;WHEN &quot;Number of bathrooms at home&quot; THEN [How many - rooms bath or shower]&#10;WHEN &quot;Number of televisions at home&quot; THEN [How many - televisions]&#10;END' />
            </column>
            <column-instance column='[Highest parental education in years]' derivation='Avg' name='[avg:Highest parental education in years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy)]' derivation='None' name='[none:Survey Question (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3366018571185197067]' derivation='User' name='[usr:Calculation_3366018571185197067:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Country code 3-character]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]'>
            <groupfilter function='level-members' level='[none:Country code 3-character:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='DESC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;More than 500 books&quot;</bucket>
              <bucket>&quot;201-500 books&quot;</bucket>
              <bucket>&quot;101-200 books&quot;</bucket>
              <bucket>&quot;26-100 books&quot;</bucket>
              <bucket>&quot;11-25 books&quot;</bucket>
              <bucket>&quot;0-10 books&quot;</bucket>
              <bucket>&quot;Three or more&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;None&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='display' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_3366018571185197067:qk:2]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='84' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_gray60' />
            <format attr='opacity' id='refline0' value='221' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
            </encodings>
            <reference-line axis-column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='58' />
                <format attr='maxheight' value='58' />
                <format attr='minwidth' value='687' />
                <format attr='maxwidth' value='687' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_3366018571185197067:qk:2])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Highest parental education in years:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Results by Country Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Science' caption='Combined Score Type' datatype='string' name='[Combined Score Type (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Science Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Science Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Score' datatype='real' name='[Combined Score Type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Combined Score Type (copy)]&#10;WHEN &quot;Combined Math Score&quot; THEN [Combined Math Score (copy)]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Combined Reading Score (copy)]&#10;WHEN &quot;Combined Science Score&quot; THEN [Combined Science Score (copy)]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Combined Score Type (copy)]' derivation='Avg' name='[avg:Combined Score Type (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='17765416.157232501' min='-26791674.762917273' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='21065335.863479204' min='-5591332.9299660251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' value='Score'>
              <formatted-text>
                <run fontalignment='1'>Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <tooltip column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Results by Country Map B'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Country Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='20146923.046441849' min='-17621143.665460251' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='17142756.337436035' min='-7508651.9527059933' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' value='Score'>
              <formatted-text>
                <run fontalignment='1'>Score</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' value='Subject'>
              <formatted-text>
                <run fontalignment='1'>Subject</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' />
              <lod column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' />
              <tooltip column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' />
              <geometry column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Teacher-Directed Instruction vs Percentile'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Encourages Critical Thinking' caption='Teacher-Directed Instruction' datatype='string' name='[Number of Possessions (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Encourages Thinking and Reasoning&quot;'>
              <calculation class='tableau' formula='&quot;Encourages Thinking and Reasoning&quot;' />
              <aliases>
                <alias key='&quot;Checks Understanding&quot;' value='Checks Understanding' />
                <alias key='&quot;Encourages Thinking and Reasoning&quot;' value='Encourages Critical Thinking' />
                <alias key='&quot;Informs about Learning Goals&quot;' value='Informs about Learning Goals' />
                <alias key='&quot;Sets Clear Goals&quot;' value='Sets Clear Goals' />
                <alias key='&quot;Summarizes Previous Lessons&quot;' value='Summarizes Previous Lessons' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score' datatype='real' name='[Combined Math Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in mathematics])+([Plausible value 2 in mathematics])+([Plausible value 3 in mathematics])+([Plausible value 4 in mathematics])+([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Reading Score' datatype='real' name='[Combined Reading Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in reading])+([Plausible value 2 in reading])+([Plausible value 3 in reading])+([Plausible value 4 in reading])+([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Combined Science Score' datatype='real' name='[Combined Science Score (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Plausible value 1 in science])+([Plausible value 2 in science])+([Plausible value 3 in science])+([Plausible value 4 in science])+([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Score' datatype='real' name='[Combined Score Type (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Combined Math Score (copy)] + [Combined Reading Score (copy)] + [Combined Science Score (copy)]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column caption='Score Percentiles' datatype='string' name='[Score Percentiles (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Combined Score Type (copy 2)] &lt;= {FIXED :PERCENTILE([Combined Score Type (copy 2)],.2)} THEN &apos;0 - 20th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.4)} THEN &apos;20 - 40th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.6)} THEN &apos;40 - 60th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],.8)} THEN &apos;60 - 80th Percentile&apos;&#10;ELSEIF [Combined Score Type (copy 2)]&lt;={FIXED :PERCENTILE([Combined Score Type (copy 2)],1.0)} THEN &apos;80 - 100th Percentile&apos;&#10;END' />
            </column>
            <column caption='Teacher-Directed Instruction' datatype='string' name='[Survey Question (copy 3)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Number of Possessions (copy)]&#10;WHEN &quot;Checks Understanding&quot; THEN [Teacher-Directed Instruction - Checks Understanding]&#10;WHEN &quot;Encourages Thinking and Reasoning&quot; THEN [Teacher-Directed Instruction - Encourages Thinking and Reasoning]&#10;WHEN &quot;Informs about Learning Goals&quot; THEN [Teacher-Directed Instruction - Informs about Learning Goals]&#10;WHEN &quot;Sets Clear Goals&quot; THEN [Teacher-Directed Instruction - Sets Clear Goals]&#10;WHEN &quot;Summarizes Previous Lessons&quot; THEN [Teacher-Directed Instruction - Summarizes Previous Lessons]&#10;END' />
            </column>
            <column datatype='string' name='[Teacher-Directed Instruction - Checks Understanding]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Encourages Thinking and Reasoning]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Informs about Learning Goals]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Sets Clear Goals]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher-Directed Instruction - Summarizes Previous Lessons]' role='dimension' type='nominal' />
            <column-instance column='[Score Percentiles (copy)]' derivation='None' name='[none:Score Percentiles (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Survey Question (copy 3)]' derivation='None' name='[none:Survey Question (copy 3):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Survey Question (copy 3):nk]' />
              <groupfilter function='member' level='[none:Survey Question (copy 3):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Every Lesson&quot;</bucket>
              <bucket>&quot;Most Lessons&quot;</bucket>
              <bucket>&quot;Some Lessons&quot;</bucket>
              <bucket>&quot;Never or Hardly Ever&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6]' scope='rows' value='Percent of Responses' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6]' scope='rows' value='true' />
            <format attr='height' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='70' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='44' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='-90' />
            <format attr='text-orientation' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' value='Legend' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Number of Possessions (copy)]' value='Teacher Practices' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='198' />
                <format attr='maxheight' value='198' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk] * [federated.00tz8gs1u7anib1gro8020fd2p3x].[pcto:sum:Number of Records:qk:6])</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Score Percentiles (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Homework Study Time vs Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
            <run fontsize='8'>Note: Bubble size represents average computer use time per day.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Reading' caption='Combined Score Type B' datatype='string' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined Reading Score&quot;'>
              <calculation class='tableau' formula='&quot;Combined Reading Score&quot;' />
              <aliases>
                <alias key='&quot;Combined Math Score&quot;' value='Math' />
                <alias key='&quot;Combined Reading Score&quot;' value='Reading' />
                <alias key='&quot;Combined Science Score&quot;' value='Science' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
            <column caption='Combined Math Score B' datatype='real' name='[Calculation_451978482694225920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in mathematics])+AVG([Plausible value 2 in mathematics])+AVG([Plausible value 3 in mathematics])+AVG([Plausible value 4 in mathematics])+AVG([Plausible value 5 in mathematics]))/5' />
            </column>
            <column caption='Combined Science Score B' datatype='real' name='[Calculation_451978482694340609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in science])+AVG([Plausible value 2 in science])+AVG([Plausible value 3 in science])+AVG([Plausible value 4 in science])+AVG([Plausible value 5 in science]))/5' />
            </column>
            <column caption='Combined Reading Score B' datatype='real' name='[Calculation_451978482694434818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(AVG([Plausible value 1 in reading])+AVG([Plausible value 2 in reading])+AVG([Plausible value 3 in reading])+AVG([Plausible value 4 in reading])+AVG([Plausible value 5 in reading]))/5' />
            </column>
            <column caption='Average Score' datatype='real' name='[Calculation_451978482695856131]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]&#10;WHEN &quot;Combined Math Score&quot; THEN [Calculation_451978482694225920]&#10;WHEN &quot;Combined Reading Score&quot; THEN [Calculation_451978482694434818]&#10;WHEN &quot;Combined Science Score&quot; THEN [Calculation_451978482694340609]&#10;END' />
            </column>
            <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Out-of-School Study Time - Homework]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 1 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 2 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 3 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 4 in science]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in mathematics]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in reading]' role='measure' type='quantitative' />
            <column datatype='real' name='[Plausible value 5 in science]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time of computer use (mins)]' role='dimension' type='nominal' />
            <column-instance column='[Out-of-School Study Time - Homework]' derivation='Avg' name='[avg:Out-of-School Study Time - Homework:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time of computer use (mins)]' derivation='None' name='[none:Time of computer use (mins):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_451978482695856131]' derivation='User' name='[usr:Calculation_451978482695856131:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country code 3-character]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time of computer use (mins):nk]' />
              <groupfilter function='member' level='[none:Time of computer use (mins):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]</column>
            <column>[federated.00tz8gs1u7anib1gro8020fd2p3x].[Action (Country code 3-character,Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='Score' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='Total Homework Study Time for All Subjects' />
            <format attr='subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' field-type='nominal' max-size='1' min-size='0.176328' type='catsize' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' />
              <size column='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1342500448226929' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]</rows>
        <cols>[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Out-of-School Study Time - Homework:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Gender Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86672' x='0' y='0'>
              <zone h='44534' id='1' name='Female vs Male Percent Difference' w='86672' x='0' y='55466' />
              <zone h='55466' id='7' name='Gender Map' show-title='false' w='43336' x='43336' y='0' />
              <zone h='55466' id='9' name='Total Homework Study Time vs Score' w='43336' x='0' y='0' />
            </zone>
            <zone fixed-size='171' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13328' x='86672' y='0'>
              <zone custom-title='true' h='5668' id='6' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='paramctrl' w='13328' x='86672' y='0'>
                <formatted-text>
                  <run fontalignment='1'>Subject</run>
                </formatted-text>
              </zone>
              <zone h='6579' id='8' name='Gender Map' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='color' w='13328' x='86672' y='5668' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Map, Rankings and Wiki'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='82229' x='0' y='0'>
            <zone fixed-size='922' h='100000' id='5' is-fixed='true' param='horz' type='layout-flow' w='82229' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='82229' x='0' y='0'>
                <zone h='100000' id='10' name='Country Rankings' w='30008' x='0' y='0' />
                <zone forceUpdate='' h='50000' id='9' param='https://en.wikipedia.org/wiki/Education_in_Switzerland' type='web' w='52221' x='30008' y='50000' />
                <zone h='50000' id='13' name='Results by Country Map B' w='52221' x='30008' y='0' />
              </zone>
            </zone>
          </zone>
          <zone fixed-size='194' h='100000' id='14' is-fixed='true' param='vert' type='layout-flow' w='17771' x='82229' y='0'>
            <zone h='6984' id='16' name='Results by Country Map B' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' type='color' w='17771' x='82229' y='0' />
            <zone custom-title='true' h='5263' id='17' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='paramctrl' w='17771' x='82229' y='6984'>
              <formatted-text>
                <run fontalignment='1'>Subject</run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Program for International Student Assessment (PISA) Exploration' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='381' />
          <format attr='font-size' value='11' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1216' minheight='964' minwidth='1216' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='223' h='23963' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='70954' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='28631'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overview and Rankings by Country&#10;&#10;PISA is a survey of students&apos; skills and knowledge as they approach the end of compulsory education. Around 510,000 students in 62 countries took part in the 2012 PISA assessment of reading, mathematics and science. Score data was not skewed by participation level but it was scaled using a calibration data set of 31,500 students.&#10;&#10;Countries that scored below 450 on previous PISA tests were offered an easier version of the assessment. This was designed to better assess what students at the lower end of the spectrum understood. Two countries accepted the offer and although it was at a lower difficulty, the results were still comparable to every other PISA participant.&#10;&#10;The map and bar charts give an overview of each country&apos;s performance. Clicking on a country will bring up its respective education overview page on Wikipedia.' captured-sheet='Map, Rankings and Wiki' id='1'>
                    <capturedDeltas>
                      <worksheet name='Results by Country Map B'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='14121505.433868378' min='-4927310.0630595535' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='20947385.726225942' min='-19786759.523260079' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column alias='Math' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' value='&quot;Combined Math Score&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Gender Differences&#10;&#10;There were mixed gender differences in math and science. In some countries, males outperformed females and in other countries the roles were reversed. In reading, however; females uniformly outperformed males in every country. The lower right plot shows how the amount of time completing homework affected subject scores.&#10;&#10;' captured-sheet='Gender Dashboard' id='3'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column alias='Reading' name='[Attitude towards School: Learning Outcomes (Anchored) Parameter]' value='&quot;Combined Reading Score&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Student Home Life&#10;&#10;In addition to the reading, math and science assessments, students took part in a 30 minute background questionnaire on a wide variety of topics.&#10;&#10;We can see that student scores and parental education are positively correlated. Students in higher score percentiles tend to come from parents who have more years of education. The number of possessions also seems correlated with higher score percentiles. The number of books in the home in particular shows a strong relationship, while the number of televisions does not follow any specific pattern. Internet access is also associated with test performance.&#10;&#10;' captured-sheet='Wealth and Home Life' id='4'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column alias='Number of Books' name='[Survey Question (copy 2)]' value='&quot;Number of Books at Home&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Student School Life&#10;&#10;Let’s peer into the classrooms of the world&apos;s highest and lowest performing students. No specific practice was strongly correlated with higher test scores, but a few showed weak associations. For instance, students who scored higher reported that their teachers checked understanding most lessons, but not every lesson. In addition, increased class time had a small positive effect on student scores. &#10;&#10;Class size and student scores do not appear to be correlated. Countries with the highest (China, Taiwan and Singapore) and lowest (Mexico, Colombia and Brazil) scores also had the largest class sizes on average.&#10;&#10;' captured-sheet='School' id='5'>
                    <capturedDeltas>
                      <worksheet name='Average Class Size'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Latitude (generated)]' field-type='quantitative' max='14146987.283458682' min='-8334000.7342419559' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Longitude (generated)]' field-type='quantitative' max='15073837.98010784' min='-24712389.958162941' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='School'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='82931' x='0' y='0'>
              <zone h='100000' id='1' name='Teacher-Directed Instruction vs Percentile' w='26813' x='56118' y='0' />
              <zone h='50000' id='9' name='Class Time vs Score' w='56118' x='0' y='0' />
              <zone h='50000' id='12' name='Average Class Size' w='56118' x='0' y='50000' />
            </zone>
            <zone fixed-size='219' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='17069' x='82931' y='0'>
              <zone h='11134' id='7' name='Teacher-Directed Instruction vs Percentile' pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' type='color' w='17069' x='82931' y='0' />
              <zone h='12855' id='8' mode='list' param='[Parameters].[Number of Possessions (copy)]' type='paramctrl' w='17069' x='82931' y='11134' />
            </zone>
          </zone>
        </zone>
        <zone h='7375' id='10' mode='compact' param='[Parameters].[Student Variable (copy)]' type='paramctrl' w='18500' x='11500' y='26500' />
        <zone custom-title='true' h='6250' id='11' mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='paramctrl' w='18500' x='11600' y='33125'>
          <formatted-text>
            <run>Score Subject</run>
          </formatted-text>
        </zone>
        <zone h='7794' id='13' name='Average Class Size' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' type='color' w='11769' x='27046' y='89069' />
      </zones>
    </dashboard>
    <dashboard name='Wealth and Home Life'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='pisa_reduced' name='federated.00tz8gs1u7anib1gro8020fd2p3x' />
      </datasources>
      <datasource-dependencies datasource='federated.00tz8gs1u7anib1gro8020fd2p3x'>
        <column caption='Country code 3-character1' datatype='string' name='[Country code 3-character]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country code 3-character]' derivation='None' name='[none:Country code 3-character:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='87529' x='0' y='0'>
              <zone h='100000' id='1' name='Number of Possessions vs Percentile' w='34458' x='53071' y='0' />
              <zone h='34615' id='9' name='Internet Access' w='53071' x='0' y='0' />
              <zone h='65385' id='11' name='Percentile vs Highest Parental Education Level' w='53071' x='0' y='34615' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12471' x='87529' y='0'>
              <zone h='15183' id='8' mode='list' param='[Parameters].[Survey Question (copy 2)]' type='paramctrl' w='12471' x='87529' y='0' />
              <zone h='14778' id='7' name='Number of Possessions vs Percentile' pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' w='12471' x='87529' y='15183' />
              <zone h='70039' id='12' name='Percentile vs Highest Parental Education Level' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' w='12471' x='87529' y='29961' />
            </zone>
          </zone>
        </zone>
        <zone h='7287' id='10' leg-item-layout='horz' name='Internet Access' pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' show-title='false' type='color' w='13400' x='14862' y='1417' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Results by Country Map B'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[usr:Calculation_451978482695856131:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Results by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Combined Score Type (copy):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Country Rankings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.00tz8gs1u7anib1gro8020fd2p3x].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.00tz8gs1u7anib1gro8020fd2p3x].[rank:avg:Combined Math Score (copy):qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' name='Map, Rankings and Wiki'>
      <viewpoints>
        <viewpoint name='Country Rankings' />
        <viewpoint name='Results by Country Map B'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Number of Possessions vs Percentile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' />
            <card mode='list' param='[Parameters].[Survey Question (copy 2)]' type='parameter' />
            <card param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Percentile vs Highest Parental Education Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy):nk]' type='color' />
            <card mode='list' param='[Parameters].[Survey Question (copy 2)]' type='parameter' />
            <card param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Country code 3-character:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Internet Access'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Wealth and Home Life'>
      <viewpoints>
        <viewpoint name='Internet Access'>
          <highlight field='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Possessions - Internet:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Number of Possessions vs Percentile'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentile vs Highest Parental Education Level'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='worksheet' name='Gender Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[pcdf:usr:Calculation_451978482695856131:qk:2]' type='color' />
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Female vs Male Percent Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Homework Study Time vs Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Attitude towards School: Learning Outcomes (Anchored) Parameter]' type='parameter' />
            <card pane-specification-id='1' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Gender:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Time of computer use (mins):nk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Gender Dashboard'>
      <viewpoints>
        <viewpoint name='Female vs Male Percent Difference' />
        <viewpoint name='Gender Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Homework Study Time vs Score'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Teacher-Directed Instruction vs Percentile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='269'>
            <card custom-title='true' mode='list' param='[Parameters].[Number of Possessions (copy)]' type='parameter' />
            <card pane-specification-id='2' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[none:Survey Question (copy 3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Class Time vs Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Student Variable (copy)]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Combined Score Type (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Class Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00tz8gs1u7anib1gro8020fd2p3x].[avg:Class Size - No of Students in &lt;Test Language&gt; Class:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='School'>
      <viewpoints>
        <viewpoint name='Average Class Size'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Class Time vs Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Teacher-Directed Instruction vs Percentile'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Program for International Student Assessment (PISA) Exploration'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Class Size' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Class Time vs Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Rankings' width='192'>
      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
      3GknAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Female vs Male Percent Difference' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Gender Dashboard' width='192'>
      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
      +C++APIo67b7beQkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender Map' width='192'>
      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
      GcbGepmZmefKlSyatj2KuVPjC1GUMM0Q4+MPicfVF9pbF+r6/82bt/iXf7mBz3eYgQGFYjEH
      dCGKGTo7t7soDUPns88+o63NJRIRGD50iP7+XpaX09y8eZ/l5RQXL35ErWYiCG6DMTAwONgY
      9NWqvu/qcJ5nb69gmTcJp9MrpFLz63yjCF1dnczPzyH97d/+7Y88bks0Gn3ql1837KpcuXKD
      YjHPhQtvMzJyqFGW41mV25uaWiCf13GcCsWijd//5CvXTu6xTGaGTGaSWi1FKNS7o1rXfG61
      WuD48V5c12FqqojPF9p1htq6r1BIkc+vUigU6elJomnPjwG5F+7ff8AvflHC7x8iEFjlhz98
      F9MskcuFmJ1d4ejRDcavZVksLi4xM5Mim1Xx+Y5h20mmp4ssLT0EAoRCCRxHpbd3hEikg3R6
      FUGw6evra0yE4XCYmZlpfL5Aw1W928q5H7XZdV1u3ryGZRlEo2309vaQTCbw+/2NUvF7JsXv
      pZs162OWZbG0tMT9+w8YGOjl5MmTzy0x+9ChfiqVMhcuvI3rzu3oEdqqo+8H5fIyxeICb711
      Yr1SnbPnua4r8eGHv1qvhlHGtu1tSd5beUbN+b6hUCf9/a8gyyNcuzaxr+d8Xujr60VVTfz+
      Tvz+Lr744go3bhQRBBFN6+TDD69RqdTTFf/u7/5ffvKTy9y8qRCNnkXTuvD5+vH7h/D7EwQC
      9Qi6oqhIkoym+QgGowwMDBAMBhvvoV7DdcMW2q+A7/a91GsqGY1qc1uv2dW1R38Az2/e6sbp
      dJqHDx+RSqW4dOkSq6urGIZBZ2cn5869Qm/v8yXBtbWFOXVqhGAwyH/+zz/AdVvzarZGhb3n
      3+3FdXefJhjs5v79JWq1/bESw+EuFCWxnsq4Wz3T7Ut2/T1vrIyO82IN4ps37wDd+HzLnDgR
      wrJUQqG+da+Vj3y+i7W1AvPzCzhOnFrNwudLIggb/CRZ9lEotC6h7zi1da5YpdG/zDAMNE2j
      UMiSyezdU6H5uzQMo+VEnU6vMDo6umuew5fSRxzHWQ/L++jp6aG3tzVJ7HnD6wPlui7BoEut
      Zras+bkVe80uiqIhSSq6HiCdHica3d79vVl98YyyYrGNn//8CoKwof8366m2bZLL3SUeP9Py
      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
    </thumbnail>
    <thumbnail height='184' name='Internet Access' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map, Rankings and Wiki' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Possessions vs Percentile' width='192'>
      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
      JPZgsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Percentile vs Highest Parental Education Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Program for International Student Assessment (PISA) Exploration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Results by Country Map' width='192'>
      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
      t9sLcQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Results by Country Map B' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='School' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Teacher-Directed Instruction vs Percentile' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Total Homework Study Time vs Score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d2ZNc12Hf8e+5a+8907MBs2AW7PtCAAQBkqIoUaJk2ZFtxXE5seNUpfKc
      P0H/QB6SKpcfnDzETizFkRTZIlWSCIIUFxAAiX3HADMYzL73vtzlnDw0MARFEqSAwWDAPp8q
      kgCGc/p2z/nds94DoZRSaFqDMp70BWjak/TYA6CUQjcy2mqlA6A1NN0F0hqaDoDW0HQAtIam
      A6A1NB0AraHpAGgNzXrSF6CtHN/3yeULWJZJKpnEMOr3vyAIyObyuK5DMpF4wle5snQAvkLu
      rbkYhoFSiiAIGJ2YoVCuEo/YnLw6yfBMCdMQvLB9Lc/t3QQKjp26yqkbcySjJv/6pW10drQ+
      6beyYnQAvgKUUgzdmeT6yAx+KFnXniJXrHJrfI5sOWChIkg7ITenK7Sk4xiGwZvnJxjoypBO
      JrgwPEfFV1T8gBsj0zoA2tNDKcXJ8zf41elxfFn/s0tDM9ycKlENIO4abO5KUfMkxWqIY1VJ
      J2N4IRRKFdpbM3Q2x1gsl3AtiFiKufkFmtIpLOurXz2++u/wKy6by/PWhYmlym8ZUPEC/FAi
      JZQ9gSkUtmViCqj5AUopmmImrZk0pmnyhy/uYMvwGOdvTnHq2hRvnrlDczLKdw5vob9n7ZN9
      g4+ZDsBTbjFXoFj7eK9VICERsRBCoJQk4Rp4oaDkG2zrSaDCkPaMw9f3rScejXL0xCXKVZ/W
      pMt8MWBwskihKoEq88UL/Oc/S5JMfnJgfG9vlxBiJd/qY6ED8JRzbQtDgFQggJQTUqyEbOqI
      IJXCMG0KHpgG1EKL7z83gFRwc2yOSzdHOXmrgBAGHXGFKSSVu01JzBGYSOYWsySTCarVGovZ
      HLFohNGZRabnCxzc0U8yEUepercpmUgQibhP9gP5PekAPOVaWzOsa3EYnq2SciRXxorUAoVj
      CbZ0xsiVfNIxRdWXrGuNcmVoio+G8jiuQyaqyBcrxKMR4o7FfMGnp8miKW4xV/C5NVPhF8dv
      8SeWxa9ODTE2X6UlbjBX8Aiw8IKQbx/eyejEFP9w9BrPDDTz6gt7PrdluDdL5ddqzNwaxbAM
      Otb3YdnLVw2DIKBcLBGLx7Fsi4WpGUqLOTo39mN+xphGB+Ap59g2h7d3UTx5g6rn05YwcG0D
      YdiUQ4fmuOLWTBXLNBibX6Q74zCf90jHfNJunHXNFuCzUAy5PVtltuBzcCDBdN4nFYswXQg5
      ce4Gw7MBALmKxPd9LNciGXF4/+x1hicWaHIVnlcjly/SlE4uXV8YhsyOTRKGIWGuRG1qgUBJ
      3NsLKAHjpSrr9m1flu6UUorR988R3JrE7O+g98VnmDl1BWsyx0ImRVtHx6e+56EDUC3luHZj
      iMyaHqKywGQ+ZOfWDdy8ch63qYt1nY0zlfYkZfMF3j47wnTO4/ZsBcMAKaE7I+lJGEzlArxA
      ki35GIbACyTdzTb5SkjM9JhY9Kn4kkzCpiNtY5kGcdekI+VQ9qElBrZlIAAFVALY3tvMy89s
      YHw2x89PjqIUJO2A965nydcu8xevHsA0TWQoGTl+DnVxlJqp8Itl4rZLNWogaj6y6lEam8Lf
      uQnHcR75swjDkNrkPG41pDoxj1KK5p0DlNZkaWpu/szveeitEBMjgxjxFtoycS5eu01cZrl8
      5kNmwjRj1y5Rkw/9PrQvSSnF2at3KFU9xrM+jiUo1xRVX3FrpsZ0ziNqi3q3I1SEUtGRshmc
      rjK64LFYChmcrjK+6DOV9ehIO3Q22Zy4VaAtafGdPRkKVcm5sRpdaUHChc4mm5f3b2JNRxu5
      Uo2Pn3UyiDmCTDKydDevVMp4NyepFYvImSxSSoqBR5ByqYUBlaRNMDrH8PtnkGFIpVhi5PRl
      FiamP/Vei4UCuWwWGX66YimlCMMQ0zRpeXYb4UAbLYe2YZom7X099B/Yif05AXvoFiDTupbs
      yCinPxrBjmRobW/m6ukrtB3YhVeapBJITEOilMI0zYd9Ge0+Ukpm5hbI5UtEIg4dbRlypSqh
      vNu3Dj6eDVKqXjGm8yE7uqJMZn1cW1CohlgmmIbADyWpqIkfKprjFgiTsufhB4p0IsKG3i6O
      37qFAvZv6WLjug4iERfXdRFCsGN9J5dHFlko+axtSfDqoU00N6WWtliYloUXMQksgbBdDKmQ
      zTFEIAnaEkRuzSGkolYaJLtzIzPnrhOeuEG2IwX/6gWa2+q9iIXxKebfOovwJdldfbRt7cdx
      HCzbRinFxNVbVIYnaXlmC6193bT0diGE+FLdqocOQKFQouKHeCqKyN/mxEfj7Ni1g1Mn3iYi
      TLbYBpYwkFI3BcvBDwLePnWVkzdmqfj1+f6Na2LEHDBNA9sUeD4YBqDqFdw26xXeNF0WywG5
      iqSr2SbpmswWAm7PB+zqiaGUIOZaFGowng3Yvi5FSzpB37pO/uhZDz+U7Nrch+t+8i7a0Zbh
      r769i3KlCjKEWg0ZhGDbAPVKmoohLo6CgGp/htjQHNXuJghDZBhiGAbSMpi+NUJtegGVcDCA
      ud98hPtHzxNLJsjeHMUueIRBwMKHVylfHcFIRFn74h6iqSSly8PYsyWyqTs0dbQuBfDLEA97
      LIqU9cGQbTsoGRCECsd18GtVDMvGunvXvxeA3+eitE+qr/YO8vpHY8j7flqmgJ4mg1xVUalW
      uTVVIl+VuJZgfXuEXFVS8RQ7ehLM52uMLlRJR006UhYVXxFzHaRhUfZhR1eEg1t7GJ7KUqwG
      vLBnPbZl4nk+meb0J35+SimyM3NMnrlKuVYlDEPiI1kijkvYnqDr24dIpFMopRg+eZ7Kr84Q
      xGzCuENkpki4rhUMQdlWmNkKrusS2AbWVA7hhYQdKZKhiXpxMy2dayiMz+C9f43qQg4/EyMl
      6/dtr6eJzd/7GtM3RyjdnqR172ZSLc2/14D6oQPwZekAPLogCPi7/3ecsWx9JiZqKUzlU/ZC
      Yo7Bps4EcyWFDDxU6DNbCEAYoBQR16YY2FgGtMVCytWAiWyNkqdoaUoiRP3n8vyWDK8+vxuo
      V/Cp2QV+fOwyFU/y6v517Ns2sFSxsrPzTP76FF6ugCjWkH6AlatC1MHJJPG3d5HqaifWnCKS
      jHPzzCWCc8NI1yJi2cQ88ByDUlDDnithWCZecwx3PIsZKry2BG4yTojCVYLY4W1gm8xcuEF8
      toIV1qtsLRNlww++gWmaS5sAf196GvQp4Ps+pVqAlJLmKPieR7EWUPEl1yd8FsuKb+7txEJy
      9OIs+bIgZkuaogZNUYNysb7H5/ydElVf0Zm2mMrVMIwyzak4qajBvq3rAAilxDQMxqcXmC+G
      ANwcW2DPlr6lijZ7YRDf87An84RxByFVfdBR9agu5FEjNt7NWeaSJr6S2AtlpGsi4w7WTIXQ
      MqkJgTLqA/QwCFGWwFvfhrFQwkpE8DqSxEezCAm1xTx9z+3BzxUJp28C9Rkpu6tlab/Sw06j
      6gCsUtVqlXyhiB8EDI/NUipXMEPJzQmPmXy9JYg5BgNtDpYRcOb6OIulkJlCSF9bhPmCx8UF
      D1OU2dufxgskmbgJSmEasKcvhUCyrbeJgzsHaM00MTw6yS8/uMGff3M3/T0d9AzOUKoF7Nqw
      dmkiIwxDZLGC8gMEYJRqeC0xjLIHoSRIuESFQdlRqMUSkekCyhC4XoCM2BQ7kpjlGkEyjjtb
      JEi6iFBh+pLN/+Yb5LI5LMukuaWFyUuD+LkSHbs2IoSge89WJlyH2tQCdmuKzu0bH/lz1gFY
      ZZRS3B6b4jcfDjGxUGFmsYRrC7aujXBupEihGi79v2VPkq+EOJbBXDFAIPACRbnqM5XzcCwT
      KQVj82X6WyNUTJjKBmzsTJKtmaQjsHtjJy3NaYQQRFybllQU27ZIJRP8h+8dIAhCYrHo0mua
      pomMOfgxi7A9jlGo4cwU8damCKM2Mu7gTJYIovXAKAFG1UeEChF6hF6AIRVGzEVGavVFC8fC
      aU4SiUaJxeNLr9W9ewvw8d3dNE26t29EbVNfepbni+gxwCozMTXL379xmXwlJJsvkS3X7/br
      MjYLRY9STVK6u8himeCYgu6My3Tepylmka0oOpIGowseUimUgrakzZ88183bV7MkXJOiV++x
      ZCIhPhbfPdjPjk29CCGQUn7uz0opxdTtUWZ+8yFibLG+mBWxCFMRlGlgVHwQgjDpomIOCDBn
      itgzRQD81jhW2UMokBvaEc0JCEIM26Jz/3YynZ9eqX3cdAuwiiilePvsrbu7MaFcC+77Wn3D
      m2mAIep9YOPuXVApKNUkfa0muYpPzDEIQkUgFZYpaIo7FGvwvYO9nLo6gWUq1rXFyZZqjMz5
      LBbKS6/zoMo/eu4qc6evEhldRBoQRu36nH7CxfBDwpiDs1BGOibOZB5vTRIVtan1NSN8iVmo
      YlR8ZMzBQJDsbKdn3zaEEE/sBqkDsIr4vs98vgbUK9z9U57T+YC1aZuR+Rq2KagFCqkU3RmX
      0QUP1xLcWfBoS9qkoyYbOyIIAfGoQyhs7syW+O6Le9i9uRelJI7jkCuUmJpdpL+7g1q1ilet
      IaUkPzGDkpLU2naa2loQQpBfzFK+MIRR9Op9fwnSgCATw5kqYJU9ALz2JFgG0qkPep2pAmE6
      ipkvYxVrYBmEa9NEHYfMhp4nvkiqA7CKGIaBISAMJVC/ewdSAgIvVNRC2NYVY3CqQiIC3RmX
      ziaHyaxPqBReUF/IskzBRNYDYZAJLaIR6M7YTM0ucPrqKId29rOmPUqmKUUqHuPyiTOoa+Ng
      gMyVscs+SEU2YjF9aDNrt2+ksJDFKQVUHJPQMfGaIiipUKbADCRKCFAKK1vG72xC9bex5vld
      +HM5Fs/cQGZilNa3oJIRIpi0H9xFqrnpSX/kOgCrhVKKhWweIX2m5vP17o64O714d7CXiFhg
      Rji0waHsKWxTMLZYY6DdZWzBoxbUu0gx12LjGovrUxWyxRpdmSjfPLiRkYk5Tg/n6W6fZ017
      CwBjl64TvnkRywvx16awZ4v1p2qUwiwIyh/e4M71ccSWTmKAE4lQSwW4o1mUEFQ7UwStMQgV
      VraCCCWGVKQGuujuWwd9UJ3PERbK9HxtH7nBO4SDU9jx6Od/GCtIB2CVmJie5x+PXqLiG6xt
      drkzXyOQAtOoh6MtZRNxXWohrO1oxZAe715bIAwNsqUaLXGHuCtoSdrMVWykUuzrd4hYgu+/
      tJ017W20Nqfoak3R3tLM1M3bFBZzFM4MQnMMX9RnbLj3jwQlFMIPYTaPtAy8mIWhFFbZR7oW
      SoByLZyRBYRUeJ1pVCKCY1mE2RJSSizLYsu3jqCkwrIt4vEYxd5O4snVcfyKDsAq4Ps+x07f
      JFupD34jkSg7uq2lQXBz3OKFHd2EwiKTipFJx/nvr5/Hcdz6QlKhynjWByCVC+jrsCh4grky
      NEUFyXgcIQTRSIQ1rRnGfnsa484CNVMigwB3PAtArTONqIUo20DcHX8o28LMVVHZCvLZDciR
      WQxFvVUKQoyaD6aBdAyMuEsyNDE9iTebp1atYiUS9X7+3a5+LJEg9jtnD0kpqVWrmJaFbdsr
      +qilDsAqUCiWGJ2rLP3eC8HDxrBshICcB91r21i7ph2AiamZTzwHHHMtcnenS+t7gaBQH5PS
      35EkEolQyOcp5fIsXLiFMzSHYZoEFjgTeYRUKCGwClX8jgT2TBHlWIRJF8sP61+Xko71vYiN
      fYwd+wjj3AgGAjtXw+tpwqiFuHkPI2KAECjx5VZnpZSMnbtK5eJtiNi0v7SX5o625ftwv4AO
      wCoQhPITMz73SEV9Z6cAP/x4Acw0RH2wrOqVLJ2I4vklKr7EEPUeDNT37n9j/wbGz1ymdmmE
      0AA5Nk/NCzGTMaTtYNyt/Mquz+MLP6TW00TQHCM6lsMueShApWPEknEi0SjTTQn8jR2oWoCM
      2tjZMvZcCWUIpONgmiZ2TxtuJPKF772QzeGdGcLxQij5zH10jfR3WlZsWlQHYBWIxyIkIyYV
      P/jMr0cdQSoRW/p9Op2iI20xcXdznGmatDXHKZSqNMUMOpqjbO9P8OzOARavDhGcGcKW4Mct
      RCgRoSRYyCOjaRDUuzy1esCEF+KWsijbRNxdbwgTLpnD24nGYoRhiFH1SVQBYUFZUU3GCKRC
      VDwCx0D1ttHz3K4vNcUpDANlfNxSCGtlp0V1AJ4QpRTZbI6FXBHLFOzsTfHW5YVPtQQC2L+h
      hXSqvr24vmXB5buHNvHTd66xWK6PG0zTpLstwR8f2cCG3vrenWKhQO3SHey7j2QYUhGaBsgA
      AomVqxKmIlizpbuD33rzoUwDwwvx0xHk2ibWvLCH9v6epdcxm+IwnlsaJ0RriiARp9rfTuuR
      3TS3ZL70/H4ilaRwcBOF87cg5tK5f+uKLorprRBPgO/7vP3htaWHWwCao4KWmGAiLynf/bOI
      BQc2tnJoZx/XhicpVX36OzP0da/BMAwWFnNcHBwjW6qRijnsWN9FW+vHz75O3Rmj/NpHS10i
      JaAgAszh+pNY0jKobGjFmcxj5iogBDJqE65JE6tK/PYkW/7sFey7D7jcU8zlGf/lBziLH49b
      Assg+fIu1mzoe6jPJAiC+jrICtcT3QKsMKUUb394jXeuzH7ibr9YURQ9xTd3tpJOJpAK2jNJ
      EvEYPz56ntuzVQCcKzP88RGfXZt7yTSnefHAxy3D7w46hWGw9DQ7IBTEDJvi2hT2VL4+vih5
      CKXwejMIwCwHuIsVnHQS6difeSePp5J0ffc5ps5fR2ZL4NpktvbT8ginyD2pYxh1AFbYYjbH
      yRuznzno9UO4Olbg3//BlqVTEi5cG2LkbuWH+gzRtfE8Ozd9XOk/b7Yl2dxENmbjlHyUUnh+
      gCEEjq/wOlIE6QjCtjDny9hTxaWsiEQEhCDa+dmDUSEEiXSKDS8eqI8JDOOpPSVO90tW2EK2
      sNTt+cyvFz0q1drS72t+wO9mJfiMkxE+SyweI7F/E6FZr5xz2RKLhXL9Wd1qQFxZNJUk4dr0
      0tSRMgR2PErQmWbN3i1f+BqmaT61lR90C7DiTPPBlUWI+i7Pe3rXtpGOTpC7u0gmgM7myJeu
      dGu3rmfaMsmfu0mTqG91lu0pkgNr8S7dwahViRsW5f42QkvgpuLYPR2s2bYBN/rF05hPOx2A
      FdaaaaIpKshWPnvuoSsTI3pfxWtraeLPXtrCO2eHqHgh6zubOLSz70u/nmEYrNnUT6a3k0qp
      jLg75VhazONtWUshVyCZSJJJxmjuWYsbjSBDie3YX1DyV4OeBVphSinOXB7iFydHlo40vyfp
      Cv761V1LG9V+9/vCMHykwaJSiukbw+ROXccu1BBAaApUbys9X9uHG4lw+9R5quPzDHz3edyn
      7KDbh6FbgBUmhGDv9gFcx+S9i2MslnyEgK5MlG/s30BHW+Zzv+9RK//c6ASFdy9j++HS1KgZ
      KtTQLGOcoe+bz+I2p5B+iLnCC1JPim4BnhClFDXPo1yuYhiCeCyGvYynJP8uKSUXfvVbGJlH
      oLBch2hVLQUhNAXp7x6gtXvtQx8x8jTSLcATcm9FN+KuTDdj9s441ukRzLs7TKVlUFnXQqxa
      v/+ZoaK6mEf0dD7Vszq/r2WJuVKK8O6dXsoQ+XgbFe33JKUkf3MMEXy8oc4IJIHnL02xKqg/
      Zd9gHroFUEpy4q3f0NS7l8WRs+R9gwMH9nHyxEe4kRRf//phjMa5kaxqQgiEaSBcG1X2lro9
      3PfzCSIWLR2fHnx/1T10CzA7ehMSrchyFhnp5NDezdw89RHrD3yd9ijkfUkQBIT3bePVngwh
      BM1b+jCbkyjLQAHSMesPnwBSQGR3P6nPOUP/q+yhW4DRyQnKhQqz8yUSjqBUEDhNSfK5HPg+
      rmVgGfp06NUis6Ydvn+Y+SvDeIUSQc0jVgnxWhwSu9fTuXmgofr+9zzSLJBfK5EtSErzQ4xn
      Jc/u38n5D08Qae5m2+a++t1FzwKtKkoppJR4tRphGOK47oo/hria6GlQraHpWqk1NB0AraHp
      AGgNTQdAa2g6AFpD0wHQGpoOgNbQdAC0hqYDoDU0HQCtoekAaA1NB0BraDoAWkPTAdAamg6A
      1tB0ALSGpgOgNTQdAK2h6QBoDU0HQGtoOgBaQ9MB0BqaDoDW0HQAtIb2CAFQ3DtTq37aWP3X
      Ukoe81lbmrZsHvps0PGhG9wamyaW7EAWR1msCg49t58T731AJJ7hhecP6tOhtVXvC1sAKSWe
      533qkNv2zh5sWaXi5/HMVp7dvZ6r739A776XaLYCCoEkDEN9OrS2qj2wBajVavzoRz+iq6sL
      0zR5+eWXl74mEWzbvYdTpy9hWy7VsoMdj1Eul1FBgG0IDN0EaKvclxoDnDt3jnQ6/Yk/mx0f
      4fzFa/T2b6Iz43B9rMiOZw9RG72A0bSGqPngv8Vc01aDB54O7fs+x48f5+DBg0QiX/4vZ76f
      Ph1aW82+sFZeuXKFn/3sZwwNDa3E9WjainpgACzLYvPmzViWRSqVWqlr0rQV88AAFItFSqUS
      3/ve9/jggw9W6po0bcU8MACRSIRNmzZRqVTYtWvXSl2Tpq2YBwYgCALOnz/P5OQkt2/fXqFL
      0rSV88AAhGHIc889x+DgIEeOHFmpa9K0FfPAALz++uvcuXMHwzB48803V+qaNG3FfOEYYHBw
      kOeff554PL5S16RpK+aBC2H37/Z82FVdvRCmrWYP3At0r8Lr7QzaV5W+LWsNTQdAa2g6AFpD
      0wHQGpoOgNbQdAC0hqYDoDU0HQCtoekAaA1NB0BraDoAWkPTAdAamg6A1tB0ALSG9kgBuP95
      gc/6taatdg99OvTk8A2u35mkuaUbWRxjrgSHDx/gxHvvEU2289yhPeinCLTV7qED0LFuPYZt
      cG10FiNM8sz2Ji699y5rd76AP3SWgq+IG/W/K0A/DaatVg9dM2fvDHL9ziKH9+9CSZ8w8DFs
      Gz/wkUpiCP0kmbb6PXQAisUySnrcHJknEwu4MDjLjsOHyd44hec2EbcEhmHou7+2qj3wofgv
      614RQohP/Br0Q/Ha6vbQY4D73d/V0d0e7Wmib8taQ9MB0BqaDoDW0HQAtIamA6A1NB0AraHp
      AGgNTQdAa2g6AFpD0wHQGpoOgNbQdAC0hqYDoDU0HQCtoekAaA1NB0BraDoAWkPTAdAamg6A
      1tB0ALSGpgOgNTQdAK2h6QBoDU0HQGtoDx0ApSRT45NIYHFmgsHhURQwOnSDqdns8l2hpj1G
      Dx2AxelRPjh5jlAFnDt/hdriGNcunuPWQsiNC2epyeW8TE17PB46AJk1vfSt6QBZxoq307Ou
      h9z4FN0D62mJR6kEkiAICMNwOa9X05bVQ58Nmp2dZHTiDqnxNQS5O5w7P0Xf1k1cOP0BbuCz
      2TawhLF0OK6mrUYPfTq0V6tQqXpYtoMpQqqeIp1OUswtYjgx4lEX0KdDa6vbshyP/iA6ANpq
      pmul1tB0ALSGpgOgNTQdAK2h6QBoDU0HQGtoOgBaQ9MB0BqaDoDW0HQAtIamA6A1NB0AraHp
      AGgNTQdAa2g6AFpD0wHQGpoOgNbQdAC0hqYDoDU0HQCtoekAaA1t2QOwMDdNrlhe7mI17bFY
      1gB4i3c4dXmYj46fwH+sh61o2vJY1gCUFxbYsHMfa1IxSr4+EU5b/ZY1ALHmZoauXWYmXyRm
      6eGFtvot+8lwk6O3sRMZWptTgD4ZTlvdHtvRiEopwjDkXvFCiMfxMpr2SB5rAODxtABKKaSU
      mKa5bGUCBEGAZT30gdm6zKewzOW9uvvcu+P/7n+Xs3xdpi7zkct73KdDa9pqtmIj0/vHA49K
      KbVsZX1cpkQue5lq2ct8aihFGK7uqXCl1MoEIDs1xNE3j3H89BUetTqEXoXjb73OlcHpZbk2
      gDDw+OC3b3H0N2+yUKguU6mS0x+8z7Ff/4qJ+coylQmBV+HcR8cf+XO8R4Uex46+wfEPz1Dz
      l+uvs1KcPv5bjp86Ra7sL1OZMHHnFu+9/y7/8stjy/D+JSePvbkyARgemuLIN17BrhUf+cIN
      22XP/v1IL1iWawMwLYeDh55FIrHM5fpIDLo725nJ5nHd5RusXz13ltb+/mUrTwYBtWoFoeTy
      TVSoGteujuCXa8tT3l2d69azuSvNuk3bePRRgKBQya9MAGJ2SL5UoeJ5j1yWEMayX7QMPI69
      cYwjX3uJZNRZnkJVSKqjlxee2cTY+PzyFBlUmMjmGbp0mWJtee7WwnJ48euvkBQ+c4ulZSkT
      LNb1r2fnlk6GRiaWqUxQMuDi4AK713c8emGyhnLbVyYAAzv3MHz2A9Zt3vbIL+hVi1y6fJOF
      hTGqwfL0MRWKVDrFxXMXKNeWq8lWXL9wmjvTVdb3ti1LicKK8u1vvcqRF46QWK5WRSmuXT5H
      ScRpbY4tT5nCorenievDc2wa6FqeMoHQ99i0fevyzAIZLv1dKT0LpDU2vT9Ba2g6AFpD0wHQ
      GpoOwJcQ+B5esFxz5PdRinK5/IlFPSnlAxf5qpXqZ08l3918+EXyuSz+5yxQ3VtglKFPpepR
      qXy8JnJvT9c9tWqZQNavJAyXb0p6pZk//OEPf/ikL+JJkbUc/+Nv/4Yf/ctRunp7KSzMYrlR
      fvbjn9Da2UVQyTM1X6B88xK3vQgtkYD/89M36Iz6HLs0QVsM5nIlYo7J5MQkxUqVhcU8yUSE
      4VtDuNEY1ZpPuVjEMgXVms/sxCiecJBehXwhz89e+xcG+gZQGFz58A3+6fW3GJvJc+fyBaKZ
      VmQYIEKPAIvFmQn++Se/Zv2mdYRBgBRw7PWf89/+699ipZJMz0ySikaYmp6jXCrgY+OXc0zO
      ZUmnE8zdOs1/+bufs2vnViYnJkmlEpSKJSpVn0jE4Zf/8De8cWWO7a01fvXuKMOXz7Blx1Ze
      ++n/5Nh7p/DMOM3JOIFX5fjRnzNei9GaSnD23Xdo7+5keHiEZCpNdnaabKHCOyuLkV0AAAO/
      SURBVL85Sqp9DeXsHIWaJBGLPOkf+ac8ts1wTwPDTfOnf/QHHL0yT3HoHGfzPqV3P2LsxmU2
      7n2GyuwN3nnnON946ZvYGVWfMjz7PuXp60R69/L3//gejg07dmzm3NUZZqdvk0o47N48wPBU
      Adu2wXaZO3+K3d96hVyuwOx8GemVaaLAuMyQdKv8r//9T/z5X/4lju1SyZfYtKGPt3/6U9J9
      A1z+8ALP9seZia/h5InzOJ7P6K2LXL9+m8Pf+QGvfO/7TI5nefnZnfzjPx/l4gcfYFghntuC
      ZTXhLdzAsC2+9af/CTUzTSKW4bX/+yOaWpJcvLmWs799h1f//N9xeEcPwyUXwjuEqgupFErV
      WxRbCUJl0d+d5I23TpIgS80Pmblynsunz5IJS8ws/JiZQpXEpV5mhq9x8PALXL1ynY6Nfbz2
      k1/w3CuvsOaFZ5/wT/zTGr4LpO7+a3Y+x779+yGsMdDdw8a+Nk6cvYFNQNn7uGvRtWkv333l
      JYzQw42nWd+eolgJObj/RXbs2UF/ZyvzMwuUlEVn3waqU9cZeG4nP3vtXTpSLj2bdpCwAkg2
      8dd//W9RhUVyVUnUtUi29PEXP3iVX7x2lO51axjY0EelWmJmfoH89Ay9W3fR3tzEeCHCnbyk
      LfnxHVUpRRAEOJlm9u3Zwb79+4mrGnOjo7S2r8NF0rWuiw0btxAGAYf2biW/sMjOA69wZPcm
      5keuMZfLUZwY5spU6RPdrI07n+OlvX384tfvsbg4z/zcIgrBrv17CasVfN9ncXICy03R7Aii
      6S62btlET28H/QN9HDm0kwsnzvEYOpGPrOHXAWqFLOOLVbpaXH75m7fY/ewL2KVphqZCImqa
      2XLAvh27sFMZMlGT4TuTdLUmmSqEFCevMVGwObh7PT4xioU57NAj1drKe2/9lt6tB4irHE5r
      N1ODV9n5zB7eOXaUlnVbyLghHb0bGBu+RcwVqFg7TmWa909fYeeBI6TlIhduz5MwKszkAw4d
      OcKF948iox20elMstD7Dy/t6UEoxeG2QDZv6GBwexVQB6WQcZcfJzS9iyixXbk3z4te/QVQV
      GZ0LSFk53j5xlZdfeYnsYoWB3g5mJ26j4m2kKDAyWcCOpzG8In3rBxi8cJKrI7Mcfuklzr/7
      BiLRweZ17Zw+d4kdzxzgtR/9hL/6jz/gnXc/ZPveZymMXaOa6KQ7UmUkW6M6N05i7UYO7t2x
      DFsYllfDB+BpND8zQ7q1Dct48tWpVi4wPp1joL/7SV/KQ9EB0Bra/wfPwlWs5HuPPwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Wealth and Home Life' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
